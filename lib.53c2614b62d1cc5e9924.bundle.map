{"version":3,"sources":["webpack:///./~/chomsky/~/rxjs/src/Observable.ts","webpack:///./~/chomsky/~/rxjs/src/Subscriber.ts","webpack:///./~/chomsky/~/rxjs/src/OuterSubscriber.ts","webpack:///./~/chomsky/~/rxjs/src/util/subscribeToResult.ts","webpack:///./~/chomsky/~/rxjs/src/util/errorObject.ts","webpack:///./~/chomsky/~/rxjs/src/Subject.ts","webpack:///./~/chomsky/~/rxjs/src/Subscription.ts","webpack:///./~/chomsky/~/rxjs/src/util/tryCatch.ts","webpack:///./~/chomsky/~/rxjs/src/scheduler/async.ts","webpack:///./~/chomsky/~/rxjs/src/util/root.ts","webpack:///./~/chomsky/~/rxjs/src/observable/ArrayObservable.ts","webpack:///./~/chomsky/~/rxjs/src/observable/EmptyObservable.ts","webpack:///./~/chomsky/~/rxjs/src/util/isArray.ts","webpack:///./~/chomsky/~/rxjs/src/util/isScheduler.ts","webpack:///./~/chomsky/~/rxjs/src/operator/multicast.ts","webpack:///./~/chomsky/~/rxjs/src/symbol/iterator.ts","webpack:///./~/chomsky/~/rxjs/src/AsyncSubject.ts","webpack:///./~/chomsky/~/rxjs/src/Notification.ts","webpack:///./~/chomsky/~/rxjs/src/operator/mergeAll.ts","webpack:///./~/chomsky/~/rxjs/src/scheduler/FutureAction.ts","webpack:///./~/chomsky/~/rxjs/src/symbol/rxSubscriber.ts","webpack:///./~/chomsky/~/rxjs/src/util/EmptyError.ts","webpack:///./~/chomsky/~/rxjs/src/util/isDate.ts","webpack:///./~/chomsky/~/rxjs/src/util/isFunction.ts","webpack:///./~/symbol-observable/index.js","webpack:///./src/chomsky-ng2.js","webpack:///./src/services/translate.service.js","webpack:///./~/chomsky/~/rxjs/src/observable/ScalarObservable.ts","webpack:///./~/chomsky/~/rxjs/src/operator/combineLatest.ts","webpack:///./~/chomsky/~/rxjs/src/operator/concat.ts","webpack:///./~/chomsky/~/rxjs/src/operator/observeOn.ts","webpack:///./~/chomsky/~/rxjs/src/operator/zip.ts","webpack:///./~/chomsky/~/rxjs/src/scheduler/QueueScheduler.ts","webpack:///./~/chomsky/~/rxjs/src/util/ArgumentOutOfRangeError.ts","webpack:///./~/chomsky/~/rxjs/src/util/ObjectUnsubscribedError.ts","webpack:///./~/chomsky/~/rxjs/src/util/isNumeric.ts","webpack:///./~/chomsky/lib/object-assign-deep.js","webpack:///./~/chomsky/~/rxjs/src/BehaviorSubject.ts","webpack:///./~/chomsky/~/rxjs/src/ReplaySubject.ts","webpack:///./~/chomsky/~/rxjs/src/observable/ConnectableObservable.ts","webpack:///./~/chomsky/~/rxjs/src/observable/PromiseObservable.ts","webpack:///./~/chomsky/~/rxjs/src/operator/filter.ts","webpack:///./~/chomsky/~/rxjs/src/operator/map.ts","webpack:///./~/chomsky/~/rxjs/src/operator/merge.ts","webpack:///./~/chomsky/~/rxjs/src/operator/mergeMap.ts","webpack:///./~/chomsky/~/rxjs/src/operator/mergeMapTo.ts","webpack:///./~/chomsky/~/rxjs/src/operator/publishReplay.ts","webpack:///./~/chomsky/~/rxjs/src/operator/race.ts","webpack:///./~/chomsky/~/rxjs/src/scheduler/asap.ts","webpack:///./~/chomsky/~/rxjs/src/scheduler/queue.ts","webpack:///./~/chomsky/~/rxjs/src/util/UnsubscriptionError.ts","webpack:///./~/chomsky/~/rxjs/src/util/isObject.ts","webpack:///./~/chomsky/~/rxjs/src/util/isPromise.ts","webpack:///./~/chomsky/~/rxjs/src/util/noop.ts","webpack:///./~/chomsky/~/rxjs/src/util/throwError.ts","webpack:///./src/directives/translate.directive.js","webpack:///./src/pipes/translate.pipe.js","webpack:///./~/chomsky/lib/asyncloader.js","webpack:///./~/chomsky/lib/chomsky.js","webpack:///./~/chomsky/lib/dictionarymanager.js","webpack:///./~/chomsky/lib/formats.js","webpack:///./~/chomsky/~/rxjs/src/InnerSubscriber.ts","webpack:///./~/chomsky/~/rxjs/src/Observer.ts","webpack:///./~/chomsky/~/rxjs/src/Operator.ts","webpack:///./~/chomsky/~/rxjs/src/Rx.ts","webpack:///./~/chomsky/~/rxjs/src/SubjectSubscription.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/bindCallback.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/bindNodeCallback.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/combineLatest.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/concat.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/defer.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/empty.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/forkJoin.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/from.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/fromEvent.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/fromEventPattern.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/fromPromise.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/generate.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/interval.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/merge.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/never.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/of.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/race.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/range.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/throw.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/timer.ts","webpack:///./~/chomsky/~/rxjs/src/add/observable/zip.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/audit.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/auditTime.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/buffer.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/bufferCount.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/bufferTime.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/bufferToggle.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/bufferWhen.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/cache.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/catch.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/combineAll.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/combineLatest.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/concat.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/concatAll.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/concatMap.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/concatMapTo.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/count.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/debounce.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/debounceTime.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/defaultIfEmpty.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/delay.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/delayWhen.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/dematerialize.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/distinctUntilChanged.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/do.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/every.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/expand.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/filter.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/finally.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/first.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/groupBy.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/ignoreElements.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/last.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/let.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/map.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/mapTo.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/materialize.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/merge.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/mergeAll.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/mergeMap.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/mergeMapTo.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/multicast.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/observeOn.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/partition.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/pluck.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/publish.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/publishBehavior.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/publishLast.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/publishReplay.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/race.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/reduce.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/repeat.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/retry.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/retryWhen.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/sample.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/sampleTime.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/scan.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/share.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/single.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/skip.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/skipUntil.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/skipWhile.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/startWith.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/subscribeOn.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/switch.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/switchMap.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/switchMapTo.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/take.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/takeLast.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/takeUntil.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/takeWhile.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/throttle.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/throttleTime.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/timeout.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/timeoutWith.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/toArray.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/toPromise.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/window.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/windowCount.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/windowTime.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/windowToggle.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/windowWhen.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/withLatestFrom.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/zip.ts","webpack:///./~/chomsky/~/rxjs/src/add/operator/zipAll.ts","webpack:///./~/chomsky/~/rxjs/src/observable/ArrayLikeObservable.ts","webpack:///./~/chomsky/~/rxjs/src/observable/BoundCallbackObservable.ts","webpack:///./~/chomsky/~/rxjs/src/observable/BoundNodeCallbackObservable.ts","webpack:///./~/chomsky/~/rxjs/src/observable/DeferObservable.ts","webpack:///./~/chomsky/~/rxjs/src/observable/ErrorObservable.ts","webpack:///./~/chomsky/~/rxjs/src/observable/ForkJoinObservable.ts","webpack:///./~/chomsky/~/rxjs/src/observable/FromEventObservable.ts","webpack:///./~/chomsky/~/rxjs/src/observable/FromEventPatternObservable.ts","webpack:///./~/chomsky/~/rxjs/src/observable/FromObservable.ts","webpack:///./~/chomsky/~/rxjs/src/observable/GenerateObservable.ts","webpack:///./~/chomsky/~/rxjs/src/observable/IntervalObservable.ts","webpack:///./~/chomsky/~/rxjs/src/observable/IteratorObservable.ts","webpack:///./~/chomsky/~/rxjs/src/observable/NeverObservable.ts","webpack:///./~/chomsky/~/rxjs/src/observable/RangeObservable.ts","webpack:///./~/chomsky/~/rxjs/src/observable/SubscribeOnObservable.ts","webpack:///./~/chomsky/~/rxjs/src/observable/TimerObservable.ts","webpack:///./~/chomsky/~/rxjs/src/observable/bindCallback.ts","webpack:///./~/chomsky/~/rxjs/src/observable/bindNodeCallback.ts","webpack:///./~/chomsky/~/rxjs/src/observable/concat.ts","webpack:///./~/chomsky/~/rxjs/src/observable/defer.ts","webpack:///./~/chomsky/~/rxjs/src/observable/empty.ts","webpack:///./~/chomsky/~/rxjs/src/observable/forkJoin.ts","webpack:///./~/chomsky/~/rxjs/src/observable/from.ts","webpack:///./~/chomsky/~/rxjs/src/observable/fromEvent.ts","webpack:///./~/chomsky/~/rxjs/src/observable/fromEventPattern.ts","webpack:///./~/chomsky/~/rxjs/src/observable/fromPromise.ts","webpack:///./~/chomsky/~/rxjs/src/observable/interval.ts","webpack:///./~/chomsky/~/rxjs/src/observable/merge.ts","webpack:///./~/chomsky/~/rxjs/src/observable/never.ts","webpack:///./~/chomsky/~/rxjs/src/observable/of.ts","webpack:///./~/chomsky/~/rxjs/src/observable/range.ts","webpack:///./~/chomsky/~/rxjs/src/observable/throw.ts","webpack:///./~/chomsky/~/rxjs/src/observable/timer.ts","webpack:///./~/chomsky/~/rxjs/src/observable/zip.ts","webpack:///./~/chomsky/~/rxjs/src/operator/audit.ts","webpack:///./~/chomsky/~/rxjs/src/operator/auditTime.ts","webpack:///./~/chomsky/~/rxjs/src/operator/buffer.ts","webpack:///./~/chomsky/~/rxjs/src/operator/bufferCount.ts","webpack:///./~/chomsky/~/rxjs/src/operator/bufferTime.ts","webpack:///./~/chomsky/~/rxjs/src/operator/bufferToggle.ts","webpack:///./~/chomsky/~/rxjs/src/operator/bufferWhen.ts","webpack:///./~/chomsky/~/rxjs/src/operator/cache.ts","webpack:///./~/chomsky/~/rxjs/src/operator/catch.ts","webpack:///./~/chomsky/~/rxjs/src/operator/combineAll.ts","webpack:///./~/chomsky/~/rxjs/src/operator/concatAll.ts","webpack:///./~/chomsky/~/rxjs/src/operator/concatMap.ts","webpack:///./~/chomsky/~/rxjs/src/operator/concatMapTo.ts","webpack:///./~/chomsky/~/rxjs/src/operator/count.ts","webpack:///./~/chomsky/~/rxjs/src/operator/debounce.ts","webpack:///./~/chomsky/~/rxjs/src/operator/debounceTime.ts","webpack:///./~/chomsky/~/rxjs/src/operator/defaultIfEmpty.ts","webpack:///./~/chomsky/~/rxjs/src/operator/delay.ts","webpack:///./~/chomsky/~/rxjs/src/operator/delayWhen.ts","webpack:///./~/chomsky/~/rxjs/src/operator/dematerialize.ts","webpack:///./~/chomsky/~/rxjs/src/operator/distinctUntilChanged.ts","webpack:///./~/chomsky/~/rxjs/src/operator/do.ts","webpack:///./~/chomsky/~/rxjs/src/operator/every.ts","webpack:///./~/chomsky/~/rxjs/src/operator/expand.ts","webpack:///./~/chomsky/~/rxjs/src/operator/finally.ts","webpack:///./~/chomsky/~/rxjs/src/operator/first.ts","webpack:///./~/chomsky/~/rxjs/src/operator/groupBy.ts","webpack:///./~/chomsky/~/rxjs/src/operator/ignoreElements.ts","webpack:///./~/chomsky/~/rxjs/src/operator/last.ts","webpack:///./~/chomsky/~/rxjs/src/operator/let.ts","webpack:///./~/chomsky/~/rxjs/src/operator/mapTo.ts","webpack:///./~/chomsky/~/rxjs/src/operator/materialize.ts","webpack:///./~/chomsky/~/rxjs/src/operator/partition.ts","webpack:///./~/chomsky/~/rxjs/src/operator/pluck.ts","webpack:///./~/chomsky/~/rxjs/src/operator/publish.ts","webpack:///./~/chomsky/~/rxjs/src/operator/publishBehavior.ts","webpack:///./~/chomsky/~/rxjs/src/operator/publishLast.ts","webpack:///./~/chomsky/~/rxjs/src/operator/reduce.ts","webpack:///./~/chomsky/~/rxjs/src/operator/repeat.ts","webpack:///./~/chomsky/~/rxjs/src/operator/retry.ts","webpack:///./~/chomsky/~/rxjs/src/operator/retryWhen.ts","webpack:///./~/chomsky/~/rxjs/src/operator/sample.ts","webpack:///./~/chomsky/~/rxjs/src/operator/sampleTime.ts","webpack:///./~/chomsky/~/rxjs/src/operator/scan.ts","webpack:///./~/chomsky/~/rxjs/src/operator/share.ts","webpack:///./~/chomsky/~/rxjs/src/operator/single.ts","webpack:///./~/chomsky/~/rxjs/src/operator/skip.ts","webpack:///./~/chomsky/~/rxjs/src/operator/skipUntil.ts","webpack:///./~/chomsky/~/rxjs/src/operator/skipWhile.ts","webpack:///./~/chomsky/~/rxjs/src/operator/startWith.ts","webpack:///./~/chomsky/~/rxjs/src/operator/subscribeOn.ts","webpack:///./~/chomsky/~/rxjs/src/operator/switch.ts","webpack:///./~/chomsky/~/rxjs/src/operator/switchMap.ts","webpack:///./~/chomsky/~/rxjs/src/operator/switchMapTo.ts","webpack:///./~/chomsky/~/rxjs/src/operator/take.ts","webpack:///./~/chomsky/~/rxjs/src/operator/takeLast.ts","webpack:///./~/chomsky/~/rxjs/src/operator/takeUntil.ts","webpack:///./~/chomsky/~/rxjs/src/operator/takeWhile.ts","webpack:///./~/chomsky/~/rxjs/src/operator/throttle.ts","webpack:///./~/chomsky/~/rxjs/src/operator/throttleTime.ts","webpack:///./~/chomsky/~/rxjs/src/operator/timeout.ts","webpack:///./~/chomsky/~/rxjs/src/operator/timeoutWith.ts","webpack:///./~/chomsky/~/rxjs/src/operator/toArray.ts","webpack:///./~/chomsky/~/rxjs/src/operator/toPromise.ts","webpack:///./~/chomsky/~/rxjs/src/operator/window.ts","webpack:///./~/chomsky/~/rxjs/src/operator/windowCount.ts","webpack:///./~/chomsky/~/rxjs/src/operator/windowTime.ts","webpack:///./~/chomsky/~/rxjs/src/operator/windowToggle.ts","webpack:///./~/chomsky/~/rxjs/src/operator/windowWhen.ts","webpack:///./~/chomsky/~/rxjs/src/operator/withLatestFrom.ts","webpack:///./~/chomsky/~/rxjs/src/operator/zipAll.ts","webpack:///./~/chomsky/~/rxjs/src/scheduler/AsapAction.ts","webpack:///./~/chomsky/~/rxjs/src/scheduler/AsapScheduler.ts","webpack:///./~/chomsky/~/rxjs/src/scheduler/AsyncScheduler.ts","webpack:///./~/chomsky/~/rxjs/src/scheduler/QueueAction.ts","webpack:///./~/chomsky/~/rxjs/src/util/FastMap.ts","webpack:///./~/chomsky/~/rxjs/src/util/Immediate.ts","webpack:///./~/chomsky/~/rxjs/src/util/Map.ts","webpack:///./~/chomsky/~/rxjs/src/util/MapPolyfill.ts","webpack:///./~/chomsky/~/rxjs/src/util/not.ts","webpack:///./~/chomsky/~/rxjs/src/util/toSubscriber.ts","webpack:///./~/symbol-observable/ponyfill.js"],"names":[],"mappings":"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CA;AACA;AACA,sBAAqB;AACrB;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,8BAA6B;AAC7B;AACA,8BAA6B;AAC7B;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,mBAAmB;AAC9C;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,yCAAwC,IAAI,IAAI;AAChD;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA,EAAC;;AAED,2B;;;;;;AC1PA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA,qGAAoG,mBAAmB,EAAE,mBAAmB,kGAAkG;;AAE9O,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB;;AAEA,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,yDAAwD;AACxD;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA,uGAAsG,aAAa;AACnH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wGAAuG;AACvG,kBAAiB;AACjB;AACA,2FAA0F;AAC1F;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,EAAC,G;;;;;;AC5FD;;AAEA;AACA;AACA,EAAC;AACD;;AAEA,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB;;AAEA,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;;AAEA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","file":"lib.53c2614b62d1cc5e9924.bundle.js","sourcesContent":["import {PartialObserver} from './Observer';\nimport {Operator} from './Operator';\nimport {Subscriber} from './Subscriber';\nimport {Subscription, AnonymousSubscription, TeardownLogic} from './Subscription';\nimport {root} from './util/root';\nimport {toSubscriber} from './util/toSubscriber';\n\nimport {IfObservable} from './observable/IfObservable';\nimport {ErrorObservable} from './observable/ErrorObservable';\n\nimport * as $$observable from 'symbol-observable';\n\nexport interface Subscribable<T> {\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): AnonymousSubscription;\n}\n\nexport type SubscribableOrPromise<T> = Subscribable<T> | Promise<T>;\nexport type ObservableInput<T> = SubscribableOrPromise<T> | ArrayLike<T>;\n\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  public _isScalar: boolean = false;\n\n  protected source: Observable<any>;\n  protected operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is  called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: <R>(subscriber: Subscriber<R>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   */\n  static create: Function = <T>(subscribe?: <R>(subscriber: Subscriber<R>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  /**\n   * Registers handlers for handling emitted values, error and completions from the observable, and\n   *  executes the observable's subscriber function, which will take action to set up the underlying data stream\n   * @method subscribe\n   * @param {PartialObserver|Function} observerOrNext (optional) either an observer defining all functions to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the observable.\n   * @param {Function} error (optional) a handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled\n   * @param {Function} complete (optional) a handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    sink.add(operator ? operator.call(sink, this) : this._subscribe(sink));\n\n    if (sink.syncErrorThrowable) {\n      sink.syncErrorThrowable = false;\n      if (sink.syncErrorThrown) {\n        throw sink.syncErrorValue;\n      }\n    }\n\n    return sink;\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, PromiseCtor?: typeof Promise): Promise<void> {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor<void>((resolve, reject) => {\n      const subscription = this.subscribe((value) => {\n        if (subscription) {\n          // if there is a subscription, then we can surmise\n          // the next handling is asynchronous. Any errors thrown\n          // need to be rejected explicitly and unsubscribe must be\n          // called manually\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription.unsubscribe();\n          }\n        } else {\n          // if there is NO subscription, then we're getting a nexted\n          // value synchronously during subscription. We can just call it.\n          // If it errors, Observable's `subscribe` imple will ensure the\n          // unsubscription logic is called, then synchronously rethrow the error.\n          // After that, Promise will trap the error and send it\n          // down the rejection path.\n          next(value);\n        }\n      }, reject, resolve);\n    });\n  }\n\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words\n  static if: typeof IfObservable.create;\n  static throw: typeof ErrorObservable.create;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [$$observable]() {\n    return this;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/Observable.ts\n **/","import {isFunction} from './util/isFunction';\nimport {Observer, PartialObserver} from './Observer';\nimport {Subscription} from './Subscription';\nimport {$$rxSubscriber} from './symbol/rxSubscriber';\nimport {empty as emptyObserver} from './Observer';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  public syncErrorValue: any = null;\n  public syncErrorThrown: boolean = false;\n  public syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any>;\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.destination = (<Subscriber<any>> destinationOrNext);\n            (<any> this.destination).add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.isUnsubscribed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  [$$rxSubscriber]() {\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parent: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      context = observerOrNext;\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (isFunction(context.unsubscribe)) {\n        this.add(<() => void> context.unsubscribe.bind(context));\n      }\n      context.unsubscribe = this.unsubscribe.bind(this);\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parent } = this;\n      if (!_parent.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parent, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parent } = this;\n      if (this._error) {\n        if (!_parent.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parent, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parent.syncErrorThrowable) {\n        this.unsubscribe();\n        throw err;\n      } else {\n        _parent.syncErrorValue = err;\n        _parent.syncErrorThrown = true;\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parent } = this;\n      if (this._complete) {\n        if (!_parent.syncErrorThrowable) {\n          this.__tryOrUnsub(this._complete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parent, this._complete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      throw err;\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      parent.syncErrorValue = err;\n      parent.syncErrorThrown = true;\n      return true;\n    }\n    return false;\n  }\n\n  protected _unsubscribe(): void {\n    const { _parent } = this;\n    this._context = null;\n    this._parent = null;\n    _parent.unsubscribe();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/Subscriber.ts\n **/","import {Subscriber} from './Subscriber';\nimport {InnerSubscriber} from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/OuterSubscriber.ts\n **/","import {root} from './root';\nimport {isArray} from './isArray';\nimport {isPromise} from './isPromise';\nimport {Subscriber} from '../Subscriber';\nimport {Observable, ObservableInput} from '../Observable';\nimport {$$iterator} from '../symbol/iterator';\nimport {Subscription} from '../Subscription';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {OuterSubscriber} from '../OuterSubscriber';\n\nimport * as $$observable from 'symbol-observable';\n\nexport function subscribeToResult<T, R>(outerSubscriber: OuterSubscriber<T, R>,\n                                        result: any,\n                                        outerValue?: T,\n                                        outerIndex?: number): Subscription;\nexport function subscribeToResult<T>(outerSubscriber: OuterSubscriber<any, any>,\n                                     result: ObservableInput<T>,\n                                     outerValue?: T,\n                                     outerIndex?: number): Subscription {\n  let destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\n  if (destination.isUnsubscribed) {\n    return;\n  }\n\n  if (result instanceof Observable) {\n    if (result._isScalar) {\n      destination.next((<any>result).value);\n      destination.complete();\n      return;\n    } else {\n      return result.subscribe(destination);\n    }\n  }\n\n  if (isArray(result)) {\n    for (let i = 0, len = result.length; i < len && !destination.isUnsubscribed; i++) {\n      destination.next(result[i]);\n    }\n    if (!destination.isUnsubscribed) {\n      destination.complete();\n    }\n  } else if (isPromise(result)) {\n    result.then(\n      (value) => {\n        if (!destination.isUnsubscribed) {\n          destination.next(<any>value);\n          destination.complete();\n        }\n      },\n      (err: any) => destination.error(err)\n    )\n    .then(null, (err: any) => {\n      // Escaping the Promise trap: globally throw unhandled errors\n      root.setTimeout(() => { throw err; });\n    });\n    return destination;\n  } else if (typeof result[$$iterator] === 'function') {\n    for (let item of <any>result) {\n      destination.next(<any>item);\n      if (destination.isUnsubscribed) {\n        break;\n      }\n    }\n    if (!destination.isUnsubscribed) {\n      destination.complete();\n    }\n  } else if (typeof result[$$observable] === 'function') {\n    const obs = result[$$observable]();\n    if (typeof obs.subscribe !== 'function') {\n      destination.error('invalid observable');\n    } else {\n      return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n    }\n  } else {\n    destination.error(new TypeError('unknown type returned'));\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/subscribeToResult.ts\n **/","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport var errorObject: any = { e: {} };\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/errorObject.ts\n **/","import {Operator} from './Operator';\nimport {Observer} from './Observer';\nimport {Observable} from './Observable';\nimport {Subscriber} from './Subscriber';\nimport {Subscription, ISubscription, TeardownLogic} from './Subscription';\nimport {SubjectSubscription} from './SubjectSubscription';\nimport {$$rxSubscriber} from './symbol/rxSubscriber';\n\nimport {throwError} from './util/throwError';\nimport {ObjectUnsubscribedError} from './util/ObjectUnsubscribedError';\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements Observer<T>, ISubscription {\n\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): Subject<T> => {\n    return new Subject<T>(destination, source);\n  };\n\n  constructor(protected destination?: Observer<T>, protected source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  public observers: Observer<T>[] = [];\n  public isUnsubscribed: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected hasErrored: boolean = false;\n  protected errorValue: any;\n  protected dispatching: boolean = false;\n  protected hasCompleted: boolean = false;\n\n  lift<T, R>(operator: Operator<T, R>): Observable<T> {\n    const subject = new Subject(this.destination || this, this);\n    subject.operator = operator;\n    return <any>subject;\n  }\n\n  add(subscription: TeardownLogic): Subscription {\n    return Subscription.prototype.add.call(this, subscription);\n  }\n\n  remove(subscription: Subscription): void {\n    Subscription.prototype.remove.call(this, subscription);\n  }\n\n  unsubscribe(): void {\n    Subscription.prototype.unsubscribe.call(this);\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      if (subscriber.isUnsubscribed) {\n        return;\n      } else if (this.hasErrored) {\n        return subscriber.error(this.errorValue);\n      } else if (this.hasCompleted) {\n        return subscriber.complete();\n      }\n\n      this.throwIfUnsubscribed();\n\n      const subscription = new SubjectSubscription(this, subscriber);\n\n      this.observers.push(subscriber);\n\n      return subscription;\n    }\n  }\n\n  protected _unsubscribe(): void {\n    this.source = null;\n    this.isStopped = true;\n    this.observers = null;\n    this.destination = null;\n  }\n\n  next(value: T): void {\n    this.throwIfUnsubscribed();\n\n    if (this.isStopped) {\n      return;\n    }\n\n    this.dispatching = true;\n    this._next(value);\n    this.dispatching = false;\n\n    if (this.hasErrored) {\n      this._error(this.errorValue);\n    } else if (this.hasCompleted) {\n      this._complete();\n    }\n  }\n\n  error(err?: any): void {\n    this.throwIfUnsubscribed();\n\n    if (this.isStopped) {\n      return;\n    }\n\n    this.isStopped = true;\n    this.hasErrored = true;\n    this.errorValue = err;\n\n    if (this.dispatching) {\n      return;\n    }\n\n    this._error(err);\n  }\n\n  complete(): void {\n    this.throwIfUnsubscribed();\n\n    if (this.isStopped) {\n      return;\n    }\n\n    this.isStopped = true;\n    this.hasCompleted = true;\n\n    if (this.dispatching) {\n      return;\n    }\n\n    this._complete();\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new SubjectObservable(this);\n    return observable;\n  }\n\n  protected _next(value: T): void {\n    if (this.destination) {\n      this.destination.next(value);\n    } else {\n      this._finalNext(value);\n    }\n  }\n\n  protected _finalNext(value: T): void {\n    let index = -1;\n    const observers = this.observers.slice(0);\n    const len = observers.length;\n\n    while (++index < len) {\n      observers[index].next(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    if (this.destination) {\n      this.destination.error(err);\n    } else {\n      this._finalError(err);\n    }\n  }\n\n  protected _finalError(err: any): void {\n    let index = -1;\n    const observers = this.observers;\n\n    // optimization to block our SubjectSubscriptions from\n    // splicing themselves out of the observers list one by one.\n    this.observers = null;\n    this.isUnsubscribed = true;\n\n    if (observers) {\n      const len = observers.length;\n      while (++index < len) {\n        observers[index].error(err);\n      }\n    }\n\n    this.isUnsubscribed = false;\n\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    if (this.destination) {\n      this.destination.complete();\n    } else {\n      this._finalComplete();\n    }\n  }\n\n  protected _finalComplete(): void {\n    let index = -1;\n    const observers = this.observers;\n\n    // optimization to block our SubjectSubscriptions from\n    // splicing themselves out of the observers list one by one.\n    this.observers = null;\n    this.isUnsubscribed = true;\n\n    if (observers) {\n      const len = observers.length;\n      while (++index < len) {\n        observers[index].complete();\n      }\n    }\n\n    this.isUnsubscribed = false;\n\n    this.unsubscribe();\n  }\n\n  private throwIfUnsubscribed(): void {\n    if (this.isUnsubscribed) {\n      throwError(new ObjectUnsubscribedError());\n    }\n  }\n\n  [$$rxSubscriber]() {\n    return new Subscriber<T>(this);\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubjectObservable<T> extends Observable<T> {\n  constructor(source: Subject<T>) {\n    super();\n    this.source = source;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/Subject.ts\n **/","import {isArray} from './util/isArray';\nimport {isObject} from './util/isObject';\nimport {isFunction} from './util/isFunction';\nimport {tryCatch} from './util/tryCatch';\nimport {errorObject} from './util/errorObject';\nimport {UnsubscriptionError} from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  isUnsubscribed: boolean;\n  add(teardown: TeardownLogic): ISubscription;\n  remove(sub: ISubscription): void;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.isUnsubscribed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public isUnsubscribed: boolean = false;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.isUnsubscribed) {\n      return;\n    }\n\n    this.isUnsubscribed = true;\n\n    const { _unsubscribe, _subscriptions } = (<any> this);\n\n    (<any> this)._subscriptions = null;\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        (errors = errors || []).push(errorObject.e);\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      let index = -1;\n      const len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(err.errors);\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `isUnsubscribed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (\n        teardown === this) || (\n        teardown === Subscription.EMPTY)) {\n      return;\n    }\n\n    let sub = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        sub = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (sub.isUnsubscribed || typeof sub.unsubscribe !== 'function') {\n          break;\n        } else if (this.isUnsubscribed) {\n          sub.unsubscribe();\n        } else {\n          ((<any> this)._subscriptions || ((<any> this)._subscriptions = [])).push(sub);\n        }\n        break;\n      default:\n        throw new Error('Unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    return sub;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n\n    // HACK: This might be redundant because of the logic in `add()`\n    if (subscription == null   || (\n        subscription === this) || (\n        subscription === Subscription.EMPTY)) {\n      return;\n    }\n\n    const subscriptions = (<any> this)._subscriptions;\n\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/Subscription.ts\n **/","import {errorObject} from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/tryCatch.ts\n **/","import {AsyncScheduler} from './AsyncScheduler';\n\nexport const async = new AsyncScheduler();\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/scheduler/async.ts\n **/","let objectTypes = {\n  'boolean': false,\n  'function': true,\n  'object': true,\n  'number': false,\n  'string': false,\n  'undefined': false\n};\n\ndeclare let global: NodeJS.Global;\ndeclare let module: any;\ndeclare let exports: any;\n\ndeclare module NodeJS {\n  interface Global {\n    window: any;\n    global: any;\n  }\n}\n\nexport let root: any = (objectTypes[typeof self] && self) || (objectTypes[typeof window] && window);\n\n/* tslint:disable:no-unused-variable */\nlet freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\nlet freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\nlet freeGlobal = objectTypes[typeof global] && global;\n\nif (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n  root = freeGlobal;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/root.ts\n **/","import {Scheduler} from '../Scheduler';\nimport {Observable} from '../Observable';\nimport {ScalarObservable} from './ScalarObservable';\nimport {EmptyObservable} from './EmptyObservable';\nimport {Subscriber} from '../Subscriber';\nimport {isScheduler} from '../util/isScheduler';\nimport {TeardownLogic} from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayObservable<T> extends Observable<T> {\n\n  static create<T>(array: T[], scheduler?: Scheduler): Observable<T> {\n    return new ArrayObservable(array, scheduler);\n  }\n\n  static of<T>(item1: T, scheduler?: Scheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, scheduler?: Scheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, scheduler?: Scheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, scheduler?: Scheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, scheduler?: Scheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, item6: T, scheduler?: Scheduler): Observable<T>;\n  static of<T>(...array: Array<T | Scheduler>): Observable<T>;\n  /**\n   * Creates an Observable that emits some values you specify as arguments,\n   * immediately one after the other, and then emits a complete notification.\n   *\n   * <span class=\"informal\">Emits the arguments you provide, then completes.\n   * </span>\n   *\n   * <img src=\"./img/of.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the arguments given, and the complete notification thereafter. It can\n   * be used for composing with other Observables, such as with {@link concat}.\n   * By default, it uses a `null` Scheduler, which means the `next`\n   * notifications are sent synchronously, although with a different Scheduler\n   * it is possible to determine when those notifications will be delivered.\n   *\n   * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n   * var numbers = Rx.Observable.of(10, 20, 30);\n   * var letters = Rx.Observable.of('a', 'b', 'c');\n   * var interval = Rx.Observable.interval(1000);\n   * var result = numbers.concat(letters).concat(interval);\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link throw}\n   *\n   * @param {...T} values Arguments that represent `next` values to be emitted.\n   * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n   * the emissions of the `next` notifications.\n   * @return {Observable<T>} An Observable that emits each given input value.\n   * @static true\n   * @name of\n   * @owner Observable\n   */\n  static of<T>(...array: Array<T | Scheduler>): Observable<T> {\n    let scheduler = <Scheduler>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len > 1) {\n      return new ArrayObservable<T>(<any>array, scheduler);\n    } else if (len === 1) {\n      return new ScalarObservable<T>(<any>array[0], scheduler);\n    } else {\n      return new EmptyObservable<T>(scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n\n    const { array, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(array[index]);\n\n    if (subscriber.isUnsubscribed) {\n      return;\n    }\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  value: any;\n\n  constructor(public array: T[], public scheduler?: Scheduler) {\n    super();\n    if (!scheduler && array.length === 1) {\n      this._isScalar = true;\n      this.value = array[0];\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const array = this.array;\n    const count = array.length;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayObservable.dispatch, 0, {\n        array, index, count, subscriber\n      });\n    } else {\n      for (let i = 0; i < count && !subscriber.isUnsubscribed; i++) {\n        subscriber.next(array[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/ArrayObservable.ts\n **/","import {Scheduler} from '../Scheduler';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\nimport {TeardownLogic} from '../Subscription';\n\nexport interface DispatchArg<T> {\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class EmptyObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits a complete notification.\n   *\n   * <span class=\"informal\">Just emits 'complete', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/empty.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the complete notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then complete.</caption>\n   * var result = Rx.Observable.empty().startWith(7);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n   * );\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link never}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n   * the emission of the complete notification.\n   * @return {Observable} An \"empty\" Observable: emits only the complete\n   * notification.\n   * @static true\n   * @name empty\n   * @owner Observable\n   */\n  static create<T>(scheduler?: Scheduler): Observable<T> {\n    return new EmptyObservable<T>(scheduler);\n  }\n\n  static dispatch<T>(arg: DispatchArg<T>) {\n    const { subscriber } = arg;\n    subscriber.complete();\n  }\n\n  constructor(private scheduler?: Scheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber });\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/EmptyObservable.ts\n **/","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/isArray.ts\n **/","import {Scheduler} from '../Scheduler';\nexport function isScheduler<T>(value: any): value is Scheduler {\n  return value && typeof (<any>value).schedule === 'function';\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/isScheduler.ts\n **/","import {Subject} from '../Subject';\nimport {ConnectableObservable} from '../observable/ConnectableObservable';\n\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function} selector - a function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} an Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T>(subjectOrSubjectFactory: Subject<T> | (() => Subject<T>)): ConnectableObservable<T> {\n  let subjectFactory: () => Subject<T>;\n  if (typeof subjectOrSubjectFactory === 'function') {\n    subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;\n  } else {\n    subjectFactory = function subjectFactory() {\n      return <Subject<T>>subjectOrSubjectFactory;\n    };\n  }\n  return new ConnectableObservable(this, subjectFactory);\n}\n\nexport type factoryOrValue<T> = T | (() => T);\n\nexport interface MulticastSignature<T> {\n  (subjectOrSubjectFactory: factoryOrValue<Subject<T>>): ConnectableObservable<T>;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/multicast.ts\n **/","import {root} from '../util/root';\n\nexport let $$iterator: any;\n\nconst Symbol: any = root.Symbol;\n\nif (typeof Symbol === 'function') {\n  if (Symbol.iterator) {\n    $$iterator = Symbol.iterator;\n  } else if (typeof Symbol.for === 'function') {\n    $$iterator = Symbol.for('iterator');\n  }\n} else {\n    if (root.Set && typeof new root.Set()['@@iterator'] === 'function') {\n      // Bug for mozilla version\n      $$iterator = '@@iterator';\n    } else if (root.Map) {\n      // es6-shim specific logic\n      let keys = Object.getOwnPropertyNames(root.Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        let key = keys[i];\n        if (key !== 'entries' && key !== 'size' && root.Map.prototype[key] === root.Map.prototype['entries']) {\n          $$iterator = key;\n          break;\n        }\n      }\n    } else {\n      $$iterator = '@@iterator';\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/symbol/iterator.ts\n **/","import {Subject} from './Subject';\nimport {Subscriber} from './Subscriber';\nimport {TeardownLogic} from './Subscription';\n\n/**\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  value: T = null;\n  hasNext: boolean = false;\n\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n    }\n\n    return super._subscribe(subscriber);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasNext = true;\n  }\n\n  protected _complete(): void {\n    let index = -1;\n    const observers = this.observers;\n    const len = observers.length;\n\n    // optimization to block our SubjectSubscriptions from\n    // splicing themselves out of the observers list one by one.\n    this.isUnsubscribed = true;\n\n    if (this.hasNext) {\n      while (++index < len) {\n        let o = observers[index];\n        o.next(this.value);\n        o.complete();\n      }\n    } else {\n      while (++index < len) {\n        observers[index].complete();\n      }\n    }\n\n    this.isUnsubscribed = false;\n\n    this.unsubscribe();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/AsyncSubject.ts\n **/","import {PartialObserver} from './Observer';\nimport {Observable} from './Observable';\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: string, public value?: T, public exception?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.exception);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.exception);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return Observable.of(this.value);\n      case 'E':\n        return Observable.throw(this.exception);\n      case 'C':\n        return Observable.empty<T>();\n    }\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return this.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` exception.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   */\n  static createComplete(): Notification<any> {\n    return this.completeNotification;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/Notification.ts\n **/","import {Observable} from '../Observable';\nimport {Operator} from '../Operator';\nimport {Observer} from '../Observer';\nimport {Subscription} from '../Subscription';\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): T {\n  return this.lift(new MergeAllOperator<T>(concurrent));\n}\n\nexport interface MergeAllSignature<T> {\n  (concurrent?: number): T;\n}\n\nexport class MergeAllOperator<T> implements Operator<Observable<T>, T> {\n  constructor(private concurrent: number) {\n  }\n\n  call(observer: Observer<T>, source: any): any {\n    return source._subscribe(new MergeAllSubscriber(observer, this.concurrent));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeAllSubscriber<T> extends OuterSubscriber<Observable<T>, T> {\n  private hasCompleted: boolean = false;\n  private buffer: Observable<T>[] = [];\n  private active: number = 0;\n\n  constructor(destination: Observer<T>, private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(observable: Observable<T>) {\n    if (this.active < this.concurrent) {\n      this.active++;\n      this.add(subscribeToResult<Observable<T>, T>(this, observable));\n    } else {\n      this.buffer.push(observable);\n    }\n  }\n\n  protected _complete() {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyComplete(innerSub: Subscription) {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/mergeAll.ts\n **/","import {root} from '../util/root';\nimport {Action} from './Action';\nimport {Scheduler} from '../Scheduler';\nimport {Subscription} from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class FutureAction<T> extends Subscription implements Action<T> {\n\n  public id: number;\n  public state: T;\n  public delay: number;\n  public error: any;\n\n  private pending: boolean = false;\n\n  constructor(public scheduler: Scheduler,\n              public work: (x?: T) => Subscription | void) {\n    super();\n  }\n\n  execute() {\n    if (this.isUnsubscribed) {\n      this.error = new Error('executing a cancelled action');\n    } else {\n      try {\n        this.work(this.state);\n      } catch (e) {\n        this.unsubscribe();\n        this.error = e;\n      }\n    }\n  }\n\n  schedule(state?: T, delay: number = 0): Action<T> {\n    if (this.isUnsubscribed) {\n      return this;\n    }\n    return this._schedule(state, delay);\n  }\n\n  protected _schedule(state?: T, delay: number = 0): Action<T> {\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    const id = this.id;\n    // If this action has an intervalID and the specified delay matches the\n    // delay we used to create the intervalID, don't call `setInterval` again.\n    if (id != null && this.delay === delay) {\n      return this;\n    }\n\n    this.delay = delay;\n\n    // If this action has an intervalID, but was rescheduled with a different\n    // `delay` time, cancel the current intervalID and call `setInterval` with\n    // the new `delay` time.\n    if (id != null) {\n      this.id = null;\n      root.clearInterval(id);\n    }\n\n    //\n    // Important implementation note:\n    //\n    // By default, FutureAction only executes once. However, Actions have the\n    // ability to be rescheduled from within the scheduled callback (mimicking\n    // recursion for asynchronous methods). This allows us to implement single\n    // and repeated actions with the same code path without adding API surface\n    // area, and implement tail-call optimization over asynchronous boundaries.\n    //\n    // However, JS runtimes make a distinction between intervals scheduled by\n    // repeatedly calling `setTimeout` vs. a single `setInterval` call, with\n    // the latter providing a better guarantee of precision.\n    //\n    // In order to accommodate both single and repeatedly rescheduled actions,\n    // use `setInterval` here for both cases. By default, the interval will be\n    // canceled after its first execution, or if the action schedules itself to\n    // run again with a different `delay` time.\n    //\n    // If the action recursively schedules itself to run again with the same\n    // `delay` time, the interval is not canceled, but allowed to loop again.\n    // The check of whether the interval should be canceled or not is run every\n    // time the interval is executed. The first time an action fails to\n    // reschedule itself, the interval is canceled.\n    //\n    this.id = root.setInterval(() => {\n\n      this.pending = false;\n      const {id, scheduler} = this;\n      scheduler.actions.push(this);\n      scheduler.flush();\n\n      //\n      // Terminate this interval if the action didn't reschedule itself.\n      // Don't call `this.unsubscribe()` here, because the action could be\n      // rescheduled later. For example:\n      //\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling this action again */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n\n      if (this.pending === false && id != null) {\n        this.id = null;\n        root.clearInterval(id);\n      }\n    }, delay);\n\n    return this;\n  }\n\n  protected _unsubscribe() {\n\n    this.pending = false;\n    const {id, scheduler} = this;\n    const {actions} = scheduler;\n    const index = actions.indexOf(this);\n\n    if (id != null) {\n      this.id = null;\n      root.clearInterval(id);\n    }\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    this.work = null;\n    this.state = null;\n    this.scheduler = null;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/scheduler/FutureAction.ts\n **/","import {root} from '../util/root';\n\nconst Symbol: any = root.Symbol;\n\nexport const $$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n  Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/symbol/rxSubscriber.ts\n **/","/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport class EmptyError extends Error {\n  constructor() {\n    super('no elements in sequence');\n    this.name = 'EmptyError';\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/EmptyError.ts\n **/","export function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(+value);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/isDate.ts\n **/","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/isFunction.ts\n **/","/* global window */\n'use strict';\n\nmodule.exports = require('./ponyfill')(global || window || this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/symbol-observable/index.js\n ** module id = 87\n ** module chunks = 1\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _translate = require('./pipes/translate.pipe');\n\nObject.keys(_translate).forEach(function (key) {\n  if (key === \"default\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _translate[key];\n    }\n  });\n});\n\nvar _translate2 = require('./directives/translate.directive');\n\nObject.keys(_translate2).forEach(function (key) {\n  if (key === \"default\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _translate2[key];\n    }\n  });\n});\n\nvar _translate3 = require('./services/translate.service');\n\nObject.keys(_translate3).forEach(function (key) {\n  if (key === \"default\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _translate3[key];\n    }\n  });\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jaG9tc2t5LW5nMi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7OztBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7OztBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiJjaG9tc2t5LW5nMi5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMva3N3ZWVuL0RvY3VtZW50cy9naXQvY2hvbXNreS1uZzIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBQaXBlXG5leHBvcnQgKiBmcm9tICcuL3BpcGVzL3RyYW5zbGF0ZS5waXBlJztcbi8vIERpcmVjdGl2ZVxuZXhwb3J0ICogZnJvbSAnLi9kaXJlY3RpdmVzL3RyYW5zbGF0ZS5kaXJlY3RpdmUnO1xuLy8gU2VydmljZVxuZXhwb3J0ICogZnJvbSAnLi9zZXJ2aWNlcy90cmFuc2xhdGUuc2VydmljZSc7XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/chomsky-ng2.js\n ** module id = 88\n ** module chunks = 1\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TRANSLATE_PROVIDERS = exports.TranslateService = undefined;\n\nvar _dec, _class;\n\nvar _core = require('angular2/core');\n\nvar _chomsky = require('chomsky/lib/chomsky');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TranslateService = exports.TranslateService = (_dec = (0, _core.Injectable)(), _dec(_class = function (_Chomsky) {\n    _inherits(TranslateService, _Chomsky);\n\n    function TranslateService() {\n        _classCallCheck(this, TranslateService);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(TranslateService).apply(this, arguments));\n    }\n\n    return TranslateService;\n}(_chomsky.Chomsky)) || _class);\nvar TRANSLATE_PROVIDERS = exports.TRANSLATE_PROVIDERS = [new _core.Provider(TranslateService, { useClass: TranslateService })];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9zZXJ2aWNlcy90cmFuc2xhdGUuc2VydmljZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7SUFHYSxnQixXQUFBLGdCLFdBRFosdUI7Ozs7Ozs7Ozs7O0FBSU0sSUFBTSxvREFBc0IsQ0FDL0IsbUJBQWEsZ0JBQWIsRUFBK0IsRUFBRSxVQUFVLGdCQUFaLEVBQS9CLENBRCtCLENBQTVCIiwiZmlsZSI6InRyYW5zbGF0ZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9rc3dlZW4vRG9jdW1lbnRzL2dpdC9jaG9tc2t5LW5nMiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIFByb3ZpZGVyIH0gZnJvbSAnYW5ndWxhcjIvY29yZSc7XG5pbXBvcnQgeyBDaG9tc2t5IH0gZnJvbSAnY2hvbXNreS9saWIvY2hvbXNreSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBUcmFuc2xhdGVTZXJ2aWNlIGV4dGVuZHMgQ2hvbXNreSB7XG59XG5cbmV4cG9ydCBjb25zdCBUUkFOU0xBVEVfUFJPVklERVJTID0gW1xuICAgIG5ldyBQcm92aWRlcihUcmFuc2xhdGVTZXJ2aWNlLCB7IHVzZUNsYXNzOiBUcmFuc2xhdGVTZXJ2aWNlIH0pXG5dO1xuIl19\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/services/translate.service.js\n ** module id = 89\n ** module chunks = 1\n **/","import {Scheduler} from '../Scheduler';\nimport {Observable} from '../Observable';\nimport {Subscriber} from '../Subscriber';\nimport {TeardownLogic} from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ScalarObservable<T> extends Observable<T> {\n  static create<T>(value: T, scheduler?: Scheduler): ScalarObservable<T> {\n    return new ScalarObservable(value, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { done, value, subscriber } = state;\n\n    if (done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(value);\n    if (subscriber.isUnsubscribed) {\n      return;\n    }\n\n    state.done = true;\n    (<any> this).schedule(state);\n  }\n\n  _isScalar: boolean = true;\n\n  constructor(public value: T, private scheduler?: Scheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const value = this.value;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ScalarObservable.dispatch, 0, {\n        done: false, value, subscriber\n      });\n    } else {\n      subscriber.next(value);\n      if (!subscriber.isUnsubscribed) {\n        subscriber.complete();\n      }\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/ScalarObservable.ts\n **/","import {Observable, ObservableInput} from '../Observable';\nimport {ArrayObservable} from '../observable/ArrayObservable';\nimport {isArray} from '../util/isArray';\nimport {Scheduler} from '../Scheduler';\nimport {isScheduler} from '../util/isScheduler';\nimport {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>> |\n                                                       ((...values: Array<any>) => R)>): Observable<R> {\n  let project: (...values: Array<any>) => R = null;\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = <any>observables[0];\n  }\n\n  observables.unshift(this);\n\n  return new ArrayObservable(observables).lift(new CombineLatestOperator(project));\n}\n\n/* tslint:disable:max-line-length */\nexport interface CombineLatestSignature<T> {\n  <R>(project: (v1: T) => R): Observable<R>;\n  <T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\n  <T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\n  <T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\n  <T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\n  <T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n\n  <T2>(v2: ObservableInput<T2>): Observable<[T, T2]>;\n  <T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\n  <T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\n  <T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\n  <T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\n  <R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n  <R>(array: ObservableInput<any>[]): Observable<R>;\n  <R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): Observable<R>;\n}\n/* tslint:enable:max-line-length */\n\n/* tslint:disable:max-line-length */\nexport function combineLatestStatic<T>(v1: ObservableInput<T>, scheduler?: Scheduler): Observable<[T]>;\nexport function combineLatestStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: Scheduler): Observable<[T, T2]>;\nexport function combineLatestStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: Scheduler): Observable<[T, T2, T3]>;\nexport function combineLatestStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: Scheduler): Observable<[T, T2, T3, T4]>;\nexport function combineLatestStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: Scheduler): Observable<[T, T2, T3, T4, T5]>;\nexport function combineLatestStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: Scheduler): Observable<[T, T2, T3, T4, T5, T6]>;\nexport function combineLatestStatic<T, R>(v1: ObservableInput<T>, project: (v1: T) => R, scheduler?: Scheduler): Observable<R>;\nexport function combineLatestStatic<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R, scheduler?: Scheduler): Observable<R>;\nexport function combineLatestStatic<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R, scheduler?: Scheduler): Observable<R>;\nexport function combineLatestStatic<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R, scheduler?: Scheduler): Observable<R>;\nexport function combineLatestStatic<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R, scheduler?: Scheduler): Observable<R>;\nexport function combineLatestStatic<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R, scheduler?: Scheduler): Observable<R>;\nexport function combineLatestStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R) | Scheduler>): Observable<R>;\nexport function combineLatestStatic<R>(array: ObservableInput<any>[], scheduler?: Scheduler): Observable<R>;\nexport function combineLatestStatic<R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R, scheduler?: Scheduler): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable, in order, and\n * collecting an array of each of the most recent values any time any of the\n * input Observables emits, then either taking that array and passing it as\n * arguments to an optional `project` function and emitting the return value of\n * that, or just emitting the array of recent values directly if there is no\n * `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} observable1 An input Observable to combine with the\n * source Observable.\n * @param {Observable} observable2 An input Observable to combine with the\n * source Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @static true\n * @name combineLatest\n * @owner Observable\n */\nexport function combineLatestStatic<T, R>(...observables: Array<any | ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    (((...values: Array<any>) => R)) |\n                                                    Scheduler>): Observable<R> {\n  let project: (...values: Array<any>) => R =  null;\n  let scheduler: Scheduler = null;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = <Scheduler>observables.pop();\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = <Array<Observable<any>>>observables[0];\n  }\n\n  return new ArrayObservable(observables, scheduler).lift(new CombineLatestOperator<T, R>(project));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private project?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new CombineLatestSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number[] = [];\n\n  constructor(destination: Subscriber<R>, private project?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    const toRespond = this.toRespond;\n    toRespond.push(toRespond.length);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    values[outerIndex] = innerValue;\n    const toRespond = this.toRespond;\n\n    if (toRespond.length > 0) {\n      const found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n\n    if (toRespond.length === 0) {\n      if (this.project) {\n        this._tryProject(values);\n      } else {\n        this.destination.next(values);\n      }\n    }\n  }\n\n  private _tryProject(values: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/combineLatest.ts\n **/","import {Observable, ObservableInput} from '../Observable';\nimport {Scheduler} from '../Scheduler';\nimport {isScheduler} from '../util/isScheduler';\nimport {ArrayObservable} from '../observable/ArrayObservable';\nimport {MergeAllOperator} from './mergeAll';\n\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {Observable} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | Scheduler>): Observable<R> {\n  return concatStatic<T, R>(this, ...observables);\n}\n\n/* tslint:disable:max-line-length */\nexport interface ConcatSignature<T> {\n  (scheduler?: Scheduler): Observable<T>;\n  <T2>(v2: ObservableInput<T2>, scheduler?: Scheduler): Observable<T | T2>;\n  <T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: Scheduler): Observable<T | T2 | T3>;\n  <T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4>;\n  <T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5>;\n  <T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\n  (...observables: Array<ObservableInput<T> | Scheduler>): Observable<T>;\n  <R>(...observables: Array<ObservableInput<any> | Scheduler>): Observable<R>;\n}\n/* tslint:enable:max-line-length */\n\n/* tslint:disable:max-line-length */\nexport function concatStatic<T>(v1: ObservableInput<T>, scheduler?: Scheduler): Observable<T>;\nexport function concatStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: Scheduler): Observable<T | T2>;\nexport function concatStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: Scheduler): Observable<T | T2 | T3>;\nexport function concatStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4>;\nexport function concatStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function concatStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function concatStatic<T>(...observables: (ObservableInput<T> | Scheduler)[]): Observable<T>;\nexport function concatStatic<T, R>(...observables: (ObservableInput<any> | Scheduler)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins multiple Observables together by subscribing to them one at a time and\n * merging their results into the output Observable. Will wait for each\n * Observable to complete before moving on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {Observable} input1 An input Observable to concatenate with others.\n * @param {Observable} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concatStatic<T, R>(...observables: Array<ObservableInput<any> | Scheduler>): Observable<R> {\n  let scheduler: Scheduler = null;\n  let args = <any[]>observables;\n  if (isScheduler(args[observables.length - 1])) {\n    scheduler = args.pop();\n  }\n\n  return new ArrayObservable(observables, scheduler).lift(new MergeAllOperator<R>(1));\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/concat.ts\n **/","import {Observable} from '../Observable';\nimport {Scheduler} from '../Scheduler';\nimport {Operator} from '../Operator';\nimport {PartialObserver} from '../Observer';\nimport {Subscriber} from '../Subscriber';\nimport {Notification} from '../Notification';\n\n/**\n * @see {@link Notification}\n *\n * @param scheduler\n * @param delay\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: Scheduler, delay: number = 0): Observable<T> {\n  return this.lift(new ObserveOnOperator(scheduler, delay));\n}\n\nexport interface ObserveOnSignature<T> {\n  (scheduler: Scheduler, delay?: number): Observable<T>;\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: Scheduler, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  static dispatch(arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: Scheduler,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n     this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch,\n                                      this.delay,\n                                      new ObserveOnMessage(notification, this.destination)));\n   }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/observeOn.ts\n **/","import {Observable, ObservableInput} from '../Observable';\nimport {ArrayObservable} from '../observable/ArrayObservable';\nimport {isArray} from '../util/isArray';\nimport {Operator} from '../Operator';\nimport {PartialObserver} from '../Observer';\nimport {Subscriber} from '../Subscriber';\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\nimport {$$iterator} from '../symbol/iterator';\n\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nexport function zipProto<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  observables.unshift(this);\n  return zipStatic.apply(this, observables);\n}\n\n/* tslint:disable:max-line-length */\nexport interface ZipSignature<T> {\n  <R>(project: (v1: T) => R): Observable<R>;\n  <T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\n  <T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\n  <T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\n  <T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\n  <T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n\n  <T2>(v2: ObservableInput<T2>): Observable<[T, T2]>;\n  <T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\n  <T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\n  <T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\n  <T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\n  <R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n  <R>(array: ObservableInput<any>[]): Observable<R>;\n  <R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): Observable<R>;\n}\n/* tslint:enable:max-line-length */\n\n/* tslint:disable:max-line-length */\nexport function zipStatic<T>(v1: ObservableInput<T>): Observable<[T]>;\nexport function zipStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function zipStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function zipStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function zipStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function zipStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\nexport function zipStatic<T, R>(v1: ObservableInput<T>, project: (v1: T) => R): Observable<R>;\nexport function zipStatic<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\nexport function zipStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function zipStatic<R>(array: ObservableInput<any>[]): Observable<R>;\nexport function zipStatic<R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  const project = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof project === 'function') {\n    observables.pop();\n  }\n  return new ArrayObservable(observables).lift(new ZipOperator(project));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  project: (...values: Array<any>) => R;\n\n  constructor(project?: (...values: Array<any>) => R) {\n    this.project = project;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new ZipSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private index = 0;\n  private values: any;\n  private project: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              project?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.project = (typeof project === 'function') ? project : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    const index = this.index++;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[$$iterator] === 'function') {\n      iterators.push(new StaticIterator(value[$$iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value, index));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        this.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.project) {\n      this._tryProject(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [$$iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>,\n              private index: number) {\n    super(destination);\n  }\n\n  [$$iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/zip.ts\n **/","import {Scheduler} from '../Scheduler';\nimport {QueueAction} from './QueueAction';\nimport {Subscription} from '../Subscription';\nimport {FutureAction} from './FutureAction';\nimport {Action} from './Action';\n\nexport class QueueScheduler implements Scheduler {\n  public active: boolean = false;\n  public actions: QueueAction<any>[] = []; // XXX: use `any` to remove type param `T` from `VirtualTimeScheduler`.\n  public scheduledId: number = null;\n\n  now() {\n    return Date.now();\n  }\n\n  flush() {\n    if (this.active || this.scheduledId) {\n      return;\n    }\n    this.active = true;\n    const actions = this.actions;\n    // XXX: use `any` to remove type param `T` from `VirtualTimeScheduler`.\n    for (let action: QueueAction<any> = null; action = actions.shift(); ) {\n      action.execute();\n      if (action.error) {\n        this.active = false;\n        throw action.error;\n      }\n    }\n    this.active = false;\n  }\n\n  schedule<T>(work: (x?: T) => Subscription | void, delay: number = 0, state?: T): Subscription {\n    return (delay <= 0) ?\n      this.scheduleNow(work, state) :\n      this.scheduleLater(work, delay, state);\n  }\n\n  scheduleNow<T>(work: (x?: T) => Subscription | void, state?: T): Action<T> {\n    return new QueueAction(this, work).schedule(state);\n  }\n\n  scheduleLater<T>(work: (x?: T) => Subscription | void, delay: number, state?: T): Action<T> {\n    return new FutureAction(this, work).schedule(state, delay);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/scheduler/QueueScheduler.ts\n **/","/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport class ArgumentOutOfRangeError extends Error {\n  constructor() {\n    super('argument out of range');\n    this.name = 'ArgumentOutOfRangeError';\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/ArgumentOutOfRangeError.ts\n **/","/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport class ObjectUnsubscribedError extends Error {\n  constructor() {\n    super('object unsubscribed');\n    this.name = 'ObjectUnsubscribedError';\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/ObjectUnsubscribedError.ts\n **/","import {isArray} from '../util/isArray';\n\nexport function isNumeric(val: any): val is number {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/isNumeric.ts\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nexports.isObject = isObject;\nexports.isFunction = isFunction;\nexports.mergeDeep = mergeDeep;\n/**\n * Simple is object check\n * @param obj\n * @returns {boolean}\n */\nfunction isObject(obj) {\n    return obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && !Array.isArray(obj) && obj !== null;\n}\n\n/**\n * Simple is function check\n * @param obj\n * @returns {boolean}\n */\nfunction isFunction(obj) {\n    return !!(obj && obj.constructor && obj.call && obj.apply);\n}\n\n/**\n * Deep merges two JS objects\n * @param target - target object\n * @param source - source object\n */\nfunction mergeDeep(target, source) {\n    var args = Array.prototype.slice.call(arguments);\n    var startIndex = 1;\n    var output = Object(target || {});\n\n    // Cycle the source object arguments.\n    for (var a = startIndex; a < args.length; a++) {\n        var from = args[a];\n        var keys = Object.keys(Object(from));\n\n        // Cycle the properties.\n        for (var k = 0; k < keys.length; k++) {\n            var key = keys[k];\n\n            // Merge arrays.\n            if (Array.isArray(output[key]) || Array.isArray(from[key])) {\n                var o = Array.isArray(output[key]) ? output[key].slice() : [];\n                var f = Array.isArray(from[key]) ? from[key].slice() : [];\n                output[key] = o.concat(f);\n            }\n\n            // Copy functions references.\n            else if (isFunction(output[key]) || isFunction(from[key])) {\n                    output[key] = from[key];\n                }\n\n                // Extend objects.\n                else if (isObject(output[key]) || isObject(from[key])) {\n                        output[key] = mergeDeep(output[key], from[key]);\n                    }\n\n                    // Copy all other types.\n                    else {\n                            output[key] = from[key];\n                        }\n        }\n    }\n    return output;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chomsky/lib/object-assign-deep.js\n ** module id = 222\n ** module chunks = 1\n **/","import {Subject} from './Subject';\nimport {Subscriber} from './Subscriber';\nimport {TeardownLogic, ISubscription} from './Subscription';\nimport {throwError} from './util/throwError';\nimport {ObjectUnsubscribedError} from './util/ObjectUnsubscribedError';\n\n/**\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  getValue(): T {\n    if (this.hasErrored) {\n      throwError(this.errorValue);\n    } else if (this.isUnsubscribed) {\n      throwError(new ObjectUnsubscribedError());\n    } else {\n      return this._value;\n    }\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<ISubscription> subscription).isUnsubscribed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  protected _next(value: T): void {\n    super._next(this._value = value);\n  }\n\n  protected _error(err: any): void {\n    this.hasErrored = true;\n    super._error(this.errorValue = err);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/BehaviorSubject.ts\n **/","import {Subject} from './Subject';\nimport {Scheduler} from './Scheduler';\nimport {queue} from './scheduler/queue';\nimport {Subscriber} from './Subscriber';\nimport {TeardownLogic} from './Subscription';\nimport {ObserveOnSubscriber} from './operator/observeOn';\n\n/**\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private events: ReplayEvent<T>[] = [];\n  private scheduler: Scheduler;\n  private bufferSize: number;\n  private _windowTime: number;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              scheduler?: Scheduler) {\n    super();\n    this.scheduler = scheduler;\n    this.bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n  }\n\n  protected _next(value: T): void {\n    const now = this._getNow();\n    this.events.push(new ReplayEvent(now, value));\n    this._trimBufferThenGetEvents(now);\n    super._next(value);\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const events = this._trimBufferThenGetEvents(this._getNow());\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    let index = -1;\n    const len = events.length;\n    while (++index < len && !subscriber.isUnsubscribed) {\n      subscriber.next(events[index].value);\n    }\n    return super._subscribe(subscriber);\n  }\n\n  private _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(now: number): ReplayEvent<T>[] {\n    const bufferSize = this.bufferSize;\n    const _windowTime = this._windowTime;\n    const events = this.events;\n\n    let eventsCount = events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount += 1;\n    }\n\n    if (eventsCount > bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      events.splice(0, spliceCount);\n    }\n\n    return events;\n  }\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/ReplaySubject.ts\n **/","import {Subject} from '../Subject';\nimport {Observable} from '../Observable';\nimport {Subscriber} from '../Subscriber';\nimport {Subscription} from '../Subscription';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected subject: Subject<T>;\n  protected subscription: Subscription;\n\n  constructor(protected source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject() {\n    const subject = this.subject;\n    if (subject && !subject.isUnsubscribed) {\n      return subject;\n    }\n    return (this.subject = this.subjectFactory());\n  }\n\n  connect(): Subscription {\n    const source = this.source;\n    let subscription = this.subscription;\n    if (subscription && !subscription.isUnsubscribed) {\n      return subscription;\n    }\n    subscription = source.subscribe(this.getSubject());\n    subscription.add(new ConnectableSubscription(this));\n    return (this.subscription = subscription);\n  }\n\n  refCount(): Observable<T> {\n    return new RefCountObservable(this);\n  }\n\n  /**\n   * This method is opened for `ConnectableSubscription`.\n   * Not to call from others.\n   */\n  _closeSubscription(): void {\n    this.subject = null;\n    this.subscription = null;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ConnectableSubscription extends Subscription {\n  constructor(protected connectable: ConnectableObservable<any>) {\n    super();\n  }\n\n  protected _unsubscribe() {\n    const connectable = this.connectable;\n    connectable._closeSubscription();\n    this.connectable = null;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RefCountObservable<T> extends Observable<T> {\n  connection: Subscription;\n\n  constructor(protected connectable: ConnectableObservable<T>,\n              public refCount: number = 0) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    const connectable = this.connectable;\n    const refCountSubscriber: RefCountSubscriber<T> = new RefCountSubscriber(subscriber, this);\n    const subscription = connectable.subscribe(refCountSubscriber);\n    if (!subscription.isUnsubscribed && ++this.refCount === 1) {\n      refCountSubscriber.connection = this.connection = connectable.connect();\n    }\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RefCountSubscriber<T> extends Subscriber<T> {\n  connection: Subscription;\n\n  constructor(public destination: Subscriber<T>,\n              private refCountObservable: RefCountObservable<T>) {\n    super(null);\n    this.connection = refCountObservable.connection;\n    destination.add(this);\n  }\n\n  protected _next(value: T) {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any) {\n    this._resetConnectable();\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    this._resetConnectable();\n    this.destination.complete();\n  }\n\n  private _resetConnectable() {\n    const observable = this.refCountObservable;\n    const obsConnection = observable.connection;\n    const subConnection = this.connection;\n    if (subConnection && subConnection === obsConnection) {\n      observable.refCount = 0;\n      obsConnection.unsubscribe();\n      observable.connection = null;\n      this.unsubscribe();\n    }\n  }\n\n  protected _unsubscribe() {\n    const observable = this.refCountObservable;\n    if (observable.refCount === 0) {\n      return;\n    }\n    if (--observable.refCount === 0) {\n      const obsConnection = observable.connection;\n      const subConnection = this.connection;\n      if (subConnection && subConnection === obsConnection) {\n        obsConnection.unsubscribe();\n        observable.connection = null;\n      }\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/ConnectableObservable.ts\n **/","import {root} from '../util/root';\nimport {Scheduler} from '../Scheduler';\nimport {Observable} from '../Observable';\nimport {Subscriber} from '../Subscriber';\nimport {TeardownLogic} from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class PromiseObservable<T> extends Observable<T> {\n\n  public value: T;\n\n  /**\n   * Converts a Promise to an Observable.\n   *\n   * <span class=\"informal\">Returns an Observable that just emits the Promise's\n   * resolved value, then completes.</span>\n   *\n   * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n   * Observable. If the Promise resolves with a value, the output Observable\n   * emits that resolved value as a `next`, and then completes. If the Promise\n   * is rejected, then the output Observable emits the corresponding Error.\n   *\n   * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n   * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link bindCallback}\n   * @see {@link from}\n   *\n   * @param {Promise<T>} promise The promise to be converted.\n   * @param {Scheduler} [scheduler] An optional Scheduler to use for scheduling\n   * the delivery of the resolved value (or the rejection).\n   * @return {Observable<T>} An Observable which wraps the Promise.\n   * @static true\n   * @name fromPromise\n   * @owner Observable\n   */\n  static create<T>(promise: Promise<T>, scheduler: Scheduler = null): Observable<T> {\n    return new PromiseObservable(promise, scheduler);\n  }\n\n  constructor(private promise: Promise<T>, public scheduler: Scheduler = null) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const promise = this.promise;\n    const scheduler = this.scheduler;\n\n    if (scheduler == null) {\n      if (this._isScalar) {\n        if (!subscriber.isUnsubscribed) {\n          subscriber.next(this.value);\n          subscriber.complete();\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.isUnsubscribed) {\n              subscriber.next(value);\n              subscriber.complete();\n            }\n          },\n          (err) => {\n            if (!subscriber.isUnsubscribed) {\n              subscriber.error(err);\n            }\n          }\n        )\n        .then(null, err => {\n          // escape the promise trap, throw unhandled errors\n          root.setTimeout(() => { throw err; });\n        });\n      }\n    } else {\n      if (this._isScalar) {\n        if (!subscriber.isUnsubscribed) {\n          return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber });\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.isUnsubscribed) {\n              subscriber.add(scheduler.schedule(dispatchNext, 0, { value, subscriber }));\n            }\n          },\n          (err) => {\n            if (!subscriber.isUnsubscribed) {\n              subscriber.add(scheduler.schedule(dispatchError, 0, { err, subscriber }));\n            }\n          })\n          .then(null, (err) => {\n            // escape the promise trap, throw unhandled errors\n            root.setTimeout(() => { throw err; });\n          });\n      }\n    }\n  }\n}\n\ninterface DispatchNextArg<T> {\n  subscriber: Subscriber<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subscriber } = arg;\n  if (!subscriber.isUnsubscribed) {\n    subscriber.next(value);\n    subscriber.complete();\n  }\n}\n\ninterface DispatchErrorArg<T> {\n  subscriber: Subscriber<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subscriber } = arg;\n  if (!subscriber.isUnsubscribed) {\n    subscriber.error(err);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/PromiseObservable.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctKey}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): Observable<T> {\n  return this.lift(new FilterOperator(predicate, thisArg));\n}\n\nexport interface FilterSignature<T> {\n  (predicate: (value: T, index: number) => boolean, thisArg?: any): Observable<T>;\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n    this.predicate = predicate;\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/filter.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): Observable<R> {\n  if (typeof project !== 'function') {\n    throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n  }\n  return this.lift(new MapOperator(project, thisArg));\n}\n\nexport interface MapSignature<T> {\n  <R>(project: (value: T, index: number) => R, thisArg?: any): Observable<R>;\n}\n\nclass MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/map.ts\n **/","import {Observable, ObservableInput} from '../Observable';\nimport {Scheduler} from '../Scheduler';\nimport {ArrayObservable} from '../observable/ArrayObservable';\nimport {MergeAllOperator} from './mergeAll';\nimport {isScheduler} from '../util/isScheduler';\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {Observable} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | Scheduler | number>): Observable<R> {\n  observables.unshift(this);\n  return mergeStatic.apply(this, observables);\n}\n\n/* tslint:disable:max-line-length */\nexport interface MergeSignature<T> {\n  (scheduler?: Scheduler): Observable<T>;\n  (concurrent?: number, scheduler?: Scheduler): Observable<T>;\n  <T2>(v2: ObservableInput<T2>, scheduler?: Scheduler): Observable<T | T2>;\n  <T2>(v2: ObservableInput<T2>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2>;\n  <T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: Scheduler): Observable<T | T2 | T3>;\n  <T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3>;\n  <T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4>;\n  <T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3 | T4>;\n  <T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5>;\n  <T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5>;\n  <T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\n  <T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\n  (...observables: Array<ObservableInput<T> | Scheduler | number>): Observable<T>;\n  <R>(...observables: Array<ObservableInput<any> | Scheduler | number>): Observable<R>;\n}\n/* tslint:enable:max-line-length */\n\n/* tslint:disable:max-line-length */\nexport function mergeStatic<T>(v1: ObservableInput<T>, scheduler?: Scheduler): Observable<T>;\nexport function mergeStatic<T>(v1: ObservableInput<T>, concurrent?: number, scheduler?: Scheduler): Observable<T>;\nexport function mergeStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: Scheduler): Observable<T | T2>;\nexport function mergeStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2>;\nexport function mergeStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: Scheduler): Observable<T | T2 | T3>;\nexport function mergeStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3>;\nexport function mergeStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4>;\nexport function mergeStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3 | T4>;\nexport function mergeStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function mergeStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function mergeStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function mergeStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function mergeStatic<T>(...observables: (ObservableInput<T> | Scheduler | number)[]): Observable<T>;\nexport function mergeStatic<T, R>(...observables: (ObservableInput<any> | Scheduler | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {Observable} input1 An input Observable to merge with others.\n * @param {Observable} input2 An input Observable to merge with others.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function mergeStatic<T, R>(...observables: Array<ObservableInput<any> | Scheduler | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: Scheduler = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <Scheduler>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (observables.length === 1) {\n    return <Observable<R>>observables[0];\n  }\n\n  return new ArrayObservable(<any>observables, scheduler).lift(new MergeAllOperator<R>(concurrent));\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/merge.ts\n **/","import {Observable, ObservableInput} from '../Observable';\nimport {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Subscription} from '../Subscription';\nimport {subscribeToResult} from '../util/subscribeToResult';\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>,\n                                  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                  concurrent: number = Number.POSITIVE_INFINITY): Observable<R> {\n  if (typeof resultSelector === 'number') {\n    concurrent = <number>resultSelector;\n    resultSelector = null;\n  }\n  return this.lift(new MergeMapOperator(project, <any>resultSelector, concurrent));\n}\n\nexport interface MergeMapSignature<T> {\n  <R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): Observable<R>;\n  <I, R>(project: (value: T, index: number) => ObservableInput<I>,\n         resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n         concurrent?: number): Observable<R>;\n}\n\nexport class MergeMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<I>, source: any): any {\n    return source._subscribe(new MergeMapSubscriber(\n      observer, this.project, this.resultSelector, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: Observable<any>[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: any): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: any) {\n    let result: any;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: any, value: T, index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  _notifyResultSelector(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/mergeMap.ts\n **/","import {Observable, ObservableInput, SubscribableOrPromise} from '../Observable';\nimport {Operator} from '../Operator';\nimport {PartialObserver} from '../Observer';\nimport {Subscriber} from '../Subscriber';\nimport {Subscription} from '../Subscription';\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {Observable} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo<T, I, R>(innerObservable: Observable<I>,\n                                    resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                    concurrent: number = Number.POSITIVE_INFINITY): Observable<R> {\n  if (typeof resultSelector === 'number') {\n    concurrent = <number>resultSelector;\n    resultSelector = null;\n  }\n  return this.lift(new MergeMapToOperator(innerObservable, <any>resultSelector, concurrent));\n}\n\nexport interface MergeMapToSignature<T> {\n  <R>(observable: ObservableInput<R>, concurrent?: number): Observable<R>;\n  <I, R>(observable: ObservableInput<I>,\n         resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n         concurrent?: number): Observable<R>;\n}\n\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nexport class MergeMapToOperator<T, I, R> implements Operator<Observable<T>, R> {\n  constructor(private ish: SubscribableOrPromise<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source._subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: Observable<any>[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private ish: SubscribableOrPromise<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: any): void {\n    if (this.active < this.concurrent) {\n      const resultSelector = this.resultSelector;\n      const index = this.index++;\n      const ish = this.ish;\n      const destination = this.destination;\n\n      this.active++;\n      this._innerSub(ish, destination, resultSelector, value, index);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: any,\n                    destination: PartialObserver<I>,\n                    resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n                    value: T,\n                    index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/mergeMapTo.ts\n **/","import {ReplaySubject} from '../ReplaySubject';\nimport {Scheduler} from '../Scheduler';\nimport {multicast} from './multicast';\nimport {ConnectableObservable} from '../observable/ConnectableObservable';\n\n/**\n * @param bufferSize\n * @param windowTime\n * @param scheduler\n * @return {ConnectableObservable<T>}\n * @method publishReplay\n * @owner Observable\n */\nexport function publishReplay<T>(bufferSize: number = Number.POSITIVE_INFINITY,\n                                 windowTime: number = Number.POSITIVE_INFINITY,\n                                 scheduler?: Scheduler): ConnectableObservable<T> {\n  return multicast.call(this, new ReplaySubject<T>(bufferSize, windowTime, scheduler));\n}\n\nexport interface PublishReplaySignature<T> {\n  (bufferSize?: number, windowTime?: number, scheduler?: Scheduler): ConnectableObservable<T>;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/publishReplay.ts\n **/","import {Observable} from '../Observable';\nimport {isArray} from '../util/isArray';\nimport {ArrayObservable} from '../observable/ArrayObservable';\nimport {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Subscription} from '../Subscription';\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `pair([obs1, obs2, ...])`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = <Array<Observable<T>>>observables[0];\n  }\n\n  observables.unshift(this);\n  return raceStatic.apply(this, observables);\n}\n\nexport interface RaceSignature<T> {\n  (...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T>;\n  <R>(...observables: Array<Observable<any> | Array<Observable<T>>>): Observable<R>;\n}\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function raceStatic<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T>;\nexport function raceStatic<T>(...observables: Array<Observable<any> | Array<Observable<any>>>): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `pair([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = <Array<Observable<any>>>observables[0];\n    } else {\n      return <Observable<any>>observables[0];\n    }\n  }\n\n  return new ArrayObservable<T>(<any>observables).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n          this.add(subscription);\n        }\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/race.ts\n **/","import {AsapScheduler} from './AsapScheduler';\n\nexport const asap = new AsapScheduler();\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/scheduler/asap.ts\n **/","import {QueueScheduler} from './QueueScheduler';\n\nexport const queue = new QueueScheduler();\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/scheduler/queue.ts\n **/","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    this.name = 'UnsubscriptionError';\n    this.message = errors ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n')}` : '';\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/UnsubscriptionError.ts\n **/","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/isObject.ts\n **/","export function isPromise<T>(value: any | Promise<T>): value is Promise<T> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/isPromise.ts\n **/","/* tslint:disable:no-empty */\nexport function noop() { }\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/noop.ts\n **/","export function throwError(e: any) { throw e; }\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/throwError.ts\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Translate = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dec, _class;\n\nvar _core = require('angular2/core');\n\nvar _translate = require('../services/translate.service');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Translate = exports.Translate = (_dec = (0, _core.Directive)({\n    selector: '[translate]',\n    inputs: ['translate', 'dynamicValues']\n}), _dec(_class = function () {\n    function Translate(translateService, element) {\n        _classCallCheck(this, Translate);\n\n        this.element = element;\n        this.translateService = translateService;\n    }\n\n    _createClass(Translate, [{\n        key: 'ngOnInit',\n        value: function ngOnInit() {\n            var _this = this;\n\n            this.translateService.changeHandler.subscribe(function () {\n                _this.renderContent(_this.translate, _this.dynamicValues);\n            });\n            this.renderContent(this.translate, this.dynamicValues);\n        }\n    }, {\n        key: 'ngOnDestroy',\n        value: function ngOnDestroy() {\n            this.translateService.changeHandler.unsubscribe();\n        }\n    }, {\n        key: 'renderContent',\n        value: function renderContent(phrase, dynamicValues) {\n            this.element.nativeElement.innerHTML = this.translateService.translate(phrase, dynamicValues);\n        }\n    }]);\n\n    return Translate;\n}()) || _class);\nReflect.defineMetadata('design:paramtypes', [_translate.TranslateService, _core.ElementRef], Translate);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9kaXJlY3RpdmVzL3RyYW5zbGF0ZS5kaXJlY3RpdmUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFFQTs7OztJQVNhLFMsV0FBQSxTLFdBUFoscUJBQVU7QUFDUCxjQUFVLGFBREg7QUFFUCxZQUFRLENBQ0osV0FESSxFQUVKLGVBRkk7QUFGRCxDQUFWLEM7QUFRRyx1QkFBWSxnQkFBWixFQUErQyxPQUEvQyxFQUFtRTtBQUFBOztBQUMvRCxhQUFLLE9BQUwsR0FBZSxPQUFmO0FBQ0EsYUFBSyxnQkFBTCxHQUF3QixnQkFBeEI7QUFDSDs7OzttQ0FFVTtBQUFBOztBQUNQLGlCQUFLLGdCQUFMLENBQXNCLGFBQXRCLENBQW9DLFNBQXBDLENBQThDLFlBQU07QUFDaEQsc0JBQUssYUFBTCxDQUFtQixNQUFLLFNBQXhCLEVBQW1DLE1BQUssYUFBeEM7QUFDSCxhQUZEO0FBR0EsaUJBQUssYUFBTCxDQUFtQixLQUFLLFNBQXhCLEVBQW1DLEtBQUssYUFBeEM7QUFDSDs7O3NDQUVhO0FBQ1YsaUJBQUssZ0JBQUwsQ0FBc0IsYUFBdEIsQ0FBb0MsV0FBcEM7QUFDSDs7O3NDQUVhLE0sRUFBUSxhLEVBQWU7QUFDakMsaUJBQUssT0FBTCxDQUFhLGFBQWIsQ0FBMkIsU0FBM0IsR0FBdUMsS0FBSyxnQkFBTCxDQUFzQixTQUF0QixDQUFnQyxNQUFoQyxFQUF3QyxhQUF4QyxDQUF2QztBQUNIOzs7Ozs2RkFuQlEsUyIsImZpbGUiOiJ0cmFuc2xhdGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9rc3dlZW4vRG9jdW1lbnRzL2dpdC9jaG9tc2t5LW5nMiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIERpcmVjdGl2ZSB9IGZyb20gJ2FuZ3VsYXIyL2NvcmUnO1xuXG5pbXBvcnQgeyBUcmFuc2xhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvdHJhbnNsYXRlLnNlcnZpY2UnO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1t0cmFuc2xhdGVdJyxcbiAgICBpbnB1dHM6IFtcbiAgICAgICAgJ3RyYW5zbGF0ZScsXG4gICAgICAgICdkeW5hbWljVmFsdWVzJ1xuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgVHJhbnNsYXRlIHtcbiAgICBjb25zdHJ1Y3Rvcih0cmFuc2xhdGVTZXJ2aWNlOlRyYW5zbGF0ZVNlcnZpY2UsIGVsZW1lbnQ6RWxlbWVudFJlZikge1xuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuICAgICAgICB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UgPSB0cmFuc2xhdGVTZXJ2aWNlO1xuICAgIH1cblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuY2hhbmdlSGFuZGxlci5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5yZW5kZXJDb250ZW50KHRoaXMudHJhbnNsYXRlLCB0aGlzLmR5bmFtaWNWYWx1ZXMpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5yZW5kZXJDb250ZW50KHRoaXMudHJhbnNsYXRlLCB0aGlzLmR5bmFtaWNWYWx1ZXMpO1xuICAgIH1cblxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuY2hhbmdlSGFuZGxlci51bnN1YnNjcmliZSgpO1xuICAgIH1cblxuICAgIHJlbmRlckNvbnRlbnQocGhyYXNlLCBkeW5hbWljVmFsdWVzKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LmlubmVySFRNTCA9IHRoaXMudHJhbnNsYXRlU2VydmljZS50cmFuc2xhdGUocGhyYXNlLCBkeW5hbWljVmFsdWVzKTtcbiAgICB9XG59XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/translate.directive.js\n ** module id = 242\n ** module chunks = 1\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TranslatePipe = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dec, _class;\n\nvar _core = require('angular2/core');\n\nvar _translate = require('../services/translate.service');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TranslatePipe = exports.TranslatePipe = (_dec = (0, _core.Pipe)({\n    name: 'translate',\n    pure: false\n}), _dec(_class = function () {\n    function TranslatePipe(translateService, changeDetector) {\n        _classCallCheck(this, TranslatePipe);\n\n        this.translateService = translateService;\n        this.changeDetector = changeDetector;\n        this.onLangChange = null;\n        this.lastKey = '';\n        this.lastParams = '';\n    }\n\n    _createClass(TranslatePipe, [{\n        key: 'equals',\n        value: function equals(objectOne, objectTwo) {\n            if (objectOne === objectTwo) return true;\n            if (objectOne === null || objectTwo === null) return false;\n            if (objectOne !== objectOne && objectTwo !== objectTwo) return true; // eslint-disable-line\n            var typeOne = typeof objectOne === 'undefined' ? 'undefined' : _typeof(objectOne),\n                typeTwo = typeof objectTwo === 'undefined' ? 'undefined' : _typeof(objectTwo),\n                length = void 0,\n                key = void 0,\n                keySet = void 0;\n            if (typeOne === typeTwo && typeOne === 'object') {\n                if (Array.isArray(objectOne)) {\n                    if (!Array.isArray(objectTwo)) return false;\n                    if ((length = objectOne.length) === objectTwo.length) {\n                        // eslint-disable-line\n                        for (key = 0; key < length; key++) {\n                            if (!this.equals(objectOne[key], objectTwo[key])) return false;\n                        }\n                        return true;\n                    }\n                } else {\n                    if (Array.isArray(objectTwo)) {\n                        return false;\n                    }\n                    keySet = Object.create(null);\n                    for (key in objectOne) {\n                        if (!this.equals(objectOne[key], objectTwo[key])) {\n                            return false;\n                        }\n                        keySet[key] = true;\n                    }\n                    for (key in objectTwo) {\n                        if (!(key in keySet) && typeof objectTwo[key] !== 'undefined') {\n                            return false;\n                        }\n                    }\n                    return true;\n                }\n            }\n            return false;\n        }\n    }, {\n        key: 'ngOnDestroy',\n        value: function ngOnDestroy() {\n            this.unsubscribe();\n        }\n    }, {\n        key: 'updateValue',\n        value: function updateValue(phraseKey, dynamicVariables) {\n            this.value = this.translateService.translate(phraseKey, dynamicVariables);\n            this.changeDetector.markForCheck();\n        }\n    }, {\n        key: 'transform',\n        value: function transform(phraseKey, dynamicVariables) {\n            var _this = this;\n\n            if (!phraseKey || phraseKey.length === 0) {\n                return phraseKey;\n            }\n            if (this.equals(phraseKey, this.lastKey) && this.equals(dynamicVariables[0], this.lastParams)) {\n                return this.value;\n            }\n            this.lastKey = phraseKey;\n            this.lastParams = dynamicVariables[0];\n            this.updateValue(phraseKey, dynamicVariables[0]);\n            this.unsubscribe();\n            this.onLangChange = this.translateService.changeHandler.subscribe(function () {\n                _this.updateValue(phraseKey, dynamicVariables[0]);\n            });\n            return this.value;\n        }\n    }, {\n        key: 'unsubscribe',\n        value: function unsubscribe() {\n            if (this.onLangChange) {\n                this.onLangChange.unsubscribe();\n                this.onLangChange = undefined;\n            }\n        }\n    }]);\n\n    return TranslatePipe;\n}()) || _class);\nReflect.defineMetadata('design:paramtypes', [_translate.TranslateService, _core.ChangeDetectorRef], TranslatePipe);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9waXBlcy90cmFuc2xhdGUucGlwZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7SUFNYSxhLFdBQUEsYSxXQUpaLGdCQUFLO0FBQ0YsVUFBTSxXQURKO0FBRUYsVUFBTTtBQUZKLENBQUwsQztBQUtHLDJCQUFZLGdCQUFaLEVBQStDLGNBQS9DLEVBQWtGO0FBQUE7O0FBQzlFLGFBQUssZ0JBQUwsR0FBd0IsZ0JBQXhCO0FBQ0EsYUFBSyxjQUFMLEdBQXNCLGNBQXRCO0FBQ0EsYUFBSyxZQUFMLEdBQW9CLElBQXBCO0FBQ0EsYUFBSyxPQUFMLEdBQWUsRUFBZjtBQUNBLGFBQUssVUFBTCxHQUFrQixFQUFsQjtBQUNIOzs7OytCQUVNLFMsRUFBVyxTLEVBQVc7QUFDekIsZ0JBQUksY0FBYyxTQUFsQixFQUE2QixPQUFPLElBQVA7QUFDN0IsZ0JBQUksY0FBYyxJQUFkLElBQXNCLGNBQWMsSUFBeEMsRUFBOEMsT0FBTyxLQUFQO0FBQzlDLGdCQUFJLGNBQWMsU0FBZCxJQUEyQixjQUFjLFNBQTdDLEVBQXdELE9BQU8sSUFBUCxDO0FBQ3hELGdCQUFJLGlCQUFpQixTQUFqQix5Q0FBaUIsU0FBakIsQ0FBSjtnQkFBZ0MsaUJBQWlCLFNBQWpCLHlDQUFpQixTQUFqQixDQUFoQztnQkFBNEQsZUFBNUQ7Z0JBQW9FLFlBQXBFO2dCQUF5RSxlQUF6RTtBQUNBLGdCQUFJLFlBQVksT0FBWixJQUF1QixZQUFZLFFBQXZDLEVBQWlEO0FBQzdDLG9CQUFJLE1BQU0sT0FBTixDQUFjLFNBQWQsQ0FBSixFQUE4QjtBQUMxQix3QkFBSSxDQUFDLE1BQU0sT0FBTixDQUFjLFNBQWQsQ0FBTCxFQUErQixPQUFPLEtBQVA7QUFDL0Isd0JBQUksQ0FBQyxTQUFTLFVBQVUsTUFBcEIsTUFBZ0MsVUFBVSxNQUE5QyxFQUFzRDs7QUFDbEQsNkJBQUssTUFBTSxDQUFYLEVBQWMsTUFBTSxNQUFwQixFQUE0QixLQUE1QixFQUFtQztBQUMvQixnQ0FBSSxDQUFDLEtBQUssTUFBTCxDQUFZLFVBQVUsR0FBVixDQUFaLEVBQTRCLFVBQVUsR0FBVixDQUE1QixDQUFMLEVBQWtELE9BQU8sS0FBUDtBQUNyRDtBQUNELCtCQUFPLElBQVA7QUFDSDtBQUNKLGlCQVJELE1BUU87QUFDSCx3QkFBSSxNQUFNLE9BQU4sQ0FBYyxTQUFkLENBQUosRUFBOEI7QUFDMUIsK0JBQU8sS0FBUDtBQUNIO0FBQ0QsNkJBQVMsT0FBTyxNQUFQLENBQWMsSUFBZCxDQUFUO0FBQ0EseUJBQUssR0FBTCxJQUFZLFNBQVosRUFBdUI7QUFDbkIsNEJBQUksQ0FBQyxLQUFLLE1BQUwsQ0FBWSxVQUFVLEdBQVYsQ0FBWixFQUE0QixVQUFVLEdBQVYsQ0FBNUIsQ0FBTCxFQUFrRDtBQUM5QyxtQ0FBTyxLQUFQO0FBQ0g7QUFDRCwrQkFBTyxHQUFQLElBQWMsSUFBZDtBQUNIO0FBQ0QseUJBQUssR0FBTCxJQUFZLFNBQVosRUFBdUI7QUFDbkIsNEJBQUksRUFBRSxPQUFPLE1BQVQsS0FBb0IsT0FBTyxVQUFVLEdBQVYsQ0FBUCxLQUEwQixXQUFsRCxFQUErRDtBQUMzRCxtQ0FBTyxLQUFQO0FBQ0g7QUFDSjtBQUNELDJCQUFPLElBQVA7QUFDSDtBQUNKO0FBQ0QsbUJBQU8sS0FBUDtBQUNIOzs7c0NBRWE7QUFDVixpQkFBSyxXQUFMO0FBQ0g7OztvQ0FFVyxTLEVBQVcsZ0IsRUFBa0I7QUFDckMsaUJBQUssS0FBTCxHQUFhLEtBQUssZ0JBQUwsQ0FBc0IsU0FBdEIsQ0FBZ0MsU0FBaEMsRUFBMkMsZ0JBQTNDLENBQWI7QUFDQSxpQkFBSyxjQUFMLENBQW9CLFlBQXBCO0FBQ0g7OztrQ0FFUyxTLEVBQVcsZ0IsRUFBa0I7QUFBQTs7QUFDbkMsZ0JBQUksQ0FBQyxTQUFELElBQWMsVUFBVSxNQUFWLEtBQXFCLENBQXZDLEVBQTBDO0FBQ3RDLHVCQUFPLFNBQVA7QUFDSDtBQUNELGdCQUFJLEtBQUssTUFBTCxDQUFZLFNBQVosRUFBdUIsS0FBSyxPQUE1QixLQUF3QyxLQUFLLE1BQUwsQ0FBWSxpQkFBaUIsQ0FBakIsQ0FBWixFQUFpQyxLQUFLLFVBQXRDLENBQTVDLEVBQStGO0FBQzNGLHVCQUFPLEtBQUssS0FBWjtBQUNIO0FBQ0QsaUJBQUssT0FBTCxHQUFlLFNBQWY7QUFDQSxpQkFBSyxVQUFMLEdBQWtCLGlCQUFpQixDQUFqQixDQUFsQjtBQUNBLGlCQUFLLFdBQUwsQ0FBaUIsU0FBakIsRUFBNEIsaUJBQWlCLENBQWpCLENBQTVCO0FBQ0EsaUJBQUssV0FBTDtBQUNBLGlCQUFLLFlBQUwsR0FBb0IsS0FBSyxnQkFBTCxDQUFzQixhQUF0QixDQUFvQyxTQUFwQyxDQUE4QyxZQUFNO0FBQ3BFLHNCQUFLLFdBQUwsQ0FBaUIsU0FBakIsRUFBNEIsaUJBQWlCLENBQWpCLENBQTVCO0FBQ0gsYUFGbUIsQ0FBcEI7QUFHQSxtQkFBTyxLQUFLLEtBQVo7QUFDSDs7O3NDQUVhO0FBQ1YsZ0JBQUksS0FBSyxZQUFULEVBQXVCO0FBQ25CLHFCQUFLLFlBQUwsQ0FBa0IsV0FBbEI7QUFDQSxxQkFBSyxZQUFMLEdBQW9CLFNBQXBCO0FBQ0g7QUFDSjs7Ozs7b0dBNUVRLGEiLCJmaWxlIjoidHJhbnNsYXRlLnBpcGUuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2tzd2Vlbi9Eb2N1bWVudHMvZ2l0L2Nob21za3ktbmcyIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdhbmd1bGFyMi9jb3JlJztcbmltcG9ydCB7IFRyYW5zbGF0ZVNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy90cmFuc2xhdGUuc2VydmljZSc7XG5cbkBQaXBlKHtcbiAgICBuYW1lOiAndHJhbnNsYXRlJyxcbiAgICBwdXJlOiBmYWxzZVxufSlcbmV4cG9ydCBjbGFzcyBUcmFuc2xhdGVQaXBlIHtcbiAgICBjb25zdHJ1Y3Rvcih0cmFuc2xhdGVTZXJ2aWNlOlRyYW5zbGF0ZVNlcnZpY2UsIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZikge1xuICAgICAgICB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UgPSB0cmFuc2xhdGVTZXJ2aWNlO1xuICAgICAgICB0aGlzLmNoYW5nZURldGVjdG9yID0gY2hhbmdlRGV0ZWN0b3I7XG4gICAgICAgIHRoaXMub25MYW5nQ2hhbmdlID0gbnVsbDtcbiAgICAgICAgdGhpcy5sYXN0S2V5ID0gJyc7XG4gICAgICAgIHRoaXMubGFzdFBhcmFtcyA9ICcnO1xuICAgIH1cblxuICAgIGVxdWFscyhvYmplY3RPbmUsIG9iamVjdFR3bykge1xuICAgICAgICBpZiAob2JqZWN0T25lID09PSBvYmplY3RUd28pIHJldHVybiB0cnVlO1xuICAgICAgICBpZiAob2JqZWN0T25lID09PSBudWxsIHx8IG9iamVjdFR3byA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuICAgICAgICBpZiAob2JqZWN0T25lICE9PSBvYmplY3RPbmUgJiYgb2JqZWN0VHdvICE9PSBvYmplY3RUd28pIHJldHVybiB0cnVlOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICAgICAgIGxldCB0eXBlT25lID0gdHlwZW9mIG9iamVjdE9uZSwgdHlwZVR3byA9IHR5cGVvZiBvYmplY3RUd28sIGxlbmd0aCwga2V5LCBrZXlTZXQ7XG4gICAgICAgIGlmICh0eXBlT25lID09PSB0eXBlVHdvICYmIHR5cGVPbmUgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShvYmplY3RPbmUpKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KG9iamVjdFR3bykpIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICBpZiAoKGxlbmd0aCA9IG9iamVjdE9uZS5sZW5ndGgpID09PSBvYmplY3RUd28ubGVuZ3RoKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICAgICAgICAgICAgICAgICAgZm9yIChrZXkgPSAwOyBrZXkgPCBsZW5ndGg7IGtleSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMuZXF1YWxzKG9iamVjdE9uZVtrZXldLCBvYmplY3RUd29ba2V5XSkpIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KG9iamVjdFR3bykpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBrZXlTZXQgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgICAgICAgICAgICAgIGZvciAoa2V5IGluIG9iamVjdE9uZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMuZXF1YWxzKG9iamVjdE9uZVtrZXldLCBvYmplY3RUd29ba2V5XSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBrZXlTZXRba2V5XSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGZvciAoa2V5IGluIG9iamVjdFR3bykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIShrZXkgaW4ga2V5U2V0KSAmJiB0eXBlb2Ygb2JqZWN0VHdvW2tleV0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICB0aGlzLnVuc3Vic2NyaWJlKCk7XG4gICAgfVxuXG4gICAgdXBkYXRlVmFsdWUocGhyYXNlS2V5LCBkeW5hbWljVmFyaWFibGVzKSB7XG4gICAgICAgIHRoaXMudmFsdWUgPSB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UudHJhbnNsYXRlKHBocmFzZUtleSwgZHluYW1pY1ZhcmlhYmxlcyk7XG4gICAgICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3IubWFya0ZvckNoZWNrKCk7XG4gICAgfVxuXG4gICAgdHJhbnNmb3JtKHBocmFzZUtleSwgZHluYW1pY1ZhcmlhYmxlcykge1xuICAgICAgICBpZiAoIXBocmFzZUtleSB8fCBwaHJhc2VLZXkubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gcGhyYXNlS2V5O1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmVxdWFscyhwaHJhc2VLZXksIHRoaXMubGFzdEtleSkgJiYgdGhpcy5lcXVhbHMoZHluYW1pY1ZhcmlhYmxlc1swXSwgdGhpcy5sYXN0UGFyYW1zKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMudmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5sYXN0S2V5ID0gcGhyYXNlS2V5O1xuICAgICAgICB0aGlzLmxhc3RQYXJhbXMgPSBkeW5hbWljVmFyaWFibGVzWzBdO1xuICAgICAgICB0aGlzLnVwZGF0ZVZhbHVlKHBocmFzZUtleSwgZHluYW1pY1ZhcmlhYmxlc1swXSk7XG4gICAgICAgIHRoaXMudW5zdWJzY3JpYmUoKTtcbiAgICAgICAgdGhpcy5vbkxhbmdDaGFuZ2UgPSB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuY2hhbmdlSGFuZGxlci5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy51cGRhdGVWYWx1ZShwaHJhc2VLZXksIGR5bmFtaWNWYXJpYWJsZXNbMF0pO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWU7XG4gICAgfVxuXG4gICAgdW5zdWJzY3JpYmUoKSB7XG4gICAgICAgIGlmICh0aGlzLm9uTGFuZ0NoYW5nZSkge1xuICAgICAgICAgICAgdGhpcy5vbkxhbmdDaGFuZ2UudW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgIHRoaXMub25MYW5nQ2hhbmdlID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pipes/translate.pipe.js\n ** module id = 243\n ** module chunks = 1\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AsyncLoader = exports.AsyncLoader = function () {\n    function AsyncLoader() {\n        _classCallCheck(this, AsyncLoader);\n    }\n\n    _createClass(AsyncLoader, [{\n        key: 'load',\n        value: function load(url) {\n            return new Promise(function (resolve, reject) {\n                var xhr = new XMLHttpRequest();\n                xhr.open('GET', url);\n\n                xhr.onload = function () {\n                    if (xhr.status === 200) {\n                        try {\n                            var translationObject = JSON.parse(xhr.responseText);\n                            resolve(translationObject);\n                        } catch (e) {\n                            var error = new Error('Parse Error: ' + e.toString());\n                            reject(error);\n                        }\n                    } else {\n                        var _error = new Error(xhr.statusText);\n                        reject(_error);\n                    }\n                };\n\n                xhr.onerror = function () {\n                    var error = new Error('Network Error');\n                    reject(error);\n                };\n\n                xhr.send();\n            });\n        }\n    }]);\n\n    return AsyncLoader;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chomsky/lib/asyncloader.js\n ** module id = 318\n ** module chunks = 1\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\t\t\t\tvalue: true\n});\nexports.Chomsky = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dictionarymanager = require('./dictionarymanager');\n\nvar _asyncloader = require('./asyncloader');\n\nvar _formats = require('./formats');\n\nvar _Rx = require('rxjs/Rx');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Chomsky = exports.Chomsky = function () {\n\t\t\t\tfunction Chomsky(locale) {\n\t\t\t\t\t\t\t\t_classCallCheck(this, Chomsky);\n\n\t\t\t\t\t\t\t\tthis.dictionaryManager = new _dictionarymanager.DictionaryManager(locale);\n\t\t\t\t\t\t\t\tthis.asyncLoader = new _asyncloader.AsyncLoader();\n\t\t\t\t\t\t\t\tthis.translationsDictionary = this.dictionaryManager.dictionaries;\n\t\t\t\t\t\t\t\tthis.changeHandler = _Rx.Subject.create();\n\t\t\t\t\t\t\t\tthis.currentLocale = this.dictionaryManager.locale;\n\t\t\t\t\t\t\t\tthis.formats = new _formats.Formats(this.currentLocale);\n\t\t\t\t}\n\n\t\t\t\t/**\n     * @description: private/local method for changing the dictionaryManager language.\n     * @param languageCode\n     * @param translations\n     */\n\n\n\t\t\t\t_createClass(Chomsky, [{\n\t\t\t\t\t\t\t\tkey: 'addTranslation',\n\t\t\t\t\t\t\t\tvalue: function addTranslation(languageCode, translations) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.dictionaryManager.addNewTranslation(languageCode, translations);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\t\t\t\tkey: 'translationFetcher',\n\t\t\t\t\t\t\t\tvalue: function translationFetcher(url) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn this.asyncLoader.load(url);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/**\n         * @description: public method for changing the language\n         * @param languageKey MUST BE formatted as such: 'en-US' or 'en'\n         * @param translationObject\n         * @returns {Promise}\n         */\n\n\t\t\t\t}, {\n\t\t\t\t\t\t\t\tkey: 'setLanguage',\n\t\t\t\t\t\t\t\tvalue: function setLanguage(languageKey) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar _this = this;\n\n\t\t\t\t\t\t\t\t\t\t\t\tvar translationObject = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];\n\n\t\t\t\t\t\t\t\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Now, only language is required\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (languageKey) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (languageKey.length > 2 && languageKey.indexOf('-') !== -1 || languageKey.length === 2) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_this.currentLocale = languageKey;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_this.formats.setLocale(_this.currentLocale);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((typeof translationObject === 'undefined' ? 'undefined' : _typeof(translationObject)) == 'object') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_this.applyLanguage(languageKey, translationObject);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_this.resolveTranslationObject(translationObject).then(function (asyncTranslationObject) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_this.applyLanguage(languageKey, asyncTranslationObject);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treject('setLanguage: languageKey is not structured correctly.');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treject('setLanguage: languageKey is mandatory');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/**\n         * @description This method is the setter for the active language\n         * @param language\n         * @param translationObject\n         */\n\n\t\t\t\t}, {\n\t\t\t\t\t\t\t\tkey: 'applyLanguage',\n\t\t\t\t\t\t\t\tvalue: function applyLanguage(language, translationObject) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.currentLocale = language;\n\t\t\t\t\t\t\t\t\t\t\t\t// Handle overrides\n\t\t\t\t\t\t\t\t\t\t\t\tif (translationObject && translationObject.hasOwnProperty('formats')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.formats.override(translationObject.formats);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdelete translationObject['formats'];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tthis.addTranslation(language, translationObject);\n\t\t\t\t\t\t\t\t\t\t\t\tthis.changeHandler.next();\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/**\n         * @description This method is the async loader for loading remote translations\n         * @param language\n         * @returns {Promise}\n         */\n\n\t\t\t\t}, {\n\t\t\t\t\t\t\t\tkey: 'resolveTranslationObject',\n\t\t\t\t\t\t\t\tvalue: function resolveTranslationObject(language) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar _this2 = this;\n\n\t\t\t\t\t\t\t\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_this2.translationFetcher(language).then(function (translationObject) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (translationObject) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tresolve(translationObject);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treject('translationFetcher resolved without translation object');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}, function (reason) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn reject('translationFetcher failed: ' + reason);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/**\n         *\n         * @param key\n         * @param languageCode\n         * @param variantCode\n         * @returns {string}\n         */\n\n\t\t\t\t}, {\n\t\t\t\t\t\t\t\tkey: 'getValue',\n\t\t\t\t\t\t\t\tvalue: function getValue(key, languageCode, variantCode) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar value = '';\n\t\t\t\t\t\t\t\t\t\t\t\tvar dictionary = this.translationsDictionary[languageCode];\n\t\t\t\t\t\t\t\t\t\t\t\tif (variantCode) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdictionary = this.translationsDictionary[languageCode][variantCode];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tvar tokens = key.split('.');\n\t\t\t\t\t\t\t\t\t\t\t\tfor (var i = 0; i < tokens.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = dictionary[tokens[i]];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = value[tokens[i]];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/**\n         * @description A method for returning an observable\n         * @param key\n         * @param interpolation\n         * @returns {Observable}\n         */\n\n\t\t\t\t}, {\n\t\t\t\t\t\t\t\tkey: 'liveTranslate',\n\t\t\t\t\t\t\t\tvalue: function liveTranslate(key, interpolation) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar _this3 = this;\n\n\t\t\t\t\t\t\t\t\t\t\t\treturn _Rx.Observable.create(function (observer) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tobserver.next(_this3.translate(key, interpolation));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_this3.changeHandler.subscribe(function () {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tobserver.next(_this3.translate(key, interpolation));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/**\n         * @name translate\n         * @param key\n         * @param interpolation\n         * @param pluralValue\n         * @returns {string}\n         */\n\n\t\t\t\t}, {\n\t\t\t\t\t\t\t\tkey: 'translate',\n\t\t\t\t\t\t\t\tvalue: function translate(key, interpolation) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar _this4 = this;\n\n\t\t\t\t\t\t\t\t\t\t\t\tvar languageCode = (this.currentLocale.split('-')[0] || '').toLowerCase();\n\t\t\t\t\t\t\t\t\t\t\t\tvar variantCode = (this.currentLocale.split('-')[1] || '').toUpperCase();\n\t\t\t\t\t\t\t\t\t\t\t\tvar value = this.getValue(key, languageCode, variantCode) || this.getValue(key, languageCode);\n\t\t\t\t\t\t\t\t\t\t\t\t// Handle pluralization\n\t\t\t\t\t\t\t\t\t\t\t\tif ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (typeof interpolation === 'number') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar pluralization = value;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (pluralization.hasOwnProperty(interpolation)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = pluralization[interpolation];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (interpolation === 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = pluralization.zero;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = pluralization.many;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = '';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Handle interpolation\n\t\t\t\t\t\t\t\t\t\t\t\tif (interpolation && value) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = value.replace(/{([^}]*)}/gi, function (m, param) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar params = param.split(':');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (params.length === 1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar match = '';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (interpolation.hasOwnProperty(param)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmatch = interpolation[param];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmatch = interpolation;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn match;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar unparsedValue = interpolation[params[0]] || interpolation;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tswitch (params[1]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'date':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn _this4.formats.formatDate(unparsedValue, params[2] || undefined, params[3] || undefined);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'currency':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn _this4.formats.formatCurrency(unparsedValue, params[2] || undefined, params[3] || undefined);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'number':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn _this4.formats.formatNumber(unparsedValue, params[2] || undefined, params[3] || undefined);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Return the key if no value is present.\n\t\t\t\t\t\t\t\t\t\t\t\treturn value || key;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}]);\n\n\t\t\t\treturn Chomsky;\n}();\n\nexports.default = Chomsky;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chomsky/lib/chomsky.js\n ** module id = 319\n ** module chunks = 1\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\t\t\t\tvalue: true\n});\nexports.DictionaryManager = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _objectAssignDeep = require('./object-assign-deep');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DictionaryManager = exports.DictionaryManager = function () {\n\t\t\t\tfunction DictionaryManager(locale) {\n\t\t\t\t\t\t\t\t_classCallCheck(this, DictionaryManager);\n\n\t\t\t\t\t\t\t\tthis.locale = locale || window.navigator.language;\n\t\t\t\t\t\t\t\t// By default initialize with browser default\n\t\t\t\t\t\t\t\tthis.initializeDictionaries(this.locale);\n\t\t\t\t}\n\n\t\t\t\t/**\n     * @description only called once on init to bootstrap a default language with invariants\n     * @param preferredLanguage\n     */\n\n\n\t\t\t\t_createClass(DictionaryManager, [{\n\t\t\t\t\t\t\t\tkey: 'initializeDictionaries',\n\t\t\t\t\t\t\t\tvalue: function initializeDictionaries(preferredLanguage) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.dictionaries = {};\n\t\t\t\t\t\t\t\t\t\t\t\tthis.addNewTranslation(preferredLanguage, {});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/**\n         * @description\n         * @param languageKey\n         * @param translations\n         */\n\n\t\t\t\t}, {\n\t\t\t\t\t\t\t\tkey: 'addNewTranslation',\n\t\t\t\t\t\t\t\tvalue: function addNewTranslation(languageKey) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar _this = this;\n\n\t\t\t\t\t\t\t\t\t\t\t\tfor (var _len = arguments.length, translations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttranslations[_key - 1] = arguments[_key];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tvar languageCode = (languageKey.split('-')[0] || '').toLowerCase();\n\t\t\t\t\t\t\t\t\t\t\t\tvar variantCode = (languageKey.split('-')[1] || '').toUpperCase();\n\n\t\t\t\t\t\t\t\t\t\t\t\tif ((typeof translations === 'undefined' ? 'undefined' : _typeof(translations)) !== 'object') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthrow new Error('Cannot add new \\'translations\\' of this type.');\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Check if dictionary exists\n\t\t\t\t\t\t\t\t\t\t\t\tif (!this.dictionaries.hasOwnProperty(languageCode)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Create new dictionary\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.dictionaries[languageCode] = {};\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\ttranslations.forEach(function (translation) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Handle locales\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (variantCode) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!_this.dictionaries[languageCode].hasOwnProperty(variantCode)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_this.dictionaries[languageCode][variantCode] = {};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_this.dictionaries[languageCode][variantCode] = (0, _objectAssignDeep.mergeDeep)({}, _this.dictionaries[languageCode][variantCode], translation);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Add new translation to dictionary\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_this.dictionaries[languageCode] = (0, _objectAssignDeep.mergeDeep)({}, _this.dictionaries[languageCode], translation);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/**\n         * @description\n         * @param languageKey\n         */\n\n\t\t\t\t}, {\n\t\t\t\t\t\t\t\tkey: 'removeDictionary',\n\t\t\t\t\t\t\t\tvalue: function removeDictionary(languageKey) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.dictionaries[languageKey] = {};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}]);\n\n\t\t\t\treturn DictionaryManager;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chomsky/lib/dictionarymanager.js\n ** module id = 320\n ** module chunks = 1\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.Formats = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _objectAssignDeep = require('./object-assign-deep');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Formats = exports.Formats = function () {\n\tfunction Formats(locale) {\n\t\t_classCallCheck(this, Formats);\n\n\t\t// Format formatDefaults\n\t\tthis.formatDefaults = {\n\t\t\tcurrency: {\n\t\t\t\tdisplay: '0,0.00'\n\t\t\t},\n\t\t\tdate: {\n\t\t\t\tshort: 'l'\n\t\t\t},\n\t\t\tnumber: {\n\t\t\t\tdefault: ''\n\t\t\t}\n\t\t};\n\n\t\tthis.setLocale(locale || navigator.language);\n\t}\n\n\t_createClass(Formats, [{\n\t\tkey: 'override',\n\t\tvalue: function override(formatOverrides) {\n\t\t\tif (formatOverrides.locale) {\n\t\t\t\tthis.setLocale(formatOverrides.locale);\n\t\t\t\tdelete formatOverrides['locale'];\n\t\t\t}\n\t\t\tthis.formatDefaults = (0, _objectAssignDeep.mergeDeep)(this.formatDefaults, formatOverrides);\n\t\t}\n\t}, {\n\t\tkey: 'setLocale',\n\t\tvalue: function setLocale(locale) {\n\t\t\tthis.formatDefaults.locale = locale;\n\t\t\tif (moment && locale) {\n\t\t\t\t// Allows en and us-EN\n\t\t\t\t// TODO: probably want to disable this. It should always be a full locale 'en-US'\n\t\t\t\tvar timeLocale = locale.split('-')[0] || locale;\n\t\t\t\tmoment.locale(timeLocale);\n\t\t\t}\n\t\t\tif (numbro) {\n\t\t\t\tnumbro.setCulture(this.formatDefaults.locale);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'formatNumber',\n\t\tvalue: function formatNumber(value, format) {\n\t\t\treturn numbro(value).format(format || this.formatDefaults.number.default);\n\t\t}\n\t}, {\n\t\tkey: 'parseNumber',\n\t\tvalue: function parseNumber(numberStr) {\n\t\t\treturn numbro().unformat(numberStr);\n\t\t}\n\t}, {\n\t\tkey: 'formatCurrency',\n\t\tvalue: function formatCurrency(value, format, locale) {\n\t\t\tvar currency = void 0;\n\t\t\tif (locale) {\n\t\t\t\tvar currentLocale = this.formatDefaults.locale;\n\t\t\t\tnumbro.setCulture(locale);\n\t\t\t\tcurrency = numbro(value).formatCurrency(format || this.formatDefaults.currency.display);\n\t\t\t\tnumbro.setCulture(currentLocale);\n\t\t\t} else {\n\t\t\t\tcurrency = numbro(value).formatCurrency(format || this.formatDefaults.currency.display);\n\t\t\t}\n\t\t\treturn currency;\n\t\t}\n\t}, {\n\t\tkey: 'formatDate',\n\t\tvalue: function formatDate(date) {\n\t\t\tvar format = arguments.length <= 1 || arguments[1] === undefined ? this.formatDefaults.date.short : arguments[1];\n\t\t\tvar mask = arguments[2];\n\n\t\t\treturn moment(date, mask).format(format);\n\t\t}\n\t}]);\n\n\treturn Formats;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chomsky/lib/formats.js\n ** module id = 321\n ** module chunks = 1\n **/","import {Subscriber} from './Subscriber';\nimport {OuterSubscriber} from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index: number = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, private outerValue: T, private outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/InnerSubscriber.ts\n **/","export interface NextObserver<T> {\n  isUnsubscribed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  isUnsubscribed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  isUnsubscribed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  isUnsubscribed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport const empty: Observer<any> = {\n  isUnsubscribed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void { throw err; },\n  complete(): void { /*noop*/ }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/Observer.ts\n **/","import {Subscriber} from './Subscriber';\n\nexport class Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new Subscriber<T>(subscriber));\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/Operator.ts\n **/","/* tslint:disable:no-unused-variable */\n// Subject imported before Observable to bypass circular dependency issue since\n// Subject extends Observable and Observable references Subject in it's\n// definition\nexport {Subject} from './Subject';\n/* tslint:enable:no-unused-variable */\nexport {Observable} from './Observable';\n\n// statics\n/* tslint:disable:no-use-before-declare */\nimport './add/observable/bindCallback';\nimport './add/observable/bindNodeCallback';\nimport './add/observable/combineLatest';\nimport './add/observable/concat';\nimport './add/observable/defer';\nimport './add/observable/empty';\nimport './add/observable/forkJoin';\nimport './add/observable/from';\nimport './add/observable/fromEvent';\nimport './add/observable/fromEventPattern';\nimport './add/observable/fromPromise';\nimport './add/observable/generate';\nimport './add/observable/interval';\nimport './add/observable/merge';\nimport './add/observable/race';\nimport './add/observable/never';\nimport './add/observable/of';\nimport './add/observable/range';\nimport './add/observable/throw';\nimport './add/observable/timer';\nimport './add/observable/zip';\n\n//operators\nimport './add/operator/buffer';\nimport './add/operator/bufferCount';\nimport './add/operator/bufferTime';\nimport './add/operator/bufferToggle';\nimport './add/operator/bufferWhen';\nimport './add/operator/cache';\nimport './add/operator/catch';\nimport './add/operator/combineAll';\nimport './add/operator/combineLatest';\nimport './add/operator/concat';\nimport './add/operator/concatAll';\nimport './add/operator/concatMap';\nimport './add/operator/concatMapTo';\nimport './add/operator/count';\nimport './add/operator/dematerialize';\nimport './add/operator/debounce';\nimport './add/operator/debounceTime';\nimport './add/operator/defaultIfEmpty';\nimport './add/operator/delay';\nimport './add/operator/delayWhen';\nimport './add/operator/distinctUntilChanged';\nimport './add/operator/do';\nimport './add/operator/expand';\nimport './add/operator/filter';\nimport './add/operator/finally';\nimport './add/operator/first';\nimport './add/operator/groupBy';\nimport './add/operator/ignoreElements';\nimport './add/operator/audit';\nimport './add/operator/auditTime';\nimport './add/operator/last';\nimport './add/operator/let';\nimport './add/operator/every';\nimport './add/operator/map';\nimport './add/operator/mapTo';\nimport './add/operator/materialize';\nimport './add/operator/merge';\nimport './add/operator/mergeAll';\nimport './add/operator/mergeMap';\nimport './add/operator/mergeMapTo';\nimport './add/operator/multicast';\nimport './add/operator/observeOn';\nimport './add/operator/partition';\nimport './add/operator/pluck';\nimport './add/operator/publish';\nimport './add/operator/publishBehavior';\nimport './add/operator/publishReplay';\nimport './add/operator/publishLast';\nimport './add/operator/race';\nimport './add/operator/reduce';\nimport './add/operator/repeat';\nimport './add/operator/retry';\nimport './add/operator/retryWhen';\nimport './add/operator/sample';\nimport './add/operator/sampleTime';\nimport './add/operator/scan';\nimport './add/operator/share';\nimport './add/operator/single';\nimport './add/operator/skip';\nimport './add/operator/skipUntil';\nimport './add/operator/skipWhile';\nimport './add/operator/startWith';\nimport './add/operator/subscribeOn';\nimport './add/operator/switch';\nimport './add/operator/switchMap';\nimport './add/operator/switchMapTo';\nimport './add/operator/take';\nimport './add/operator/takeLast';\nimport './add/operator/takeUntil';\nimport './add/operator/takeWhile';\nimport './add/operator/throttle';\nimport './add/operator/throttleTime';\nimport './add/operator/timeout';\nimport './add/operator/timeoutWith';\nimport './add/operator/toArray';\nimport './add/operator/toPromise';\nimport './add/operator/window';\nimport './add/operator/windowCount';\nimport './add/operator/windowTime';\nimport './add/operator/windowToggle';\nimport './add/operator/windowWhen';\nimport './add/operator/withLatestFrom';\nimport './add/operator/zip';\nimport './add/operator/zipAll';\n\n/* tslint:disable:no-unused-variable */\nexport {Operator} from './Operator';\nexport {Observer} from './Observer';\nexport {Subscription} from './Subscription';\nexport {Subscriber} from './Subscriber';\nexport {AsyncSubject} from './AsyncSubject';\nexport {ReplaySubject} from './ReplaySubject';\nexport {BehaviorSubject} from './BehaviorSubject';\nexport {ConnectableObservable} from './observable/ConnectableObservable';\nexport {Notification} from './Notification';\nexport {EmptyError} from './util/EmptyError';\nexport {ArgumentOutOfRangeError} from './util/ArgumentOutOfRangeError';\nexport {ObjectUnsubscribedError} from './util/ObjectUnsubscribedError';\nexport {UnsubscriptionError} from './util/UnsubscriptionError';\n\nimport {asap} from './scheduler/asap';\nimport {async} from './scheduler/async';\nimport {queue} from './scheduler/queue';\nimport {AsapScheduler} from './scheduler/AsapScheduler';\nimport {AsyncScheduler} from './scheduler/AsyncScheduler';\nimport {QueueScheduler} from './scheduler/QueueScheduler';\nimport {$$rxSubscriber as rxSubscriber} from './symbol/rxSubscriber';\nimport {$$iterator as iterator} from './symbol/iterator';\nimport * as observable from 'symbol-observable';\n\n/* tslint:enable:no-unused-variable */\n\n/**\n * @typedef {Object} Rx.Scheduler\n * @property {Scheduler} queue Schedules on a queue in the current event frame\n * (trampoline scheduler). Use this for iteration operations.\n * @property {Scheduler} asap Schedules on the micro task queue, which uses the\n * fastest transport mechanism available, either Node.js' `process.nextTick()`\n * or Web Worker MessageChannel or setTimeout or others. Use this for\n * asynchronous conversions.\n * @property {Scheduler} async Schedules work with `setInterval`. Use this for\n * time-based operations.\n */\nlet Scheduler = {\n  asap,\n  async,\n  queue\n};\n\n/**\n * @typedef {Object} Rx.Symbol\n * @property {Symbol|string} rxSubscriber A symbol to use as a property name to\n * retrieve an \"Rx safe\" Observer from an object. \"Rx safety\" can be defined as\n * an object that has all of the traits of an Rx Subscriber, including the\n * ability to add and remove subscriptions to the subscription chain and\n * guarantees involving event triggering (can't \"next\" after unsubscription,\n * etc).\n * @property {Symbol|string} observable A symbol to use as a property name to\n * retrieve an Observable as defined by the [ECMAScript \"Observable\" spec](https://github.com/zenparsing/es-observable).\n * @property {Symbol|string} iterator The ES6 symbol to use as a property name\n * to retrieve an iterator from an object.\n */\nlet Symbol = {\n  rxSubscriber,\n  observable,\n  iterator\n};\n\nexport {\n    Scheduler,\n    Symbol\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/Rx.ts\n **/","import {Subject} from './Subject';\nimport {Observer} from './Observer';\nimport {Subscription} from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription extends Subscription {\n  isUnsubscribed: boolean = false;\n\n  constructor(public subject: Subject<any>, public observer: Observer<any>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.isUnsubscribed) {\n      return;\n    }\n\n    this.isUnsubscribed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isUnsubscribed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.observer);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/SubjectSubscription.ts\n **/","import {Observable} from '../../Observable';\nimport {bindCallback as staticBindCallback} from '../../observable/bindCallback';\n\nObservable.bindCallback = staticBindCallback;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let bindCallback: typeof staticBindCallback;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/bindCallback.ts\n **/","import {Observable} from '../../Observable';\nimport {bindNodeCallback as staticBindNodeCallback} from '../../observable/bindNodeCallback';\n\nObservable.bindNodeCallback = staticBindNodeCallback;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let bindNodeCallback: typeof staticBindNodeCallback;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/bindNodeCallback.ts\n **/","import {Observable} from '../../Observable';\nimport {combineLatestStatic} from '../../operator/combineLatest';\n\nObservable.combineLatest = combineLatestStatic;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let combineLatest: typeof combineLatestStatic;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/combineLatest.ts\n **/","import {Observable} from '../../Observable';\nimport {concat as concatStatic} from '../../observable/concat';\n\nObservable.concat = concatStatic;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let concat: typeof concatStatic;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/concat.ts\n **/","import {Observable} from '../../Observable';\nimport {defer as staticDefer} from '../../observable/defer';\n\nObservable.defer = staticDefer;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let defer: typeof staticDefer;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/defer.ts\n **/","import {Observable} from '../../Observable';\nimport {empty as staticEmpty} from '../../observable/empty';\n\nObservable.empty = staticEmpty;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let empty: typeof staticEmpty;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/empty.ts\n **/","import {Observable} from '../../Observable';\nimport {forkJoin as staticForkJoin} from '../../observable/forkJoin';\n\nObservable.forkJoin = staticForkJoin;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let forkJoin: typeof staticForkJoin;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/forkJoin.ts\n **/","import {Observable} from '../../Observable';\nimport {from as staticFrom} from '../../observable/from';\n\nObservable.from = staticFrom;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let from: typeof staticFrom;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/from.ts\n **/","import {Observable} from '../../Observable';\nimport {fromEvent as staticFromEvent} from '../../observable/fromEvent';\n\nObservable.fromEvent = staticFromEvent;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let fromEvent: typeof staticFromEvent;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/fromEvent.ts\n **/","import {Observable} from '../../Observable';\nimport {fromEventPattern as staticFromEventPattern} from '../../observable/fromEventPattern';\n\nObservable.fromEventPattern = staticFromEventPattern;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let fromEventPattern: typeof staticFromEventPattern;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/fromEventPattern.ts\n **/","import {Observable} from '../../Observable';\nimport {fromPromise as staticFromPromise} from '../../observable/fromPromise';\n\nObservable.fromPromise = staticFromPromise;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let fromPromise: typeof staticFromPromise;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/fromPromise.ts\n **/","import {Observable} from '../../Observable';\nimport {GenerateObservable} from '../../observable/GenerateObservable';\n\nObservable.generate = GenerateObservable.create;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let generate: typeof GenerateObservable.create;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/generate.ts\n **/","import {Observable} from '../../Observable';\nimport {interval as staticInterval} from '../../observable/interval';\n\nObservable.interval = staticInterval;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let interval: typeof staticInterval;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/interval.ts\n **/","import {Observable} from '../../Observable';\nimport {merge as mergeStatic} from '../../observable/merge';\n\nObservable.merge = mergeStatic;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let merge: typeof mergeStatic;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/merge.ts\n **/","import {Observable} from '../../Observable';\nimport {never as staticNever} from '../../observable/never';\n\nObservable.never = staticNever;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let never: typeof staticNever;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/never.ts\n **/","import {Observable} from '../../Observable';\nimport {of as staticOf} from '../../observable/of';\n\nObservable.of = staticOf;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let of: typeof staticOf; //formOf an iceberg!\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/of.ts\n **/","import {Observable} from '../../Observable';\nimport {raceStatic} from '../../operator/race';\n\nObservable.race = raceStatic;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let race: typeof raceStatic;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/race.ts\n **/","import {Observable} from '../../Observable';\nimport {range as staticRange} from '../../observable/range';\n\nObservable.range = staticRange;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let range: typeof staticRange;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/range.ts\n **/","import {Observable} from '../../Observable';\nimport {_throw} from '../../observable/throw';\n\nObservable.throw = _throw;\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/throw.ts\n **/","import {Observable} from '../../Observable';\nimport {timer as staticTimer} from '../../observable/timer';\n\nObservable.timer = staticTimer;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let timer: typeof staticTimer;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/timer.ts\n **/","import {Observable} from '../../Observable';\nimport {zip as zipStatic} from '../../observable/zip';\n\nObservable.zip = zipStatic;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let zip: typeof zipStatic;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/observable/zip.ts\n **/","import {Observable} from '../../Observable';\nimport {audit, AuditSignature} from '../../operator/audit';\n\nObservable.prototype.audit = audit;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    audit: AuditSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/audit.ts\n **/","import {Observable} from '../../Observable';\nimport {auditTime, AuditTimeSignature} from '../../operator/auditTime';\n\nObservable.prototype.auditTime = auditTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    auditTime: AuditTimeSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/auditTime.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {buffer, BufferSignature} from '../../operator/buffer';\n\nObservable.prototype.buffer = buffer;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    buffer: BufferSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/buffer.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {bufferCount, BufferCountSignature} from '../../operator/bufferCount';\n\nObservable.prototype.bufferCount = bufferCount;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    bufferCount: BufferCountSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/bufferCount.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {bufferTime, BufferTimeSignature} from '../../operator/bufferTime';\n\nObservable.prototype.bufferTime = bufferTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    bufferTime: BufferTimeSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/bufferTime.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {bufferToggle, BufferToggleSignature} from '../../operator/bufferToggle';\n\nObservable.prototype.bufferToggle = bufferToggle;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    bufferToggle: BufferToggleSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/bufferToggle.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {bufferWhen, BufferWhenSignature} from '../../operator/bufferWhen';\n\nObservable.prototype.bufferWhen = bufferWhen;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    bufferWhen: BufferWhenSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/bufferWhen.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {cache, CacheSignature} from '../../operator/cache';\n\nObservable.prototype.cache = cache;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    cache: CacheSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/cache.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {_catch, CatchSignature} from '../../operator/catch';\n\nObservable.prototype.catch = _catch;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    catch: CatchSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/catch.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {combineAll, CombineAllSignature} from '../../operator/combineAll';\n\nObservable.prototype.combineAll = combineAll;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    combineAll: CombineAllSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/combineAll.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {combineLatest, CombineLatestSignature} from '../../operator/combineLatest';\n\nObservable.prototype.combineLatest = combineLatest;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    combineLatest: CombineLatestSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/combineLatest.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {concat, ConcatSignature} from '../../operator/concat';\n\nObservable.prototype.concat = concat;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    concat: ConcatSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/concat.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {concatAll, ConcatAllSignature} from '../../operator/concatAll';\n\nObservable.prototype.concatAll = concatAll;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    concatAll: ConcatAllSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/concatAll.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {concatMap, ConcatMapSignature} from '../../operator/concatMap';\n\nObservable.prototype.concatMap = concatMap;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    concatMap: ConcatMapSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/concatMap.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {concatMapTo, ConcatMapToSignature} from '../../operator/concatMapTo';\n\nObservable.prototype.concatMapTo = concatMapTo;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    concatMapTo: ConcatMapToSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/concatMapTo.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {count, CountSignature} from '../../operator/count';\n\nObservable.prototype.count = count;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    count: CountSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/count.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {debounce, DebounceSignature} from '../../operator/debounce';\n\nObservable.prototype.debounce = debounce;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    debounce: DebounceSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/debounce.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {debounceTime, DebounceTimeSignature} from '../../operator/debounceTime';\n\nObservable.prototype.debounceTime = debounceTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    debounceTime: DebounceTimeSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/debounceTime.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {defaultIfEmpty, DefaultIfEmptySignature} from '../../operator/defaultIfEmpty';\n\nObservable.prototype.defaultIfEmpty = defaultIfEmpty;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    defaultIfEmpty: DefaultIfEmptySignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/defaultIfEmpty.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {delay, DelaySignature} from '../../operator/delay';\n\nObservable.prototype.delay = delay;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    delay: DelaySignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/delay.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {delayWhen, DelayWhenSignature} from '../../operator/delayWhen';\n\nObservable.prototype.delayWhen = delayWhen;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    delayWhen: DelayWhenSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/delayWhen.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {dematerialize, DematerializeSignature} from '../../operator/dematerialize';\n\nObservable.prototype.dematerialize = dematerialize;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    dematerialize: DematerializeSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/dematerialize.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {distinctUntilChanged, DistinctUntilChangedSignature} from '../../operator/distinctUntilChanged';\n\nObservable.prototype.distinctUntilChanged = distinctUntilChanged;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    distinctUntilChanged: DistinctUntilChangedSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/distinctUntilChanged.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {_do, DoSignature} from '../../operator/do';\n\nObservable.prototype.do = _do;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    do: DoSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/do.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {every, EverySignature} from '../../operator/every';\n\nObservable.prototype.every = every;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    every: EverySignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/every.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {expand, ExpandSignature} from '../../operator/expand';\n\nObservable.prototype.expand = expand;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    expand: ExpandSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/expand.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {filter, FilterSignature} from '../../operator/filter';\n\nObservable.prototype.filter = filter;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    filter: FilterSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/filter.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {_finally, FinallySignature} from '../../operator/finally';\n\nObservable.prototype.finally = _finally;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    finally: FinallySignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/finally.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {first, FirstSignature} from '../../operator/first';\n\nObservable.prototype.first = <any>first;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    first: FirstSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/first.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {groupBy, GroupBySignature} from '../../operator/groupBy';\n\nObservable.prototype.groupBy = <any>groupBy;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    groupBy: GroupBySignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/groupBy.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {ignoreElements, IgnoreElementsSignature} from '../../operator/ignoreElements';\n\nObservable.prototype.ignoreElements = ignoreElements;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    ignoreElements: IgnoreElementsSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/ignoreElements.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {last, LastSignature} from '../../operator/last';\n\nObservable.prototype.last = <any>last;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    last: LastSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/last.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {letProto, LetSignature} from '../../operator/let';\n\nObservable.prototype.let = letProto;\nObservable.prototype.letBind = letProto;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    let: LetSignature<T>;\n    letBind: LetSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/let.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {map, MapSignature} from '../../operator/map';\n\nObservable.prototype.map = map;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    map: MapSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/map.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {mapTo, MapToSignature} from '../../operator/mapTo';\n\nObservable.prototype.mapTo = mapTo;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    mapTo: MapToSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/mapTo.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {materialize, MaterializeSignature} from '../../operator/materialize';\n\nObservable.prototype.materialize = materialize;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    materialize: MaterializeSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/materialize.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {merge, MergeSignature} from '../../operator/merge';\n\nObservable.prototype.merge = merge;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    merge: MergeSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/merge.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {mergeAll, MergeAllSignature} from '../../operator/mergeAll';\n\nObservable.prototype.mergeAll = mergeAll;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    mergeAll: MergeAllSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/mergeAll.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {mergeMap, MergeMapSignature} from '../../operator/mergeMap';\n\nObservable.prototype.mergeMap = <any>mergeMap;\nObservable.prototype.flatMap = <any>mergeMap;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    flatMap: MergeMapSignature<T>;\n    mergeMap: MergeMapSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/mergeMap.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {mergeMapTo, MergeMapToSignature} from '../../operator/mergeMapTo';\n\nObservable.prototype.flatMapTo = <any>mergeMapTo;\nObservable.prototype.mergeMapTo = <any>mergeMapTo;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    flatMapTo: MergeMapToSignature<T>;\n    mergeMapTo: MergeMapToSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/mergeMapTo.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {multicast, MulticastSignature} from '../../operator/multicast';\n\nObservable.prototype.multicast = multicast;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    multicast: MulticastSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/multicast.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {observeOn, ObserveOnSignature} from '../../operator/observeOn';\n\nObservable.prototype.observeOn = observeOn;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    observeOn: ObserveOnSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/observeOn.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {partition, PartitionSignature} from '../../operator/partition';\n\nObservable.prototype.partition = partition;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    partition: PartitionSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/partition.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {pluck, PluckSignature} from '../../operator/pluck';\n\nObservable.prototype.pluck = pluck;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    pluck: PluckSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/pluck.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {publish, PublishSignature} from '../../operator/publish';\n\nObservable.prototype.publish = publish;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    publish: PublishSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/publish.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {publishBehavior, PublishBehaviorSignature} from '../../operator/publishBehavior';\n\nObservable.prototype.publishBehavior = publishBehavior;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    publishBehavior: PublishBehaviorSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/publishBehavior.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {publishLast, PublishLastSignature} from '../../operator/publishLast';\n\nObservable.prototype.publishLast = publishLast;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    publishLast: PublishLastSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/publishLast.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {publishReplay, PublishReplaySignature} from '../../operator/publishReplay';\n\nObservable.prototype.publishReplay = publishReplay;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    publishReplay: PublishReplaySignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/publishReplay.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {race, RaceSignature} from '../../operator/race';\n\nObservable.prototype.race = race;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    race: RaceSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/race.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {reduce, ReduceSignature} from '../../operator/reduce';\n\nObservable.prototype.reduce = reduce;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    reduce: ReduceSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/reduce.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {repeat, RepeatSignature} from '../../operator/repeat';\n\nObservable.prototype.repeat = repeat;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    repeat: RepeatSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/repeat.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {retry, RetrySignature} from '../../operator/retry';\n\nObservable.prototype.retry = retry;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    retry: RetrySignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/retry.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {retryWhen, RetryWhenSignature} from '../../operator/retryWhen';\n\nObservable.prototype.retryWhen = retryWhen;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    retryWhen: RetryWhenSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/retryWhen.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {sample, SampleSignature} from '../../operator/sample';\n\nObservable.prototype.sample = sample;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    sample: SampleSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/sample.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {sampleTime, SampleTimeSignature} from '../../operator/sampleTime';\n\nObservable.prototype.sampleTime = sampleTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    sampleTime: SampleTimeSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/sampleTime.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {scan, ScanSignature} from '../../operator/scan';\n\nObservable.prototype.scan = scan;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    scan: ScanSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/scan.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {share, ShareSignature} from '../../operator/share';\n\nObservable.prototype.share = share;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    share: ShareSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/share.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {single, SingleSignature} from '../../operator/single';\n\nObservable.prototype.single = single;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    single: SingleSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/single.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {skip, SkipSignature} from '../../operator/skip';\n\nObservable.prototype.skip = skip;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    skip: SkipSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/skip.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {skipUntil, SkipUntilSignature} from '../../operator/skipUntil';\n\nObservable.prototype.skipUntil = skipUntil;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    skipUntil: SkipUntilSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/skipUntil.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {skipWhile, SkipWhileSignature} from '../../operator/skipWhile';\n\nObservable.prototype.skipWhile = skipWhile;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    skipWhile: SkipWhileSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/skipWhile.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {startWith, StartWithSignature} from '../../operator/startWith';\n\nObservable.prototype.startWith = startWith;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    startWith: StartWithSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/startWith.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {subscribeOn, SubscribeOnSignature} from '../../operator/subscribeOn';\n\nObservable.prototype.subscribeOn = subscribeOn;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    subscribeOn: SubscribeOnSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/subscribeOn.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {_switch, SwitchSignature} from '../../operator/switch';\n\nObservable.prototype.switch = _switch;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    switch: SwitchSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/switch.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {switchMap, SwitchMapSignature} from '../../operator/switchMap';\n\nObservable.prototype.switchMap = switchMap;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    switchMap: SwitchMapSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/switchMap.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {switchMapTo, SwitchMapToSignature} from '../../operator/switchMapTo';\n\nObservable.prototype.switchMapTo = switchMapTo;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    switchMapTo: SwitchMapToSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/switchMapTo.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {take, TakeSignature} from '../../operator/take';\n\nObservable.prototype.take = take;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    take: TakeSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/take.ts\n **/","import {Observable} from '../../Observable';\nimport {takeLast, TakeLastSignature} from '../../operator/takeLast';\n\nObservable.prototype.takeLast = takeLast;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    takeLast: TakeLastSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/takeLast.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {takeUntil, TakeUntilSignature} from '../../operator/takeUntil';\n\nObservable.prototype.takeUntil = takeUntil;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    takeUntil: TakeUntilSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/takeUntil.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {takeWhile, TakeWhileSignature} from '../../operator/takeWhile';\n\nObservable.prototype.takeWhile = takeWhile;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    takeWhile: TakeWhileSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/takeWhile.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {throttle, ThrottleSignature} from '../../operator/throttle';\n\nObservable.prototype.throttle = throttle;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    throttle: ThrottleSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/throttle.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {throttleTime, ThrottleTimeSignature} from '../../operator/throttleTime';\n\nObservable.prototype.throttleTime = throttleTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    throttleTime: ThrottleTimeSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/throttleTime.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {timeout, TimeoutSignature} from '../../operator/timeout';\n\nObservable.prototype.timeout = timeout;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    timeout: TimeoutSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/timeout.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {timeoutWith, TimeoutWithSignature} from '../../operator/timeoutWith';\n\nObservable.prototype.timeoutWith = timeoutWith;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    timeoutWith: TimeoutWithSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/timeoutWith.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {toArray, ToArraySignature} from '../../operator/toArray';\n\nObservable.prototype.toArray = toArray;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    toArray: ToArraySignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/toArray.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {toPromise, ToPromiseSignature} from '../../operator/toPromise';\n\nObservable.prototype.toPromise = toPromise;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    toPromise: ToPromiseSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/toPromise.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {window, WindowSignature} from '../../operator/window';\n\nObservable.prototype.window = window;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    window: WindowSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/window.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {windowCount, WindowCountSignature} from '../../operator/windowCount';\n\nObservable.prototype.windowCount = windowCount;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    windowCount: WindowCountSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/windowCount.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {windowTime, WindowTimeSignature} from '../../operator/windowTime';\n\nObservable.prototype.windowTime = windowTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    windowTime: WindowTimeSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/windowTime.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {windowToggle, WindowToggleSignature} from '../../operator/windowToggle';\n\nObservable.prototype.windowToggle = windowToggle;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    windowToggle: WindowToggleSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/windowToggle.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {windowWhen, WindowWhenSignature} from '../../operator/windowWhen';\n\nObservable.prototype.windowWhen = windowWhen;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    windowWhen: WindowWhenSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/windowWhen.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {withLatestFrom, WithLatestFromSignature} from '../../operator/withLatestFrom';\n\nObservable.prototype.withLatestFrom = withLatestFrom;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    withLatestFrom: WithLatestFromSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/withLatestFrom.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {zipProto, ZipSignature} from '../../operator/zip';\n\nObservable.prototype.zip = zipProto;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    zip: ZipSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/zip.ts\n **/","\nimport {Observable} from '../../Observable';\nimport {zipAll, ZipAllSignature} from '../../operator/zipAll';\n\nObservable.prototype.zipAll = zipAll;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    zipAll: ZipAllSignature<T>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/add/operator/zipAll.ts\n **/","import {Scheduler} from '../Scheduler';\nimport {Observable} from '../Observable';\nimport {ScalarObservable} from './ScalarObservable';\nimport {EmptyObservable} from './EmptyObservable';\nimport {Subscriber} from '../Subscriber';\nimport {TeardownLogic} from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayLikeObservable<T> extends Observable<T> {\n\n  private mapFn: (x: T, y: number) => T;\n\n  static create<T>(arrayLike: ArrayLike<T>, mapFn: (x: T, y: number) => T, thisArg: any, scheduler?: Scheduler): Observable<T> {\n    const length = arrayLike.length;\n    if (length === 0) {\n      return new EmptyObservable<T>();\n    } else if (length === 1 && !mapFn) {\n      return new ScalarObservable<T>(<any>arrayLike[0], scheduler);\n    } else {\n      return new ArrayLikeObservable(arrayLike, mapFn, thisArg, scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n    const { arrayLike, index, length, mapFn, subscriber } = state;\n\n    if (subscriber.isUnsubscribed) {\n      return;\n    }\n\n    if (index >= length) {\n      subscriber.complete();\n      return;\n    }\n\n    const result = mapFn ? mapFn(arrayLike[index], index) : arrayLike[index];\n    subscriber.next(result);\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  private value: any;\n\n  constructor(private arrayLike: ArrayLike<T>, mapFn: (x: T, y: number) => T, thisArg: any, private scheduler?: Scheduler) {\n    super();\n    if (!mapFn && !scheduler && arrayLike.length === 1) {\n      this._isScalar = true;\n      this.value = arrayLike[0];\n    }\n    if (mapFn) {\n      this.mapFn = mapFn.bind(thisArg);\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const { arrayLike, mapFn, scheduler } = this;\n    const length = arrayLike.length;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n        arrayLike, index, length, mapFn, subscriber\n      });\n    } else {\n      for (let i = 0; i < length && !subscriber.isUnsubscribed; i++) {\n        const result = mapFn ? mapFn(arrayLike[i], i) : arrayLike[i];\n        subscriber.next(result);\n      }\n      subscriber.complete();\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/ArrayLikeObservable.ts\n **/","import {Observable} from '../Observable';\nimport {Subscriber} from '../Subscriber';\nimport {Subscription} from '../Subscription';\nimport {Scheduler} from '../Scheduler';\nimport {tryCatch} from '../util/tryCatch';\nimport {errorObject} from '../util/errorObject';\nimport {AsyncSubject} from '../AsyncSubject';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class BoundCallbackObservable<T> extends Observable<T> {\n  subject: AsyncSubject<T>;\n\n  /* tslint:disable:max-line-length */\n  static create<R>(callbackFunc: (callback: (result: R) => any) => any, selector?: void, scheduler?: Scheduler): () => Observable<R>;\n  static create<T, R>(callbackFunc: (v1: T, callback: (result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T) => Observable<R>;\n  static create<T, T2, R>(callbackFunc: (v1: T, v2: T2, callback: (result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T, v2: T2) => Observable<R>;\n  static create<T, T2, T3, R>(callbackFunc: (v1: T, v2: T2, v3: T3, callback: (result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3) => Observable<R>;\n  static create<T, T2, T3, T4, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, callback: (result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3, v4: T4) => Observable<R>;\n  static create<T, T2, T3, T4, T5, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, callback: (result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => Observable<R>;\n  static create<T, T2, T3, T4, T5, T6, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, callback: (result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => Observable<R>;\n  static create<R>(callbackFunc: (callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: Scheduler): () => Observable<R>;\n  static create<T, R>(callbackFunc: (v1: T, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: Scheduler): (v1: T) => Observable<R>;\n  static create<T, T2, R>(callbackFunc: (v1: T, v2: T2, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: Scheduler): (v1: T, v2: T2) => Observable<R>;\n  static create<T, T2, T3, R>(callbackFunc: (v1: T, v2: T2, v3: T3, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3) => Observable<R>;\n  static create<T, T2, T3, T4, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3, v4: T4) => Observable<R>;\n  static create<T, T2, T3, T4, T5, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => Observable<R>;\n  static create<T, T2, T3, T4, T5, T6, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => Observable<R>;\n  static create<T>(callbackFunc: Function, selector?: void, scheduler?: Scheduler): (...args: any[]) => Observable<T>;\n  static create<T>(callbackFunc: Function, selector?: (...args: any[]) => T, scheduler?: Scheduler): (...args: any[]) => Observable<T>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Converts a callback API to a function that returns an Observable.\n   *\n   * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n   * it will return a function `g` that when called as `g(x)` will output an\n   * Observable.</span>\n   *\n   * `bindCallback` is not an operator because its input and output are not\n   * Observables. The input is a function `func` with some parameters, but the\n   * last parameter must be a callback function that `func` calls when it is\n   * done. The output of `bindCallback` is a function that takes the same\n   * parameters as `func`, except the last one (the callback). When the output\n   * function is called with arguments, it will return an Observable where the\n   * results will be delivered to.\n   *\n   * @example <caption>Convert jQuery's getJSON to an Observable API</caption>\n   * // Suppose we have jQuery.getJSON('/my/url', callback)\n   * var getJSONAsObservable = Rx.Observable.bindCallback(jQuery.getJSON);\n   * var result = getJSONAsObservable('/my/url');\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link bindNodeCallback}\n   * @see {@link from}\n   * @see {@link fromPromise}\n   *\n   * @param {function} func Function with a callback as the last parameter.\n   * @param {function} selector A function which takes the arguments from the\n   * callback and maps those a value to emit on the output Observable.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * callbacks.\n   * @return {function(...params: *): Observable} A function which returns the\n   * Observable that delivers the same values the callback would deliver.\n   * @static true\n   * @name bindCallback\n   * @owner Observable\n   */\n  static create<T>(func: Function,\n                   selector: Function | void = undefined,\n                   scheduler?: Scheduler): (...args: any[]) => Observable<T> {\n    return (...args: any[]): Observable<T> => {\n      return new BoundCallbackObservable<T>(func, <any>selector, args, scheduler);\n    };\n  }\n\n  constructor(private callbackFunc: Function,\n              private selector: Function,\n              private args: any[],\n              public scheduler: Scheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T | T[]>): Subscription {\n    const callbackFunc = this.callbackFunc;\n    const args = this.args;\n    const scheduler = this.scheduler;\n    let subject = this.subject;\n\n    if (!scheduler) {\n      if (!subject) {\n        subject = this.subject = new AsyncSubject<T>();\n        const handler = function handlerFn(...innerArgs: any[]) {\n          const source = (<any>handlerFn).source;\n          const { selector, subject } = source;\n          if (selector) {\n            const result = tryCatch(selector).apply(this, innerArgs);\n            if (result === errorObject) {\n              subject.error(errorObject.e);\n            } else {\n              subject.next(result);\n              subject.complete();\n            }\n          } else {\n            subject.next(innerArgs.length === 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          }\n        };\n        // use named function instance to avoid closure.\n        (<any>handler).source = this;\n\n        const result = tryCatch(callbackFunc).apply(this, args.concat(handler));\n        if (result === errorObject) {\n          subject.error(errorObject.e);\n        }\n      }\n      return subject.subscribe(subscriber);\n    } else {\n      return scheduler.schedule(dispatch, 0, { source: this, subscriber });\n    }\n  }\n}\n\nfunction dispatch<T>(state: { source: BoundCallbackObservable<T>, subscriber: Subscriber<T> }) {\n  const self = (<Subscription> this);\n  const { source, subscriber } = state;\n  const { callbackFunc, args, scheduler } = source;\n  let subject = source.subject;\n\n  if (!subject) {\n    subject = source.subject = new AsyncSubject<T>();\n\n    const handler = function handlerFn(...innerArgs: any[]) {\n      const source = (<any>handlerFn).source;\n      const { selector, subject } = source;\n      if (selector) {\n        const result = tryCatch(selector).apply(this, innerArgs);\n        if (result === errorObject) {\n          self.add(scheduler.schedule(dispatchError, 0, { err: errorObject.e, subject }));\n        } else {\n          self.add(scheduler.schedule(dispatchNext, 0, { value: result, subject }));\n        }\n      } else {\n        const value = innerArgs.length === 1 ? innerArgs[0] : innerArgs;\n        self.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n      }\n    };\n    // use named function to pass values in without closure\n    (<any>handler).source = source;\n\n    const result = tryCatch(callbackFunc).apply(this, args.concat(handler));\n    if (result === errorObject) {\n      subject.error(errorObject.e);\n    }\n  }\n\n  self.add(subject.subscribe(subscriber));\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/BoundCallbackObservable.ts\n **/","import {Observable} from '../Observable';\nimport {Subscriber} from '../Subscriber';\nimport {Subscription} from '../Subscription';\nimport {Scheduler} from '../Scheduler';\nimport {tryCatch} from '../util/tryCatch';\nimport {errorObject} from '../util/errorObject';\nimport {AsyncSubject} from '../AsyncSubject';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class BoundNodeCallbackObservable<T> extends Observable<T> {\n  subject: AsyncSubject<T>;\n\n  /* tslint:disable:max-line-length */\n  static create<R>(callbackFunc: (callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: Scheduler): () => Observable<R>;\n  static create<T, R>(callbackFunc: (v1: T, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T) => Observable<R>;\n  static create<T, T2, R>(callbackFunc: (v1: T, v2: T2, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T, v2: T2) => Observable<R>;\n  static create<T, T2, T3, R>(callbackFunc: (v1: T, v2: T2, v3: T3, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3) => Observable<R>;\n  static create<T, T2, T3, T4, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3, v4: T4) => Observable<R>;\n  static create<T, T2, T3, T4, T5, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => Observable<R>;\n  static create<T, T2, T3, T4, T5, T6, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: Scheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => Observable<R>;\n  static create<T>(callbackFunc: Function, selector?: void, scheduler?: Scheduler): (...args: any[]) => Observable<T>;\n  static create<T>(callbackFunc: Function, selector?: (...args: any[]) => T, scheduler?: Scheduler): (...args: any[]) => Observable<T>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Converts a Node.js-style callback API to a function that returns an\n   * Observable.\n   *\n   * <span class=\"informal\">It's just like {@link bindCallback}, but the\n   * callback is expected to be of type `callback(error, result)`.</span>\n   *\n   * `bindNodeCallback` is not an operator because its input and output are not\n   * Observables. The input is a function `func` with some parameters, but the\n   * last parameter must be a callback function that `func` calls when it is\n   * done. The callback function is expected to follow Node.js conventions,\n   * where the first argument to the callback is an error, while remaining\n   * arguments are the callback result. The output of `bindNodeCallback` is a\n   * function that takes the same parameters as `func`, except the last one (the\n   * callback). When the output function is called with arguments, it will\n   * return an Observable where the results will be delivered to.\n   *\n   * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>\n   * import * as fs from 'fs';\n   * var readFileAsObservable = Rx.Observable.bindNodeCallback(fs.readFile);\n   * var result = readFileAsObservable('./roadNames.txt', 'utf8');\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link bindCallback}\n   * @see {@link from}\n   * @see {@link fromPromise}\n   *\n   * @param {function} func Function with a callback as the last parameter.\n   * @param {function} selector A function which takes the arguments from the\n   * callback and maps those a value to emit on the output Observable.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * callbacks.\n   * @return {function(...params: *): Observable} A function which returns the\n   * Observable that delivers the same values the Node.js callback would\n   * deliver.\n   * @static true\n   * @name bindNodeCallback\n   * @owner Observable\n   */\n  static create<T>(func: Function,\n                   selector: Function | void = undefined,\n                   scheduler?: Scheduler): (...args: any[]) => Observable<T> {\n    return (...args: any[]): Observable<T> => {\n      return new BoundNodeCallbackObservable<T>(func, <any>selector, args, scheduler);\n    };\n  }\n\n  constructor(private callbackFunc: Function,\n              private selector: Function,\n              private args: any[],\n              public scheduler: Scheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T | T[]>): Subscription {\n    const callbackFunc = this.callbackFunc;\n    const args = this.args;\n    const scheduler = this.scheduler;\n    let subject = this.subject;\n\n    if (!scheduler) {\n      if (!subject) {\n        subject = this.subject = new AsyncSubject<T>();\n        const handler = function handlerFn(...innerArgs: any[]) {\n          const source = (<any>handlerFn).source;\n          const { selector, subject } = source;\n          const err = innerArgs.shift();\n\n          if (err) {\n            subject.error(err);\n          } else if (selector) {\n            const result = tryCatch(selector).apply(this, innerArgs);\n            if (result === errorObject) {\n              subject.error(errorObject.e);\n            } else {\n              subject.next(result);\n              subject.complete();\n            }\n          } else {\n            subject.next(innerArgs.length === 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          }\n        };\n        // use named function instance to avoid closure.\n        (<any>handler).source = this;\n\n        const result = tryCatch(callbackFunc).apply(this, args.concat(handler));\n        if (result === errorObject) {\n          subject.error(errorObject.e);\n        }\n      }\n      return subject.subscribe(subscriber);\n    } else {\n      return scheduler.schedule(dispatch, 0, { source: this, subscriber });\n    }\n  }\n}\n\nfunction dispatch<T>(state: { source: BoundNodeCallbackObservable<T>, subscriber: Subscriber<T> }) {\n  const self = (<Subscription> this);\n  const { source, subscriber } = state;\n  const { callbackFunc, args, scheduler } = source;\n  let subject = source.subject;\n\n  if (!subject) {\n    subject = source.subject = new AsyncSubject<T>();\n\n    const handler = function handlerFn(...innerArgs: any[]) {\n      const source = (<any>handlerFn).source;\n      const { selector, subject } = source;\n      const err = innerArgs.shift();\n\n      if (err) {\n        subject.error(err);\n      } else if (selector) {\n        const result = tryCatch(selector).apply(this, innerArgs);\n        if (result === errorObject) {\n          self.add(scheduler.schedule(dispatchError, 0, { err: errorObject.e, subject }));\n        } else {\n          self.add(scheduler.schedule(dispatchNext, 0, { value: result, subject }));\n        }\n      } else {\n        const value = innerArgs.length === 1 ? innerArgs[0] : innerArgs;\n        self.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n      }\n    };\n    // use named function to pass values in without closure\n    (<any>handler).source = source;\n\n    const result = tryCatch(callbackFunc).apply(this, args.concat(handler));\n    if (result === errorObject) {\n      subject.error(errorObject.e);\n    }\n  }\n\n  self.add(subject.subscribe(subscriber));\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/BoundNodeCallbackObservable.ts\n **/","import {Observable, SubscribableOrPromise} from '../Observable';\nimport {Subscriber} from '../Subscriber';\nimport {Subscription} from '../Subscription';\n\nimport {subscribeToResult} from '../util/subscribeToResult';\nimport {OuterSubscriber} from '../OuterSubscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class DeferObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that, on subscribe, calls an Observable factory to\n   * make an Observable for each new Observer.\n   *\n   * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n   * is subscribed.\n   * </span>\n   *\n   * <img src=\"./img/defer.png\" width=\"100%\">\n   *\n   * `defer` allows you to create the Observable only when the Observer\n   * subscribes, and create a fresh Observable for each Observer. It waits until\n   * an Observer subscribes to it, and then it generates an Observable,\n   * typically with an Observable factory function. It does this afresh for each\n   * subscriber, so although each subscriber may think it is subscribing to the\n   * same Observable, in fact each subscriber gets its own individual\n   * Observable.\n   *\n   * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n   * var clicksOrInterval = Rx.Observable.defer(function () {\n   *   if (Math.random() > 0.5) {\n   *     return Rx.Observable.fromEvent(document, 'click');\n   *   } else {\n   *     return Rx.Observable.interval(1000);\n   *   }\n   * });\n   * clicksOrInterval.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   *\n   * @param {function(): Observable|Promise} observableFactory The Observable\n   * factory function to invoke for each Observer that subscribes to the output\n   * Observable. May also return a Promise, which will be converted on the fly\n   * to an Observable.\n   * @return {Observable} An Observable whose Observers' subscriptions trigger\n   * an invocation of the given Observable factory function.\n   * @static true\n   * @name defer\n   * @owner Observable\n   */\n  static create<T>(observableFactory: () => SubscribableOrPromise<T> | void): Observable<T> {\n    return new DeferObservable(observableFactory);\n  }\n\n  constructor(private observableFactory: () => SubscribableOrPromise<T> | void) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return new DeferSubscriber(subscriber, this.observableFactory);\n  }\n}\n\nclass DeferSubscriber<T> extends OuterSubscriber<T, T> {\n  constructor(destination: Subscriber<T>,\n              private factory: () => SubscribableOrPromise<T> | void) {\n    super(destination);\n    this.tryDefer();\n  }\n\n  private tryDefer(): void {\n    try {\n      this._callFactory();\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private _callFactory(): void {\n    const result = this.factory();\n    if (result) {\n      this.add(subscribeToResult(this, result));\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/DeferObservable.ts\n **/","import {Scheduler} from '../Scheduler';\nimport {Observable} from '../Observable';\nimport {TeardownLogic} from '../Subscription';\n\nexport interface DispatchArg {\n  error: any;\n  subscriber: any;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ErrorObservable extends Observable<any> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits an error notification.\n   *\n   * <span class=\"informal\">Just emits 'error', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/throw.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the error notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then emit an error.</caption>\n   * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @example <caption>Map and flattens numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x === 13 ?\n   *     Rx.Observable.throw('Thirteens are bad') :\n   *     Rx.Observable.of('a', 'b', 'c')\n   * );\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link of}\n   *\n   * @param {any} error The particular Error to pass to the error notification.\n   * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n   * the emission of the error notification.\n   * @return {Observable} An error Observable: emits only the error notification\n   * using the given error argument.\n   * @static true\n   * @name throw\n   * @owner Observable\n   */\n  static create<T>(error: any, scheduler?: Scheduler) {\n    return new ErrorObservable(error, scheduler);\n  }\n\n  static dispatch(arg: DispatchArg) {\n    const { error, subscriber } = arg;\n    subscriber.error(error);\n  }\n\n  constructor(public error: any, private scheduler?: Scheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: any): TeardownLogic {\n    const error = this.error;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ErrorObservable.dispatch, 0, {\n        error, subscriber\n      });\n    } else {\n      subscriber.error(error);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/ErrorObservable.ts\n **/","import {Observable, SubscribableOrPromise} from '../Observable';\nimport {Subscriber} from '../Subscriber';\nimport {Subscription} from '../Subscription';\nimport {EmptyObservable} from './EmptyObservable';\nimport {isArray} from '../util/isArray';\n\nimport {subscribeToResult} from '../util/subscribeToResult';\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ForkJoinObservable<T> extends Observable<T> {\n  constructor(private sources: Array<SubscribableOrPromise<any>>,\n              private resultSelector?: (...values: Array<any>) => T) {\n    super();\n  }\n\n  /**\n   * @param sources\n   * @return {any}\n   * @static true\n   * @name forkJoin\n   * @owner Observable\n   */\n  static create<T>(...sources: Array<SubscribableOrPromise<any> |\n                                  Array<SubscribableOrPromise<any>> |\n                                  ((...values: Array<any>) => any)>): Observable<T> {\n    if (sources === null || arguments.length === 0) {\n      return new EmptyObservable<T>();\n    }\n\n    let resultSelector: (...values: Array<any>) => any = null;\n    if (typeof sources[sources.length - 1] === 'function') {\n      resultSelector = <(...values: Array<any>) => any>sources.pop();\n    }\n\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`\n    if (sources.length === 1 && isArray(sources[0])) {\n      sources = <Array<SubscribableOrPromise<any>>>sources[0];\n    }\n\n    if (sources.length === 0) {\n      return new EmptyObservable<T>();\n    }\n\n    return new ForkJoinObservable(<Array<SubscribableOrPromise<any>>>sources, resultSelector);\n  }\n\n  protected _subscribe(subscriber: Subscriber<any>): Subscription {\n    return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ForkJoinSubscriber<T> extends OuterSubscriber<T, T> {\n  private completed = 0;\n  private total: number;\n  private values: any[];\n  private haveValues = 0;\n\n  constructor(destination: Subscriber<T>,\n              private sources: Array<SubscribableOrPromise<any>>,\n              private resultSelector?: (...values: Array<any>) => T) {\n    super(destination);\n\n    const len = sources.length;\n    this.total = len;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      const source = sources[i];\n      const innerSubscription = subscribeToResult(this, source, null, i);\n\n      if (innerSubscription) {\n        (<any> innerSubscription).outerIndex = i;\n        this.add(innerSubscription);\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values[outerIndex] = innerValue;\n    if (!(<any>innerSub)._hasValue) {\n      (<any>innerSub)._hasValue = true;\n      this.haveValues++;\n    }\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, T>): void {\n    const destination = this.destination;\n    const { haveValues, resultSelector, values } = this;\n    const len = values.length;\n\n    if (!(<any>innerSub)._hasValue) {\n      destination.complete();\n      return;\n    }\n\n    this.completed++;\n\n    if (this.completed !== len) {\n      return;\n    }\n\n    if (haveValues === len) {\n      const value = resultSelector ? resultSelector.apply(this, values) : values;\n      destination.next(value);\n    }\n\n    destination.complete();\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/ForkJoinObservable.ts\n **/","import {Observable} from '../Observable';\nimport {tryCatch} from '../util/tryCatch';\nimport {errorObject} from '../util/errorObject';\nimport {Subscription} from '../Subscription';\nimport {Subscriber} from '../Subscriber';\n\nexport type NodeStyleEventEmmitter = {\n  addListener: (eventName: string, handler: Function) => void;\n  removeListener: (eventName: string, handler: Function) => void;\n};\nfunction isNodeStyleEventEmmitter(sourceObj: any): sourceObj is NodeStyleEventEmmitter {\n  return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nexport type JQueryStyleEventEmitter = {\n  on: (eventName: string, handler: Function) => void;\n  off: (eventName: string, handler: Function) => void;\n};\nfunction isJQueryStyleEventEmitter(sourceObj: any): sourceObj is JQueryStyleEventEmitter {\n  return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isNodeList(sourceObj: any): sourceObj is NodeList {\n  return !!sourceObj && sourceObj.toString() === '[object NodeList]';\n}\n\nfunction isHTMLCollection(sourceObj: any): sourceObj is HTMLCollection {\n  return !!sourceObj && sourceObj.toString() === '[object HTMLCollection]';\n}\n\nfunction isEventTarget(sourceObj: any): sourceObj is EventTarget {\n  return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n\nexport type EventTargetLike = EventTarget | NodeStyleEventEmmitter | JQueryStyleEventEmitter | NodeList | HTMLCollection;\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromEventObservable<T, R> extends Observable<T> {\n\n  /**\n   * Creates an Observable that emits events of a specific type coming from the\n   * given event target.\n   *\n   * <span class=\"informal\">Creates an Observable from DOM events, or Node\n   * EventEmitter events or others.</span>\n   *\n   * <img src=\"./img/fromEvent.png\" width=\"100%\">\n   *\n   * Creates an Observable by attaching an event listener to an \"event target\",\n   * which may be an object with `addEventListener` and `removeEventListener`,\n   * a Node.js EventEmitter, a jQuery style EventEmitter, a NodeList from the\n   * DOM, or an HTMLCollection from the DOM. The event handler is attached when\n   * the output Observable is subscribed, and removed when the Subscription is\n   * unsubscribed.\n   *\n   * @example <caption>Emits clicks happening on the DOM document</caption>\n   * var clicks = Rx.Observable.fromEvent(document, 'click');\n   * clicks.subscribe(x => console.log(x));\n   *\n   * @see {@link from}\n   * @see {@link fromEventPattern}\n   *\n   * @param {EventTargetLike} target The DOMElement, event target, Node.js\n   * EventEmitter, NodeList or HTMLCollection to attach the event handler to.\n   * @param {string} eventName The event name of interest, being emitted by the\n   * `target`.\n   * @param {function(...args: any): T} [selector] An optional function to\n   * post-process results. It takes the arguments from the event handler and\n   * should return a single value.\n   * @return {Observable<T>}\n   * @static true\n   * @name fromEvent\n   * @owner Observable\n   */\n  static create<T>(target: EventTargetLike,\n                   eventName: string,\n                   selector?: (...args: Array<any>) => T): Observable<T> {\n    return new FromEventObservable(target, eventName, selector);\n  }\n\n  constructor(private sourceObj: EventTargetLike,\n              private eventName: string,\n              private selector?: (...args: Array<any>) => T) {\n    super();\n  }\n\n  private static setupSubscription<T>(sourceObj: EventTargetLike,\n                                      eventName: string,\n                                      handler: Function,\n                                      subscriber: Subscriber<T>) {\n    let unsubscribe: () => void;\n    if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n      for (let i = 0, len = sourceObj.length; i < len; i++) {\n        FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber);\n      }\n    } else if (isEventTarget(sourceObj)) {\n      sourceObj.addEventListener(eventName, <EventListener>handler);\n      unsubscribe = () => sourceObj.removeEventListener(eventName, <EventListener>handler);\n    } else if (isJQueryStyleEventEmitter(sourceObj)) {\n      sourceObj.on(eventName, handler);\n      unsubscribe = () => sourceObj.off(eventName, handler);\n    } else if (isNodeStyleEventEmmitter(sourceObj)) {\n      sourceObj.addListener(eventName, handler);\n      unsubscribe = () => sourceObj.removeListener(eventName, handler);\n    }\n\n    subscriber.add(new Subscription(unsubscribe));\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    const sourceObj = this.sourceObj;\n    const eventName = this.eventName;\n    const selector = this.selector;\n    let handler = selector ? (...args: any[]) => {\n      let result = tryCatch(selector)(...args);\n      if (result === errorObject) {\n        subscriber.error(errorObject.e);\n      } else {\n        subscriber.next(result);\n      }\n    } : (e: any) => subscriber.next(e);\n\n    FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/FromEventObservable.ts\n **/","import {Observable} from '../Observable';\nimport {Subscription} from '../Subscription';\nimport {tryCatch} from '../util/tryCatch';\nimport {errorObject} from '../util/errorObject';\nimport {Subscriber} from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromEventPatternObservable<T, R> extends Observable<T> {\n\n  /**\n   * Creates an Observable from an API based on addHandler/removeHandler\n   * functions.\n   *\n   * <span class=\"informal\">Converts any addHandler/removeHandler API to an\n   * Observable.</span>\n   *\n   * <img src=\"./img/fromEventPattern.png\" width=\"100%\">\n   *\n   * Creates an Observable by using the `addHandler` and `removeHandler`\n   * functions to add and remove the handlers, with an optional selector\n   * function to project the event arguments to a result. The `addHandler` is\n   * called when the output Observable is subscribed, and `removeHandler` is\n   * called when the Subscription is unsubscribed.\n   *\n   * @example <caption>Emits clicks happening on the DOM document</caption>\n   * function addClickHandler(handler) {\n   *   document.addEventListener('click', handler);\n   * }\n   *  \n   * function removeClickHandler(handler) {\n   *   document.removeEventListener('click', handler);\n   * }\n   *  \n   * var clicks = Rx.Observable.fromEventPattern(\n   *   addClickHandler,\n   *   removeClickHandler\n   * );\n   * clicks.subscribe(x => console.log(x));\n   *\n   * @see {@link from}\n   * @see {@link fromEvent}\n   *\n   * @param {function(handler: Function): any} addHandler A function that takes\n   * a `handler` function as argument and attaches it somehow to the actual\n   * source of events.\n   * @param {function(handler: Function): void} removeHandler A function that\n   * takes a `handler` function as argument and removes it in case it was\n   * previously attached using `addHandler`.\n   * @param {function(...args: any): T} [selector] An optional function to\n   * post-process results. It takes the arguments from the event handler and\n   * should return a single value.\n   * @return {Observable<T>}\n   * @static true\n   * @name fromEventPattern\n   * @owner Observable\n   */\n  static create<T>(addHandler: (handler: Function) => any,\n                   removeHandler: (handler: Function) => void,\n                   selector?: (...args: Array<any>) => T) {\n    return new FromEventPatternObservable(addHandler, removeHandler, selector);\n  }\n\n  constructor(private addHandler: (handler: Function) => any,\n              private removeHandler: (handler: Function) => void,\n              private selector?: (...args: Array<any>) => T) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    const addHandler = this.addHandler;\n    const removeHandler = this.removeHandler;\n    const selector = this.selector;\n\n    const handler = selector ? function(e: any) {\n      let result = tryCatch(selector).apply(null, arguments);\n      if (result === errorObject) {\n        subscriber.error(result.e);\n      } else {\n        subscriber.next(result);\n      }\n    } : function(e: any) { subscriber.next(e); };\n\n    let result = tryCatch(addHandler)(handler);\n    if (result === errorObject) {\n      subscriber.error(result.e);\n    }\n    subscriber.add(new Subscription(() => {\n      //TODO: determine whether or not to forward to error handler\n      removeHandler(handler);\n    }));\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/FromEventPatternObservable.ts\n **/","import {isArray} from '../util/isArray';\nimport {isFunction} from '../util/isFunction';\nimport {isPromise} from '../util/isPromise';\nimport {isScheduler} from '../util/isScheduler';\nimport {PromiseObservable} from './PromiseObservable';\nimport {IteratorObservable} from'./IteratorObservable';\nimport {ArrayObservable} from './ArrayObservable';\nimport {ArrayLikeObservable} from './ArrayLikeObservable';\n\nimport {Scheduler} from '../Scheduler';\nimport {$$iterator} from '../symbol/iterator';\nimport {Observable, ObservableInput} from '../Observable';\nimport {Subscriber} from '../Subscriber';\nimport {ObserveOnSubscriber} from '../operator/observeOn';\n\nimport * as $$observable from 'symbol-observable';\n\nconst isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number');\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromObservable<T> extends Observable<T> {\n  constructor(private ish: ObservableInput<T>, private scheduler: Scheduler) {\n    super(null);\n  }\n\n  static create<T>(ish: ObservableInput<T>, scheduler?: Scheduler): Observable<T>;\n  static create<T, R>(ish: ArrayLike<T>, mapFn: (x: any, y: number) => R, thisArg?: any, scheduler?: Scheduler): Observable<R>;\n\n  /**\n   * Creates an Observable from an Array, an array-like object, a Promise, an\n   * iterable object, or an Observable-like object.\n   *\n   * <span class=\"informal\">Converts almost anything to an Observable.</span>\n   *\n   * <img src=\"./img/from.png\" width=\"100%\">\n   *\n   * Convert various other objects and data types into Observables. `from`\n   * converts a Promise or an array-like or an\n   * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n   * object into an Observable that emits the items in that promise or array or\n   * iterable. A String, in this context, is treated as an array of characters.\n   * Observable-like objects (contains a function named with the ES2015 Symbol\n   * for Observable) can also be converted through this operator.\n   *\n   * @example <caption>Converts an array to an Observable</caption>\n   * var array = [10, 20, 30];\n   * var result = Rx.Observable.from(array);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n   * function* generateDoubles(seed) {\n   *   var i = seed;\n   *   while (true) {\n   *     yield i;\n   *     i = 2 * i; // double it\n   *   }\n   * }\n   *  \n   * var iterator = generateDoubles(3);\n   * var result = Rx.Observable.from(iterator).take(10);\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link fromEvent}\n   * @see {@link fromEventPattern}\n   * @see {@link fromPromise}\n   *  \n   * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n   * Observable-like, an Array, an iterable or an array-like object to be\n   * converted.\n   * @param {function(x: any, i: number): T} [mapFn] A \"map\" function to call\n   * when converting array-like objects, where `x` is a value from the\n   * array-like and `i` is the index of that value in the sequence.\n   * @param {any} [thisArg] The context object to use when calling the `mapFn`,\n   * if provided.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * emissions of values.\n   * @return {Observable<T>} The Observable whose values are originally from the\n   * input object that was converted.\n   * @static true\n   * @name from\n   * @owner Observable\n   */\n  static create<T>(ish: ObservableInput<T>,\n                   mapFnOrScheduler?: Scheduler | ((x: any, y: number) => T),\n                   thisArg?: any,\n                   lastScheduler?: Scheduler): Observable<T> {\n    let scheduler: Scheduler = null;\n    let mapFn: (x: any, i: number) => T = null;\n    if (isFunction(mapFnOrScheduler)) {\n      scheduler = lastScheduler || null;\n      mapFn = <(x: any, i: number) => T> mapFnOrScheduler;\n    } else if (isScheduler(scheduler)) {\n      scheduler = <Scheduler> mapFnOrScheduler;\n    }\n\n    if (ish != null) {\n      if (typeof ish[$$observable] === 'function') {\n        if (ish instanceof Observable && !scheduler) {\n          return ish;\n        }\n        return new FromObservable<T>(ish, scheduler);\n      } else if (isArray(ish)) {\n        return new ArrayObservable<T>(ish, scheduler);\n      } else if (isPromise(ish)) {\n        return new PromiseObservable<T>(ish, scheduler);\n      } else if (typeof ish[$$iterator] === 'function' || typeof ish === 'string') {\n        return new IteratorObservable<T>(<any>ish, null, null, scheduler);\n      } else if (isArrayLike(ish)) {\n        return new ArrayLikeObservable(ish, mapFn, thisArg, scheduler);\n      }\n    }\n\n    throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    const ish = this.ish;\n    const scheduler = this.scheduler;\n    if (scheduler == null) {\n      return ish[$$observable]().subscribe(subscriber);\n    } else {\n      return ish[$$observable]().subscribe(new ObserveOnSubscriber(subscriber, scheduler, 0));\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/FromObservable.ts\n **/","import {Observable} from '../Observable' ;\nimport {Scheduler} from '../Scheduler';\nimport {Subscriber} from '../Subscriber';\nimport {Subscription} from '../Subscription';\nimport {Action} from '../scheduler/Action';\n\nimport {isScheduler} from '../util/isScheduler';\n\nconst selfSelector = <T>(value: T) => value;\n\nexport type ConditionFunc<S> = (state: S) => boolean;\nexport type IterateFunc<S> = (state: S) => S;\nexport type ResultFunc<S, T> = (state: S) => T;\n\ninterface SchedulerState<T, S> {\n  needIterate?: boolean;\n  state: S;\n  subscriber: Subscriber<T>;\n  condition?: ConditionFunc<S>;\n  iterate: IterateFunc<S>;\n  resultSelector: ResultFunc<S, T>;\n}\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Inital state.\n  */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n  */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * Scheduler to use for generation process.\n   * By default, a generator starts immediately.\n  */\n  scheduler?: Scheduler;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class GenerateObservable<T, S> extends Observable<T> {\n  constructor(private initialState: S,\n              private condition: ConditionFunc<S>,\n              private iterate: IterateFunc<S>,\n              private resultSelector: ResultFunc<S, T>,\n              private scheduler?: Scheduler) {\n      super();\n  }\n\n  /**\n   * Generates an observable sequence by running a state-driven loop\n   * producing the sequence's elements, using the specified scheduler\n   * to send out observer messages.\n   *\n   * <img src=\"./img/generate.png\" width=\"100%\">\n   * \n   * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n   * var res = Rx.Observable.generate(0, x => x < 10, x => x + 1, x => x);\n   * \n   * @example <caption>Using asap scheduler, produces sequence of 2, 3, 5, then completes.</caption>\n   * var res = Rx.Observable.generate(1, x => x < 5, x => x * 2, x => x + 1, Rx.Scheduler.asap);\n   *\n   * @see {@link from}\n   * @see {@link create}\n   * \n   * @param {S} initialState Initial state.\n   * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n   * @param {function (state: S): S} iterate Iteration step function.\n   * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence.\n   * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emit immediately.\n   * @returns {Observable<T>} The generated sequence.\n   */\n  static create<T, S>(initialState: S,\n                      condition: ConditionFunc<S>,\n                      iterate: IterateFunc<S>,\n                      resultSelector: ResultFunc<S, T>,\n                      scheduler?: Scheduler): Observable<T>\n\n  /**\n   * Generates an observable sequence by running a state-driven loop\n   * producing the sequence's elements, using the specified scheduler\n   * to send out observer messages.\n   * The overload uses state as an emitted value.\n   * \n   * <img src=\"./img/generate.png\" width=\"100%\">\n   *\n   * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n   * var res = Rx.Observable.generate(0, x => x < 10, x => x + 1);\n   * \n   * @example <caption>Using asap scheduler, produces sequence of 1, 2, 4, then completes.</caption>\n   * var res = Rx.Observable.generate(1, x => x < 5, x => x * 2, Rx.Scheduler.asap);\n   *\n   * @see {@link from}\n   * @see {@link create}\n   *\n   * @param {S} initialState Initial state.\n   * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n   * @param {function (state: S): S} iterate Iteration step function.\n   * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emit immediately.\n   * @returns {Observable<S>} The generated sequence.\n   */\n  static create<S>(initialState: S,\n                   condition: ConditionFunc<S>,\n                   iterate: IterateFunc<S>,\n                   scheduler?: Scheduler): Observable<S>\n\n  /**\n   * Generates an observable sequence by running a state-driven loop\n   * producing the sequence's elements, using the specified scheduler\n   * to send out observer messages.\n   * The overload accepts options object that might contain inital state, iterate,\n   * condition and scheduler.\n   * \n   * <img src=\"./img/generate.png\" width=\"100%\">\n   *\n   * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n   * var res = Rx.Observable.generate({\n   *   initialState: 0,\n   *   condition: x => x < 10,\n   *   iterate: x => x + 1\n   * });\n   *\n   * @see {@link from}\n   * @see {@link create}\n   *\n   * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n   * @returns {Observable<S>} The generated sequence.\n   */\n  static create<S>(options: GenerateBaseOptions<S>): Observable<S>\n\n  /**\n   * Generates an observable sequence by running a state-driven loop\n   * producing the sequence's elements, using the specified scheduler\n   * to send out observer messages.\n   * The overload accepts options object that might contain inital state, iterate,\n   * condition, result selector and scheduler.\n   * \n   * <img src=\"./img/generate.png\" width=\"100%\">\n   *\n   * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n   * var res = Rx.Observable.generate({\n   *   initialState: 0,\n   *   condition: x => x < 10,\n   *   iterate: x => x + 1,\n   *   resultSelector: x => x\n   * });\n   *\n   * @see {@link from}\n   * @see {@link create}\n   *\n   * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n   * @returns {Observable<T>} The generated sequence.\n   */\n  static create<T, S>(options: GenerateOptions<T, S>): Observable<T>\n\n  static create<T, S>(initialStateOrOptions: S | GenerateOptions<T, S>,\n                      condition?: ConditionFunc<S>,\n                      iterate?: IterateFunc<S>,\n                      resultSelectorOrObservable?: (ResultFunc<S, T>) | Scheduler,\n                      scheduler?: Scheduler): Observable<T> {\n    if (arguments.length == 1) {\n      return new GenerateObservable<T, S>(\n        (<GenerateOptions<T, S>>initialStateOrOptions).initialState,\n        (<GenerateOptions<T, S>>initialStateOrOptions).condition,\n        (<GenerateOptions<T, S>>initialStateOrOptions).iterate,\n        (<GenerateOptions<T, S>>initialStateOrOptions).resultSelector || selfSelector,\n        (<GenerateOptions<T, S>>initialStateOrOptions).scheduler);\n    }\n\n    if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n      return new GenerateObservable<T, S>(\n        <S>initialStateOrOptions,\n        condition,\n        iterate,\n        selfSelector,\n        <Scheduler>resultSelectorOrObservable);\n    }\n\n    return new GenerateObservable<T, S>(\n      <S>initialStateOrOptions,\n      condition,\n      iterate,\n      <ResultFunc<S, T>>resultSelectorOrObservable,\n      <Scheduler>scheduler);\n  }\n\n  protected _subscribe(subscriber: Subscriber<any>): Subscription | Function | void {\n    let state = this.initialState;\n    if (this.scheduler) {\n      return this.scheduler.schedule<SchedulerState<T, S>>(GenerateObservable.dispatch, 0, {\n        subscriber,\n        iterate: this.iterate,\n        condition: this.condition,\n        resultSelector: this.resultSelector,\n        state });\n    }\n    const { condition, resultSelector, iterate } = this;\n    do {\n      if (condition) {\n        let conditionResult: boolean;\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n      let value: T;\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return;\n      }\n      subscriber.next(value);\n      if (subscriber.isUnsubscribed) {\n        break;\n      }\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return;\n      }\n    } while (true);\n  }\n\n  private static dispatch<T, S>(state: SchedulerState<T, S>) {\n    const { subscriber, condition } = state;\n    if (subscriber.isUnsubscribed) {\n      return;\n    }\n    if (state.needIterate) {\n      try {\n        state.state = state.iterate(state.state);\n      } catch (err) {\n        subscriber.error(err);\n        return;\n      }\n    } else {\n      state.needIterate = true;\n    }\n    if (condition) {\n      let conditionResult: boolean;\n      try {\n        conditionResult = condition(state.state);\n      } catch (err) {\n        subscriber.error(err);\n        return;\n      }\n      if (!conditionResult) {\n        subscriber.complete();\n        return;\n      }\n      if (subscriber.isUnsubscribed) {\n        return;\n      }\n    }\n    let value: T;\n    try {\n      value = state.resultSelector(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return;\n    }\n    if (subscriber.isUnsubscribed) {\n      return;\n    }\n    subscriber.next(value);\n    if (subscriber.isUnsubscribed) {\n      return;\n    }\n    return (<Action<SchedulerState<T, S>>><any>this).schedule(state);\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/GenerateObservable.ts\n **/","import {Subscriber} from '../Subscriber';\nimport {isNumeric} from '../util/isNumeric';\nimport {Scheduler} from '../Scheduler';\nimport {Observable} from '../Observable';\nimport {async} from '../scheduler/async';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IntervalObservable extends Observable<number> {\n  /**\n   * Creates an Observable that emits sequential numbers every specified\n   * interval of time, on a specified Scheduler.\n   *\n   * <span class=\"informal\">Emits incremental numbers periodically in time.\n   * </span>\n   *\n   * <img src=\"./img/interval.png\" width=\"100%\">\n   *\n   * `interval` returns an Observable that emits an infinite sequence of\n   * ascending integers, with a constant interval of time of your choosing\n   * between those emissions. The first emission is not sent immediately, but\n   * only after the first period has passed. By default, this operator uses the\n   * `async` Scheduler to provide a notion of time, but you may pass any\n   * Scheduler to it.\n   *\n   * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n   * var numbers = Rx.Observable.interval(1000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @see {@link timer}\n   * @see {@link delay}\n   *\n   * @param {number} [period=0] The interval size in milliseconds (by default)\n   * or the time unit determined by the scheduler's clock.\n   * @param {Scheduler} [scheduler=async] The Scheduler to use for scheduling\n   * the emission of values, and providing a notion of \"time\".\n   * @return {Observable} An Observable that emits a sequential number each time\n   * interval.\n   * @static true\n   * @name interval\n   * @owner Observable\n   */\n  static create(period: number = 0,\n                scheduler: Scheduler = async): Observable<number> {\n    return new IntervalObservable(period, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { index, subscriber, period } = state;\n\n    subscriber.next(index);\n\n    if (subscriber.isUnsubscribed) {\n      return;\n    }\n\n    state.index += 1;\n\n    (<any> this).schedule(state, period);\n  }\n\n  constructor(private period: number = 0,\n              private scheduler: Scheduler = async) {\n    super();\n    if (!isNumeric(period) || period < 0) {\n      this.period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      this.scheduler = async;\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<number>) {\n    const index = 0;\n    const period = this.period;\n    const scheduler = this.scheduler;\n\n    subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\n      index, subscriber, period\n    }));\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/IntervalObservable.ts\n **/","import {root} from '../util/root';\nimport {isObject} from '../util/isObject';\nimport {tryCatch} from '../util/tryCatch';\nimport {Scheduler} from '../Scheduler';\nimport {Observable} from '../Observable';\nimport {isFunction} from '../util/isFunction';\nimport {$$iterator} from '../symbol/iterator';\nimport {errorObject} from '../util/errorObject';\nimport {TeardownLogic} from '../Subscription';\nimport {Subscriber} from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IteratorObservable<T> extends Observable<T> {\n  private iterator: any;\n\n  static create<T>(iterator: any,\n                   project?: ((x?: any, i?: number) => T) | any,\n                   thisArg?: any | Scheduler,\n                   scheduler?: Scheduler) {\n    return new IteratorObservable(iterator, project, thisArg, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, hasError, thisArg, project, iterator, subscriber } = state;\n\n    if (hasError) {\n      subscriber.error(state.error);\n      return;\n    }\n\n    let result = iterator.next();\n\n    if (result.done) {\n      subscriber.complete();\n      return;\n    }\n\n    if (project) {\n      result = tryCatch(project).call(thisArg, result.value, index);\n      if (result === errorObject) {\n        state.error = errorObject.e;\n        state.hasError = true;\n      } else {\n        subscriber.next(result);\n        state.index = index + 1;\n      }\n    } else {\n      subscriber.next(result.value);\n      state.index = index + 1;\n    }\n\n    if (subscriber.isUnsubscribed) {\n      return;\n    }\n\n    (<any> this).schedule(state);\n  }\n\n  private thisArg: any;\n  private project: (x?: any, i?: number) => T;\n  private scheduler: Scheduler;\n\n  constructor(iterator: any,\n              project?: ((x?: any, i?: number) => T) | any,\n              thisArg?: any | Scheduler,\n              scheduler?: Scheduler) {\n    super();\n\n    if (iterator == null) {\n      throw new Error('iterator cannot be null.');\n    }\n\n    if (isObject(project)) {\n      this.thisArg = project;\n      this.scheduler = thisArg;\n    } else if (isFunction(project)) {\n      this.project = project;\n      this.thisArg = thisArg;\n      this.scheduler = scheduler;\n    } else if (project != null) {\n      throw new Error('When provided, `project` must be a function.');\n    }\n\n    this.iterator = getIterator(iterator);\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    let index = 0;\n    const { iterator, project, thisArg, scheduler } = this;\n\n    if (scheduler) {\n      return scheduler.schedule(IteratorObservable.dispatch, 0, {\n        index, thisArg, project, iterator, subscriber\n      });\n    } else {\n      do {\n        let result = iterator.next();\n        if (result.done) {\n          subscriber.complete();\n          break;\n        } else if (project) {\n          result = tryCatch(project).call(thisArg, result.value, index++);\n          if (result === errorObject) {\n            subscriber.error(errorObject.e);\n            break;\n          }\n          subscriber.next(result);\n        } else {\n          subscriber.next(result.value);\n        }\n        if (subscriber.isUnsubscribed) {\n          break;\n        }\n      } while (true);\n    }\n  }\n}\n\nclass StringIterator {\n  constructor(private str: string,\n              private idx: number = 0,\n              private len: number = str.length) {\n  }\n  [$$iterator]() { return (this); }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.str.charAt(this.idx++)\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nclass ArrayIterator {\n  constructor(private arr: Array<any>,\n              private idx: number = 0,\n              private len: number = toLength(arr)) {\n  }\n  [$$iterator]() { return this; }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.arr[this.idx++]\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nfunction getIterator(obj: any) {\n  const i = obj[$$iterator];\n  if (!i && typeof obj === 'string') {\n    return new StringIterator(obj);\n  }\n  if (!i && obj.length !== undefined) {\n    return new ArrayIterator(obj);\n  }\n  if (!i) {\n    throw new TypeError('Object is not iterable');\n  }\n  return obj[$$iterator]();\n}\n\nconst maxSafeInteger = Math.pow(2, 53) - 1;\n\nfunction toLength(o: any) {\n  let len = +o.length;\n  if (isNaN(len)) {\n      return 0;\n  }\n  if (len === 0 || !numberIsFinite(len)) {\n      return len;\n  }\n  len = sign(len) * Math.floor(Math.abs(len));\n  if (len <= 0) {\n      return 0;\n  }\n  if (len > maxSafeInteger) {\n      return maxSafeInteger;\n  }\n  return len;\n}\n\nfunction numberIsFinite(value: any) {\n  return typeof value === 'number' && root.isFinite(value);\n}\n\nfunction sign(value: any) {\n  let valueAsNumber = +value;\n  if (valueAsNumber === 0) {\n    return valueAsNumber;\n  }\n  if (isNaN(valueAsNumber)) {\n    return valueAsNumber;\n  }\n  return valueAsNumber < 0 ? -1 : 1;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/IteratorObservable.ts\n **/","import {Observable} from '../Observable';\nimport {Subscriber} from '../Subscriber';\nimport {noop} from '../util/noop';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class NeverObservable<T> extends Observable<T> {\n  /**\n   * Creates an Observable that emits no items to the Observer.\n   *\n   * <span class=\"informal\">An Observable that never emits anything.</span>\n   *\n   * <img src=\"./img/never.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that emits\n   * neither values nor errors nor the completion notification. It can be used\n   * for testing purposes or for composing with other Observables. Please not\n   * that by never emitting a complete notification, this Observable keeps the\n   * subscription from being disposed automatically. Subscriptions need to be\n   * manually disposed.\n   *\n   * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n   * function info() {\n   *   console.log('Will not be called');\n   * }\n   * var result = Rx.Observable.never().startWith(7);\n   * result.subscribe(x => console.log(x), info, info);\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @return {Observable} A \"never\" Observable: never emits anything.\n   * @static true\n   * @name never\n   * @owner Observable\n   */\n  static create<T>() {\n    return new NeverObservable<T>();\n  }\n\n  constructor() {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): void {\n    noop();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/NeverObservable.ts\n **/","import {Scheduler} from '../Scheduler';\nimport {Observable} from '../Observable';\nimport {TeardownLogic} from '../Subscription';\nimport {Subscriber} from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class RangeObservable extends Observable<number> {\n\n  /**\n   * Creates an Observable that emits a sequence of numbers within a specified\n   * range.\n   *\n   * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n   *\n   * <img src=\"./img/range.png\" width=\"100%\">\n   *\n   * `range` operator emits a range of sequential integers, in order, where you\n   * select the `start` of the range and its `length`. By default, uses no\n   * Scheduler and just delivers the notifications synchronously, but may use\n   * an optional Scheduler to regulate those deliveries.\n   *\n   * @example <caption>Emits the numbers 1 to 10</caption>\n   * var numbers = Rx.Observable.range(1, 10);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @see {@link timer}\n   * @see {@link interval}\n   *\n   * @param {number} [start=0] The value of the first integer in the sequence.\n   * @param {number} [count=0] The number of sequential integers to generate.\n   * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n   * the emissions of the notifications.\n   * @return {Observable} An Observable of numbers that emits a finite range of\n   * sequential integers.\n   * @static true\n   * @name range\n   * @owner Observable\n   */\n  static create(start: number = 0,\n                count: number = 0,\n                scheduler?: Scheduler): Observable<number> {\n    return new RangeObservable(start, count, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { start, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(start);\n\n    if (subscriber.isUnsubscribed) {\n      return;\n    }\n\n    state.index = index + 1;\n    state.start = start + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  private start: number;\n  private _count: number;\n  private scheduler: Scheduler;\n\n  constructor(start: number,\n              count: number,\n              scheduler?: Scheduler) {\n    super();\n    this.start = start;\n    this._count = count;\n    this.scheduler = scheduler;\n  }\n\n  protected _subscribe(subscriber: Subscriber<number>): TeardownLogic {\n    let index = 0;\n    let start = this.start;\n    const count = this._count;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(RangeObservable.dispatch, 0, {\n        index, count, start, subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n        subscriber.next(start++);\n        if (subscriber.isUnsubscribed) {\n          break;\n        }\n      } while (true);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/RangeObservable.ts\n **/","import {Scheduler} from '../Scheduler';\nimport {Subscriber} from '../Subscriber';\nimport {Subscription} from '../Subscription';\nimport {Observable} from '../Observable';\nimport {asap} from '../scheduler/asap';\nimport {isNumeric} from '../util/isNumeric';\n\nexport interface DispatchArg<T> {\n  source: Observable<T>;\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class SubscribeOnObservable<T> extends Observable<T> {\n  static create<T>(source: Observable<T>, delay: number = 0, scheduler: Scheduler = asap): Observable<T> {\n    return new SubscribeOnObservable(source, delay, scheduler);\n  }\n\n  static dispatch<T>(arg: DispatchArg<T>): Subscription {\n    const { source, subscriber } = arg;\n    return source.subscribe(subscriber);\n  }\n\n  constructor(public source: Observable<T>,\n              private delayTime: number = 0,\n              private scheduler: Scheduler = asap) {\n    super();\n    if (!isNumeric(delayTime) || delayTime < 0) {\n      this.delayTime = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      this.scheduler = asap;\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    const delay = this.delayTime;\n    const source = this.source;\n    const scheduler = this.scheduler;\n\n    return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n      source, subscriber\n    });\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/SubscribeOnObservable.ts\n **/","import {isNumeric} from '../util/isNumeric';\nimport {Scheduler} from '../Scheduler';\nimport {Observable} from '../Observable';\nimport {async} from '../scheduler/async';\nimport {isScheduler} from '../util/isScheduler';\nimport {isDate} from '../util/isDate';\nimport {TeardownLogic} from '../Subscription';\nimport {Subscriber} from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class TimerObservable extends Observable<number> {\n\n  /**\n   * Creates an Observable that starts emitting after an `initialDelay` and\n   * emits ever increasing numbers after each `period` of time thereafter.\n   *\n   * <span class=\"informal\">Its like {@link interval}, but you can specify when\n   * should the emissions start.</span>\n   *\n   * <img src=\"./img/timer.png\" width=\"100%\">\n   *\n   * `timer` returns an Observable that emits an infinite sequence of ascending\n   * integers, with a constant interval of time, `period` of your choosing\n   * between those emissions. The first emission happens after the specified\n   * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n   * operator uses the `async` Scheduler to provide a notion of time, but you\n   * may pass any Scheduler to it. If `period` is not specified, the output\n   * Observable emits only one value, `0`. Otherwise, it emits an infinite\n   * sequence.\n   *\n   * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n   * var numbers = Rx.Observable.timer(3000, 1000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @example <caption>Emits one number after five seconds</caption>\n   * var numbers = Rx.Observable.timer(5000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @see {@link interval}\n   * @see {@link delay}\n   *\n   * @param {number|Date} initialDelay The initial delay time to wait before\n   * emitting the first value of `0`.\n   * @param {number} [period] The period of time between emissions of the\n   * subsequent numbers.\n   * @param {Scheduler} [scheduler=async] The Scheduler to use for scheduling\n   * the emission of values, and providing a notion of \"time\".\n   * @return {Observable} An Observable that emits a `0` after the\n   * `initialDelay` and ever increasing numbers after each `period` of time\n   * thereafter.\n   * @static true\n   * @name timer\n   * @owner Observable\n   */\n  static create(initialDelay: number | Date = 0,\n                period?: number | Scheduler,\n                scheduler?: Scheduler): Observable<number> {\n    return new TimerObservable(initialDelay, period, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, period, subscriber } = state;\n    const action = (<any> this);\n\n    subscriber.next(index);\n\n    if (subscriber.isUnsubscribed) {\n      return;\n    } else if (period === -1) {\n      return subscriber.complete();\n    }\n\n    state.index = index + 1;\n    action.schedule(state, period);\n  }\n\n  private period: number = -1;\n  private dueTime: number = 0;\n  private scheduler: Scheduler;\n\n  constructor(dueTime: number | Date = 0,\n              period?: number | Scheduler,\n              scheduler?: Scheduler) {\n    super();\n\n    if (isNumeric(period)) {\n      this.period = Number(period) < 1 && 1 || Number(period);\n    } else if (isScheduler(period)) {\n      scheduler = <Scheduler> period;\n    }\n\n    if (!isScheduler(scheduler)) {\n      scheduler = async;\n    }\n\n    this.scheduler = scheduler;\n    this.dueTime = isDate(dueTime) ?\n      (+dueTime - this.scheduler.now()) :\n      (<number> dueTime);\n  }\n\n  protected _subscribe(subscriber: Subscriber<number>): TeardownLogic {\n    const index = 0;\n    const { period, dueTime, scheduler } = this;\n\n    return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n      index, period, subscriber\n    });\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/TimerObservable.ts\n **/","import { BoundCallbackObservable } from './BoundCallbackObservable';\n\nexport const bindCallback = BoundCallbackObservable.create;\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/bindCallback.ts\n **/","import { BoundNodeCallbackObservable } from './BoundNodeCallbackObservable';\n\nexport const bindNodeCallback = BoundNodeCallbackObservable.create;\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/bindNodeCallback.ts\n **/","import { concatStatic } from '../operator/concat';\n\nexport const concat = concatStatic;\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/concat.ts\n **/","import { DeferObservable } from './DeferObservable';\n\nexport const defer = DeferObservable.create;\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/defer.ts\n **/","import { EmptyObservable } from './EmptyObservable';\n\nexport const empty = EmptyObservable.create;\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/empty.ts\n **/","import { ForkJoinObservable } from './ForkJoinObservable';\n\nexport const forkJoin = ForkJoinObservable.create;\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/forkJoin.ts\n **/","import { FromObservable } from './FromObservable';\n\nexport const from = FromObservable.create;\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/from.ts\n **/","import { FromEventObservable } from './FromEventObservable';\n\nexport const fromEvent = FromEventObservable.create;\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/fromEvent.ts\n **/","import { FromEventPatternObservable } from './FromEventPatternObservable';\n\nexport const fromEventPattern = FromEventPatternObservable.create;\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/fromEventPattern.ts\n **/","import { PromiseObservable } from './PromiseObservable';\n\nexport const fromPromise = PromiseObservable.create;\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/fromPromise.ts\n **/","import { IntervalObservable } from './IntervalObservable';\n\nexport const interval = IntervalObservable.create;\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/interval.ts\n **/","import { mergeStatic } from '../operator/merge';\n\nexport const merge = mergeStatic;\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/merge.ts\n **/","import { NeverObservable } from './NeverObservable';\n\nexport const never = NeverObservable.create;\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/never.ts\n **/","import { ArrayObservable } from './ArrayObservable';\n\nexport const of = ArrayObservable.of;\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/of.ts\n **/","import { RangeObservable } from './RangeObservable';\n\nexport const range = RangeObservable.create;\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/range.ts\n **/","import { ErrorObservable } from './ErrorObservable';\n\nexport const _throw = ErrorObservable.create;\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/throw.ts\n **/","import { TimerObservable } from './TimerObservable';\n\nexport const timer = TimerObservable.create;\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/timer.ts\n **/","import { zipStatic } from '../operator/zip';\n\nexport const zip = zipStatic;\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/observable/zip.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable, SubscribableOrPromise} from '../Observable';\nimport {Subscription} from '../Subscription';\n\nimport {tryCatch} from '../util/tryCatch';\nimport {errorObject} from '../util/errorObject';\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): Observable|Promise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): Observable<T> {\n  return this.lift(new AuditOperator(durationSelector));\n}\n\nexport interface AuditSignature<T> {\n  (durationSelector: (value: T) => SubscribableOrPromise<any>): Observable<T>;\n}\n\nclass AuditOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new AuditSubscriber<T, T>(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private value: T;\n  private hasValue: boolean = false;\n  private throttled: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      const duration = tryCatch(this.durationSelector)(value);\n      if (duration === errorObject) {\n        this.destination.error(errorObject.e);\n      } else {\n        this.add(this.throttled = subscribeToResult(this, duration));\n      }\n    }\n  }\n\n  clearThrottle() {\n    const { value, hasValue, throttled } = this;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = null;\n      this.hasValue = false;\n      this.destination.next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R, outerIndex: number, innerIndex: number): void {\n    this.clearThrottle();\n  }\n\n  notifyComplete(): void {\n    this.clearThrottle();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/audit.ts\n **/","import {async} from '../scheduler/async';\nimport {Operator} from '../Operator';\nimport {Scheduler} from '../Scheduler';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\nimport {Subscription} from '../Subscription';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link Scheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link Scheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nexport function auditTime<T>(duration: number, scheduler: Scheduler = async): Observable<T> {\n  return this.lift(new AuditTimeOperator(duration, scheduler));\n}\n\nexport interface AuditTimeSignature<T> {\n  (duration: number, scheduler?: Scheduler): Observable<T>;\n}\n\nclass AuditTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: Scheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new AuditTimeSubscriber(subscriber, this.duration, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditTimeSubscriber<T> extends Subscriber<T> {\n\n  private value: T;\n  private hasValue: boolean = false;\n  private throttled: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: Scheduler) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, this));\n    }\n  }\n\n  clearThrottle(): void {\n    const { value, hasValue, throttled } = this;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = null;\n      this.hasValue = false;\n      this.destination.next(value);\n    }\n  }\n}\n\nfunction dispatchNext<T>(subscriber: AuditTimeSubscriber<T>): void {\n  subscriber.clearThrottle();\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/auditTime.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\n\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer<T>(closingNotifier: Observable<any>): Observable<T[]> {\n  return this.lift(new BufferOperator<T>(closingNotifier));\n}\n\nexport interface BufferSignature<T> {\n  (closingNotifier: Observable<any>): Observable<T[]>;\n}\n\nclass BufferOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingNotifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source._subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, closingNotifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, closingNotifier));\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    const buffer = this.buffer;\n    this.buffer = [];\n    this.destination.next(buffer);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/buffer.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number = null): Observable<T[]> {\n  return this.lift(new BufferCountOperator<T>(bufferSize, startBufferEvery));\n}\n\nexport interface BufferCountSignature<T> {\n  (bufferSize: number, startBufferEvery?: number): Observable<T[]>;\n}\n\nclass BufferCountOperator<T> implements Operator<T, T[]> {\n  constructor(private bufferSize: number, private startBufferEvery: number) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source._subscribe(new BufferCountSubscriber(subscriber, this.bufferSize, this.startBufferEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferCountSubscriber<T> extends Subscriber<T> {\n  private buffers: Array<T[]> = [[]];\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number, private startBufferEvery: number) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    const count = (this.count += 1);\n    const destination = this.destination;\n    const bufferSize = this.bufferSize;\n    const startBufferEvery = (this.startBufferEvery == null) ? bufferSize : this.startBufferEvery;\n    const buffers = this.buffers;\n    const len = buffers.length;\n    let remove = -1;\n\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n\n    for (let i = 0; i < len; i++) {\n      const buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        remove = i;\n        destination.next(buffer);\n      }\n    }\n\n    if (remove !== -1) {\n      buffers.splice(remove, 1);\n    }\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    const buffers = this.buffers;\n    while (buffers.length > 0) {\n      let buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    super._complete();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/bufferCount.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\nimport {Scheduler} from '../Scheduler';\nimport {Action} from '../scheduler/Action';\nimport {async} from '../scheduler/async';\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime<T>(bufferTimeSpan: number,\n                              bufferCreationInterval: number = null,\n                              scheduler: Scheduler = async): Observable<T[]> {\n  return this.lift(new BufferTimeOperator<T>(bufferTimeSpan, bufferCreationInterval, scheduler));\n}\n\nexport interface BufferTimeSignature<T> {\n  (bufferTimeSpan: number, bufferCreationInterval?: number, scheduler?: Scheduler): Observable<T[]>;\n}\n\nclass BufferTimeOperator<T> implements Operator<T, T[]> {\n  constructor(private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private scheduler: Scheduler) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source._subscribe(new BufferTimeSubscriber(\n      subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.scheduler\n    ));\n  }\n}\n\ntype CreationState<T> = {\n  bufferTimeSpan: number;\n  bufferCreationInterval: number,\n  subscriber: BufferTimeSubscriber<T>;\n  scheduler: Scheduler;\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferTimeSubscriber<T> extends Subscriber<T> {\n  private buffers: Array<T[]> = [];\n\n  constructor(destination: Subscriber<T[]>,\n              private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private scheduler: Scheduler) {\n    super(destination);\n    const buffer = this.openBuffer();\n    if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {\n      const closeState = { subscriber: this, buffer };\n      const creationState: CreationState<T> = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n      this.add(scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n    } else {\n      const timeSpanOnlyState = { subscriber: this, buffer, bufferTimeSpan };\n      this.add(scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  protected _next(value: T) {\n    const buffers = this.buffers;\n    const len = buffers.length;\n    for (let i = 0; i < len; i++) {\n      buffers[i].push(value);\n    }\n  }\n\n  protected _error(err: any) {\n    this.buffers.length = 0;\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { buffers, destination } = this;\n    while (buffers.length > 0) {\n      destination.next(buffers.shift());\n    }\n    super._complete();\n  }\n\n  protected _unsubscribe() {\n    this.buffers = null;\n  }\n\n  openBuffer(): T[] {\n    let buffer: T[] = [];\n    this.buffers.push(buffer);\n    return buffer;\n  }\n\n  closeBuffer(buffer: T[]) {\n    this.destination.next(buffer);\n    const buffers = this.buffers;\n    buffers.splice(buffers.indexOf(buffer), 1);\n  }\n}\n\nfunction dispatchBufferTimeSpanOnly(state: any) {\n  const subscriber: BufferTimeSubscriber<any> = state.subscriber;\n\n  const prevBuffer = state.buffer;\n  if (prevBuffer) {\n    subscriber.closeBuffer(prevBuffer);\n  }\n\n  state.buffer = subscriber.openBuffer();\n  if (!subscriber.isUnsubscribed) {\n    (<any>this).schedule(state, state.bufferTimeSpan);\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: BufferTimeSubscriber<T>;\n  buffer: Array<T>;\n}\n\nfunction dispatchBufferCreation<T>(state: CreationState<T>) {\n  const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n  const buffer = subscriber.openBuffer();\n  const action = <Action<CreationState<T>>>this;\n  if (!subscriber.isUnsubscribed) {\n    action.add(scheduler.schedule<DispatchArg<T>>(dispatchBufferClose, bufferTimeSpan, { subscriber, buffer }));\n    action.schedule(state, bufferCreationInterval);\n  }\n}\n\nfunction dispatchBufferClose<T>(arg: DispatchArg<T>) {\n  const { subscriber, buffer } = arg;\n  subscriber.closeBuffer(buffer);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/bufferTime.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable, SubscribableOrPromise} from '../Observable';\nimport {Subscription} from '../Subscription';\n\nimport {subscribeToResult} from '../util/subscribeToResult';\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle<T, O>(openings: SubscribableOrPromise<O>,\n                                   closingSelector: (value: O) => SubscribableOrPromise<any>): Observable<T[]> {\n  return this.lift(new BufferToggleOperator<T, O>(openings, closingSelector));\n}\n\nexport interface BufferToggleSignature<T> {\n  <O>(openings: SubscribableOrPromise<O>, closingSelector: (value: O) => SubscribableOrPromise<any>): Observable<T[]>;\n}\n\nclass BufferToggleOperator<T, O> implements Operator<T, T[]> {\n\n  constructor(private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source._subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  }\n}\n\ninterface BufferContext<T> {\n  buffer: T[];\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferToggleSubscriber<T, O> extends OuterSubscriber<T, O> {\n  private contexts: Array<BufferContext<T>> = [];\n\n  constructor(destination: Subscriber<T[]>,\n              private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any> | void) {\n    super(destination);\n    this.add(subscribeToResult(this, openings));\n  }\n\n  protected _next(value: T): void {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    for (let i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._error(err);\n  }\n\n  protected _complete(): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      this.destination.next(context.buffer);\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._complete();\n  }\n\n  notifyNext(outerValue: any, innerValue: O,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, O>): void {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, O>): void {\n    this.closeBuffer((<any> innerSub).context);\n  }\n\n  private openBuffer(value: O): void {\n    try {\n      const closingSelector = this.closingSelector;\n      const closingNotifier = closingSelector.call(this, value);\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private closeBuffer(context: BufferContext<T>): void {\n    const contexts = this.contexts;\n\n    if (contexts && context) {\n      const { buffer, subscription } = context;\n      this.destination.next(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  }\n\n  private trySubscribe(closingNotifier: any): void {\n    const contexts = this.contexts;\n\n    const buffer: Array<T> = [];\n    const subscription = new Subscription();\n    const context = { buffer, subscription };\n    contexts.push(context);\n\n    const innerSubscription = subscribeToResult(this, closingNotifier, <any>context);\n\n    if (!innerSubscription || innerSubscription.isUnsubscribed) {\n      this.closeBuffer(context);\n    } else {\n      (<any> innerSubscription).context = context;\n\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/bufferToggle.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\nimport {Subscription} from '../Subscription';\nimport {tryCatch} from '../util/tryCatch';\nimport {errorObject} from '../util/errorObject';\n\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen<T>(closingSelector: () => Observable<any>): Observable<T[]> {\n  return this.lift(new BufferWhenOperator<T>(closingSelector));\n}\n\nexport interface BufferWhenSignature<T> {\n  (closingSelector: () => Observable<any>): Observable<T[]>;\n}\n\nclass BufferWhenOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source._subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferWhenSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[];\n  private subscribing: boolean = false;\n  private closingSubscription: Subscription;\n\n  constructor(destination: Subscriber<T[]>, private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openBuffer();\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  protected _complete() {\n    const buffer = this.buffer;\n    if (buffer) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n\n  protected _unsubscribe() {\n    this.buffer = null;\n    this.subscribing = false;\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openBuffer();\n  }\n\n  notifyComplete(): void {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  }\n\n  openBuffer() {\n\n    let { closingSubscription } = this;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    const buffer = this.buffer;\n    if (this.buffer) {\n      this.destination.next(buffer);\n    }\n\n    this.buffer = [];\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n\n    if (closingNotifier === errorObject) {\n      this.error(errorObject.e);\n    } else {\n      closingSubscription = new Subscription();\n      this.closingSubscription = closingSubscription;\n      this.add(closingSubscription);\n      this.subscribing = true;\n      closingSubscription.add(subscribeToResult(this, closingNotifier));\n      this.subscribing = false;\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/bufferWhen.ts\n **/","import {Observable} from '../Observable';\nimport {publishReplay} from './publishReplay';\nimport {Scheduler} from '../Scheduler';\nimport {ConnectableObservable} from '../observable/ConnectableObservable';\n\n/**\n * @param bufferSize\n * @param windowTime\n * @param scheduler\n * @return {Observable<any>}\n * @method cache\n * @owner Observable\n */\nexport function cache<T>(bufferSize: number = Number.POSITIVE_INFINITY,\n                         windowTime: number = Number.POSITIVE_INFINITY,\n                         scheduler?: Scheduler): Observable<T> {\n  return (<ConnectableObservable<any>>publishReplay.call(this, bufferSize, windowTime, scheduler)).refCount();\n}\n\nexport interface CacheSignature<T> {\n  (bufferSize?: number, windowTime?: number, scheduler?: Scheduler): Observable<T>;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/cache.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} an observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @owner Observable\n */\nexport function _catch<T, R>(selector: (err: any, caught: Observable<T>) => Observable<R>): Observable<R> {\n  const operator = new CatchOperator(selector);\n  const caught = this.lift(operator);\n  return (operator.caught = caught);\n}\n\nexport interface CatchSignature<T> {\n  <R>(selector: (err: any, caught: Observable<T>) => Observable<R>): Observable<R>;\n}\n\nclass CatchOperator<T, R> implements Operator<T, R> {\n  caught: Observable<any>;\n\n  constructor(private selector: (err: any, caught: Observable<any>) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T> extends Subscriber<T> {\n\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<any>) => Observable<any>,\n              private caught: Observable<any>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err) {\n        this.destination.error(err);\n        return;\n      }\n\n      this._innerSub(result);\n    }\n  }\n\n  private _innerSub(result: Observable<any>) {\n    this.unsubscribe();\n    (<any>this.destination).remove(this);\n    result.subscribe(this.destination);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/catch.ts\n **/","import {CombineLatestOperator} from './combineLatest';\nimport {Observable} from '../Observable';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by waiting\n * for the outer Observable to complete, then applying {@link combineLatest}.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by applying\n * {@link combineLatest} when the Observable-of-Observables completes.</span>\n *\n * <img src=\"./img/combineAll.png\" width=\"100%\">\n *\n * Takes an Observable of Observables, and collects all Observables from it.\n * Once the outer Observable completes, it subscribes to all collected\n * Observables and combines their values using the {@link combineLatest}\n * strategy, such that:\n * - Every time an inner Observable emits, the output Observable emits.\n * - When the returned observable emits, it emits all of the latest values by:\n *   - If a `project` function is provided, it is called with each recent value\n *     from each inner Observable in whatever order they arrived, and the result\n *     of the `project` function is what is emitted by the output Observable.\n *   - If there is no `project` function, an array of all of the most recent\n *     values is emitted by the output Observable.\n *\n * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev =>\n *   Rx.Observable.interval(Math.random()*2000).take(3)\n * ).take(2);\n * var result = higherOrder.combineAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function} [project] An optional function to map the most recent\n * values from each inner Observable into a new result. Takes each of the most\n * recent values from each collected inner Observable as arguments, in order.\n * @return {Observable} An Observable of projected results or arrays of recent\n * values.\n * @method combineAll\n * @owner Observable\n */\nexport function combineAll<R>(project?: (...values: Array<any>) => R): Observable<R> {\n  return this.lift(new CombineLatestOperator(project));\n}\n\nexport interface CombineAllSignature<T> {\n  (): Observable<T[]>;\n  <R>(project?: (...values: Array<T>) => R): Observable<R>;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/combineAll.ts\n **/","import {Subscribable} from '../Observable';\nimport {MergeAllOperator} from './mergeAll';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(): T {\n  return this.lift(new MergeAllOperator<T>(1));\n}\n\nexport interface ConcatAllSignature<T> {\n  (): T;\n  <R>(): Subscribable<R>;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/concatAll.ts\n **/","import {MergeMapOperator} from './mergeMap';\nimport {Observable, ObservableInput} from '../Observable';\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} an observable of values merged from the projected\n * Observables as they were subscribed to, one at a time. Optionally, these\n * values may have been projected from a passed `projectResult` argument.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap<T, I, R>(project: (value: T, index: number) =>  ObservableInput<I>,\n                                   resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  return this.lift(new MergeMapOperator(project, resultSelector, 1));\n}\n\nexport interface ConcatMapSignature<T> {\n  <R>(project: (value: T, index: number) =>  ObservableInput<R>): Observable<R>;\n  <I, R>(project: (value: T, index: number) =>  ObservableInput<I>,\n         resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R>;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/concatMap.ts\n **/","import {Observable, ObservableInput} from '../Observable';\nimport {MergeMapToOperator} from './mergeMapTo';\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {Observable} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nexport function concatMapTo<T, I, R>(innerObservable: Observable<I>,\n                                     resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R> {\n  return this.lift(new MergeMapToOperator(innerObservable, resultSelector, 1));\n}\n\nexport interface ConcatMapToSignature<T> {\n  <R>(observable: ObservableInput<R>): Observable<R>;\n  <I, R>(observable: ObservableInput<I>,\n         resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R>;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/concatMapTo.ts\n **/","import {Observable} from '../Observable';\nimport {Operator} from '../Operator';\nimport {Observer} from '../Observer';\nimport {Subscriber} from '../Subscriber';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting an value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nexport function count<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<number> {\n  return this.lift(new CountOperator(predicate, this));\n}\n\nexport interface CountSignature<T> {\n  (predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<number>;\n}\n\nclass CountOperator<T> implements Operator<T, number> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<number>, source: any): any {\n    return source._subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CountSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n  private index: number = 0;\n\n  constructor(destination: Observer<number>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  }\n\n  private _tryPredicate(value: T) {\n    let result: any;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  }\n\n  protected _complete(): void {\n    this.destination.next(this.count);\n    this.destination.complete();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/count.ts\n **/","import {Operator} from '../Operator';\nimport {Observable, SubscribableOrPromise} from '../Observable';\nimport {Subscriber} from '../Subscriber';\nimport {Subscription} from '../Subscription';\n\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): Observable|Promise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce<T>(durationSelector: (value: T) => SubscribableOrPromise<number>): Observable<T> {\n  return this.lift(new DebounceOperator(durationSelector));\n}\n\nexport interface DebounceSignature<T> {\n  (durationSelector: (value: T) => SubscribableOrPromise<number>): Observable<T>;\n}\n\nclass DebounceOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n  private durationSubscription: Subscription = null;\n\n  constructor(destination: Subscriber<R>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    try {\n      const result = this.durationSelector.call(this, value);\n\n      if (result) {\n        this._tryNext(value, result);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.emitValue();\n    this.destination.complete();\n  }\n\n  private _tryNext(value: T, duration: SubscribableOrPromise<number>): void {\n    let subscription = this.durationSubscription;\n    this.value = value;\n    this.hasValue = true;\n    if (subscription) {\n      subscription.unsubscribe();\n      this.remove(subscription);\n    }\n\n    subscription = subscribeToResult(this, duration);\n    if (!subscription.isUnsubscribed) {\n      this.add(this.durationSubscription = subscription);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue(): void {\n    if (this.hasValue) {\n      const value = this.value;\n      const subscription = this.durationSubscription;\n      if (subscription) {\n        this.durationSubscription = null;\n        subscription.unsubscribe();\n        this.remove(subscription);\n      }\n      this.value = null;\n      this.hasValue = false;\n      super._next(value);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/debounce.ts\n **/","import {Operator} from '../Operator';\nimport {Observable} from '../Observable';\nimport {Subscriber} from '../Subscriber';\nimport {Scheduler} from '../Scheduler';\nimport {Subscription} from '../Subscription';\nimport {async} from '../scheduler/async';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link Scheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link Scheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime<T>(dueTime: number, scheduler: Scheduler = async): Observable<T> {\n  return this.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\n\nexport interface DebounceTimeSignature<T> {\n  (dueTime: number, scheduler?: Scheduler): Observable<T>;\n}\n\nclass DebounceTimeOperator<T> implements Operator<T, T> {\n  constructor(private dueTime: number, private scheduler: Scheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceTimeSubscriber<T> extends Subscriber<T> {\n  private debouncedSubscription: Subscription = null;\n  private lastValue: T = null;\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private dueTime: number,\n              private scheduler: Scheduler) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.clearDebounce();\n    this.lastValue = value;\n    this.hasValue = true;\n    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n  }\n\n  protected _complete() {\n    this.debouncedNext();\n    this.destination.complete();\n  }\n\n  debouncedNext(): void {\n    this.clearDebounce();\n\n    if (this.hasValue) {\n      this.destination.next(this.lastValue);\n      this.lastValue = null;\n      this.hasValue = false;\n    }\n  }\n\n  private clearDebounce(): void {\n    const debouncedSubscription = this.debouncedSubscription;\n\n    if (debouncedSubscription !== null) {\n      this.remove(debouncedSubscription);\n      debouncedSubscription.unsubscribe();\n      this.debouncedSubscription = null;\n    }\n  }\n}\n\nfunction dispatchNext(subscriber: DebounceTimeSubscriber<any>) {\n  subscriber.debouncedNext();\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/debounceTime.ts\n **/","import {Operator} from '../Operator';\nimport {Observable} from '../Observable';\nimport {Subscriber} from '../Subscriber';\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): Observable<T | R> {\n  return this.lift(new DefaultIfEmptyOperator(defaultValue));\n}\n\nexport interface DefaultIfEmptySignature<T> {\n  (defaultValue?: T): Observable<T>;\n  <R>(defaultValue?: R): Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source._subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/defaultIfEmpty.ts\n **/","import {async} from '../scheduler/async';\nimport {isDate} from '../util/isDate';\nimport {Operator} from '../Operator';\nimport {Scheduler} from '../Scheduler';\nimport {Subscriber} from '../Subscriber';\nimport {Notification} from '../Notification';\nimport {Observable} from '../Observable';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The Scheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(delay: number|Date,\n                         scheduler: Scheduler = async): Observable<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return this.lift(new DelayOperator(delayFor, scheduler));\n}\n\nexport interface DelaySignature<T> {\n  (delay: number | Date, scheduler?: Scheduler): Observable<T>;\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: Scheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<any> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch(state: any): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      (<any> this).schedule(state, delay);\n    } else {\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: Scheduler) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: Scheduler): void {\n    this.active = true;\n    this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<any>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(private time: number,\n              private notification: any) {\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/delay.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\nimport {Subscription} from '../Subscription';\n\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen<T>(delayDurationSelector: (value: T) => Observable<any>,\n                             subscriptionDelay?: Observable<any>): Observable<T> {\n  if (subscriptionDelay) {\n    return new SubscriptionDelayObservable(this, subscriptionDelay)\n            .lift(new DelayWhenOperator(delayDurationSelector));\n  }\n  return this.lift(new DelayWhenOperator(delayDurationSelector));\n}\n\nexport interface DelayWhenSignature<T> {\n  (delayDurationSelector: (value: T) => Observable<any>, subscriptionDelay?: Observable<any>): Observable<T>;\n}\n\nclass DelayWhenOperator<T> implements Operator<T, T> {\n  constructor(private delayDurationSelector: (value: T) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelayWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private completed: boolean = false;\n  private delayNotifierSubscriptions: Array<Subscription> = [];\n  private values: Array<T> = [];\n\n  constructor(destination: Subscriber<T>,\n              private delayDurationSelector: (value: T) => Observable<any>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    const value = this.removeSubscription(innerSub);\n    if (value) {\n      this.destination.next(value);\n    }\n    this.tryComplete();\n  }\n\n  protected _next(value: T): void {\n    try {\n      const delayNotifier = this.delayDurationSelector(value);\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n        this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.completed = true;\n    this.tryComplete();\n  }\n\n  private removeSubscription(subscription: InnerSubscriber<T, R>): T {\n    subscription.unsubscribe();\n\n    const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n    let value: T = null;\n\n    if (subscriptionIdx !== -1) {\n      value = this.values[subscriptionIdx];\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n      this.values.splice(subscriptionIdx, 1);\n    }\n\n    return value;\n  }\n\n  private tryDelay(delayNotifier: Observable<any>, value: T): void {\n    const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n    this.add(notifierSubscription);\n\n    this.delayNotifierSubscriptions.push(notifierSubscription);\n    this.values.push(value);\n  }\n\n  private tryComplete(): void {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete();\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelayObservable<T> extends Observable<T> {\n  constructor(protected source: Observable<T>, private subscriptionDelay: Observable<any>) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelaySubscriber<T> extends Subscriber<T> {\n  private sourceSubscribed: boolean = false;\n\n  constructor(private parent: Subscriber<T>, private source: Observable<T>) {\n    super();\n  }\n\n  protected _next(unused: any) {\n    this.subscribeToSource();\n  }\n\n  protected _error(err: any) {\n    this.unsubscribe();\n    this.parent.error(err);\n  }\n\n  protected _complete() {\n    this.subscribeToSource();\n  }\n\n  private subscribeToSource(): void {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/delayWhen.ts\n **/","import {Operator} from '../Operator';\nimport {Observable} from '../Observable';\nimport {Subscriber} from '../Subscriber';\nimport {Notification} from '../Notification';\n\n/**\n * Returns an Observable that transforms Notification objects into the items or notifications they represent.\n *\n * @see {@link Notification}\n *\n * @return {Observable} an Observable that emits items and notifications embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize<T>(): Observable<any> {\n  return this.lift(new DeMaterializeOperator());\n}\n\nexport interface DematerializeSignature<T> {\n  <R>(): Observable<R>;\n}\n\nclass DeMaterializeOperator<T extends Notification<any>, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<any>, source: any): any {\n    return source._subscribe(new DeMaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DeMaterializeSubscriber<T extends Notification<any>> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    value.observe(this.destination);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/dematerialize.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {tryCatch} from '../util/tryCatch';\nimport {errorObject} from '../util/errorObject';\nimport {Observable} from '../Observable';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n * If a comparator function is not provided, an equality check is used by default.\n * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} an Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged<T, K>(compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): Observable<T> {\n  return this.lift(new DistinctUntilChangedOperator<T, K>(compare, keySelector));\n}\n\nexport interface DistinctUntilChangedSignature<T> {\n (compare?: (x: T, y: T) => boolean): Observable<T>;\n <K>(compare: (x: K, y: K) => boolean, keySelector: (x: T) => K): Observable<T>;\n}\n\nclass DistinctUntilChangedOperator<T, K> implements Operator<T, T> {\n  constructor(private compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DistinctUntilChangedSubscriber<T, K> extends Subscriber<T> {\n  private key: K;\n  private hasKey: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n    super(destination);\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n  }\n\n  private compare(x: any, y: any): boolean {\n    return x === y;\n  }\n\n  protected _next(value: T): void {\n\n    const keySelector = this.keySelector;\n    let key: any = value;\n\n    if (keySelector) {\n      key = tryCatch(this.keySelector)(value);\n      if (key === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    }\n\n    let result: any = false;\n\n    if (this.hasKey) {\n      result = tryCatch(this.compare)(this.key, key);\n      if (result === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    } else {\n      this.hasKey = true;\n    }\n\n    if (Boolean(result) === false) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/distinctUntilChanged.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\nimport {PartialObserver} from '../Observer';\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nexport function _do<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): Observable<T> {\n  return this.lift(new DoOperator(nextOrObserver, error, complete));\n}\n\nexport interface DoSignature<T> {\n  (next: (x: T) => void, error?: (e: any) => void, complete?: () => void): Observable<T>;\n  (observer: PartialObserver<T>): Observable<T>;\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DoSubscriber<T> extends Subscriber<T> {\n\n  private safeSubscriber: Subscriber<T>;\n\n  constructor(destination: Subscriber<T>,\n              nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              error?: (e: any) => void,\n              complete?: () => void) {\n    super(destination);\n\n    const safeSubscriber = new Subscriber<T>(nextOrObserver, error, complete);\n    safeSubscriber.syncErrorThrowable = true;\n    this.add(safeSubscriber);\n    this.safeSubscriber = safeSubscriber;\n  }\n\n  protected _next(value: T): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.next(value);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.next(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.error(err);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.complete();\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/do.ts\n **/","import {Operator} from '../Operator';\nimport {Observer} from '../Observer';\nimport {Observable} from '../Observable';\nimport {Subscriber} from '../Subscriber';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n * @param {function} predicate a function for determining if an item meets a specified condition.\n * @param {any} [thisArg] optional object to use for `this` in the callback\n * @return {Observable} an Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): Observable<boolean> {\n  return this.lift(new EveryOperator(predicate, thisArg, this));\n}\n\nexport interface EverySignature<T> {\n  (predicate: (value: T, index: number, source: Observable<T>) => boolean, thisArg?: any): Observable<boolean>;\n}\n\nclass EveryOperator<T> implements Operator<T, boolean> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<boolean>, source: any): any {\n    return source._subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass EverySubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Observer<boolean>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg: any,\n              private source?: Observable<T>) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  private notifyComplete(everyValueMatch: boolean): void {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  }\n\n  protected _next(value: T): void {\n    let result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(true);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/every.ts\n **/","import {Observable} from '../Observable';\nimport {Scheduler} from '../Scheduler';\nimport {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {tryCatch} from '../util/tryCatch';\nimport {errorObject} from '../util/errorObject';\nimport {Subscription} from '../Subscription';\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Returns an Observable where for each item in the source Observable, the supplied function is applied to each item,\n * resulting in a new value to then be applied again with the function.\n * @param {function} project the function for projecting the next emitted item of the Observable.\n * @param {number} [concurrent] the max number of observables that can be created concurrently. defaults to infinity.\n * @param {Scheduler} [scheduler] The Scheduler to use for managing the expansions.\n * @return {Observable} an Observable containing the expansions of the source Observable.\n * @method expand\n * @owner Observable\n */\nexport function expand<T, R>(project: (value: T, index: number) => Observable<R>,\n                             concurrent: number = Number.POSITIVE_INFINITY,\n                             scheduler: Scheduler = undefined): Observable<R> {\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n\n  return this.lift(new ExpandOperator(project, concurrent, scheduler));\n}\n\nexport interface ExpandSignature<T> {\n  (project: (value: T, index: number) => Observable<T>, concurrent?: number, scheduler?: Scheduler): Observable<T>;\n  <R>(project: (value: T, index: number) => Observable<R>, concurrent?: number, scheduler?: Scheduler): Observable<R>;\n}\n\nexport class ExpandOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: Scheduler) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  }\n}\n\ninterface DispatchArg<T, R> {\n  subscriber: ExpandSubscriber<T, R>;\n  result: Observable<R>;\n  value: any;\n  index: number;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ExpandSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private active: number = 0;\n  private hasCompleted: boolean = false;\n  private buffer: any[];\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: Scheduler) {\n    super(destination);\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      this.buffer = [];\n    }\n  }\n\n  private static dispatch<T, R>(arg: DispatchArg<T, R>): void {\n    const {subscriber, result, value, index} = arg;\n    subscriber.subscribeToProjection(result, value, index);\n  }\n\n  protected _next(value: any): void {\n    const destination = this.destination;\n\n    if (destination.isUnsubscribed) {\n      this._complete();\n      return;\n    }\n\n    const index = this.index++;\n    if (this.active < this.concurrent) {\n      destination.next(value);\n      let result = tryCatch(this.project)(value, index);\n      if (result === errorObject) {\n        destination.error(errorObject.e);\n      } else if (!this.scheduler) {\n        this.subscribeToProjection(result, value, index);\n      } else {\n        const state: DispatchArg<T, R> = { subscriber: this, result, value, index };\n        this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private subscribeToProjection(result: any, value: T, index: number): void {\n    this.active++;\n    this.add(subscribeToResult<T, R>(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/expand.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Subscription} from '../Subscription';\nimport {Observable} from '../Observable';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} finallySelector function to be called when source terminates.\n * @return {Observable} an Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function _finally<T>(finallySelector: () => void): Observable<T> {\n  return this.lift(new FinallyOperator(finallySelector));\n}\n\nexport interface FinallySignature<T> {\n  <T>(finallySelector: () => void): Observable<T>;\n}\n\nclass FinallyOperator<T> implements Operator<T, T> {\n  constructor(private finallySelector: () => void) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new FinallySubscriber(subscriber, this.finallySelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>, finallySelector: () => void) {\n    super(destination);\n    this.add(new Subscription(finallySelector));\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/finally.ts\n **/","import {Observable} from '../Observable';\nimport {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {EmptyError} from '../util/EmptyError';\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} an Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: (value: T, index: number) => R,\n                            defaultValue?: R): Observable<T | R> {\n  return this.lift(new FirstOperator(predicate, resultSelector, defaultValue, this));\n}\n\nexport interface FirstSignature<T> {\n  (predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<T>;\n  (predicate: (value: T, index: number, source: Observable<T>) => boolean, resultSelector: void, defaultValue?: T): Observable<T>;\n  <R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean, resultSelector?: (value: T, index: number) => R,\n      defaultValue?: R): Observable<R>;\n}\n\nclass FirstOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: (value: T, index: number) => R,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source._subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FirstSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n  private hasCompleted: boolean = false;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: (value: T, index: number) => R,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      this._emit(value, index);\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this._emit(value, index);\n    }\n  }\n\n  private _emit(value: any, index: number) {\n    if (this.resultSelector) {\n      this._tryResultSelector(value, index);\n      return;\n    }\n    this._emitFinal(value);\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this._emitFinal(result);\n  }\n\n  private _emitFinal(value: any) {\n    const destination = this.destination;\n    destination.next(value);\n    destination.complete();\n    this.hasCompleted = true;\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n      destination.next(this.defaultValue);\n      destination.complete();\n    } else if (!this.hasCompleted) {\n      destination.error(new EmptyError);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/first.ts\n **/","import {Subscriber} from '../Subscriber';\nimport {Subscription} from '../Subscription';\nimport {Observable} from '../Observable';\nimport {Operator} from '../Operator';\nimport {Subject} from '../Subject';\nimport {Map} from '../util/Map';\nimport {FastMap} from '../util/FastMap';\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @param {function(value: T): K} keySelector a function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] a function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * a function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} an Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: (value: T) => R,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): Observable<GroupedObservable<K, R>> {\n  return this.lift(new GroupByOperator(this, keySelector, elementSelector, durationSelector));\n}\n\n/* tslint:disable:max-line-length */\nexport interface GroupBySignature<T> {\n  <K>(keySelector: (value: T) => K): Observable<GroupedObservable<K, T>>;\n  <K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): Observable<GroupedObservable<K, T>>;\n  <K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): Observable<GroupedObservable<K, R>>;\n}\n/* tslint:enable:max-line-length */\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  isUnsubscribed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(public source: Observable<T>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: (value: T) => R,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source._subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T|R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: (value: T) => R,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>) {\n    super();\n    this.destination = destination;\n    this.add(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = typeof key === 'string' ? new FastMap() : new Map();\n    }\n\n    let group = groups.get(key);\n\n    if (!group) {\n      groups.set(key, group = new Subject<R>());\n      const groupedObservable = new GroupedObservable(key, group, this);\n\n      if (this.durationSelector) {\n        this._selectDuration(key, group);\n      }\n\n      this.destination.next(groupedObservable);\n    }\n\n    if (this.elementSelector) {\n      this._selectElement(value, group);\n    } else {\n      this.tryGroupNext(value, group);\n    }\n  }\n\n  private _selectElement(value: T, group: Subject<T | R>) {\n    let result: R;\n    try {\n      result = this.elementSelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n    this.tryGroupNext(result, group);\n  }\n\n  private _selectDuration(key: K, group: any) {\n    let duration: any;\n    try {\n      duration = this.durationSelector(new GroupedObservable<K, R>(key, group));\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n    this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n  }\n\n  private tryGroupNext(value: T|R, group: Subject<T | R>): void {\n    if (!group.isUnsubscribed) {\n      group.next(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.isUnsubscribed && !this.attemptedToUnsubscribe) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T>) {\n    super();\n  }\n\n  protected _next(value: T): void {\n    this.tryComplete();\n  }\n\n  protected _error(err: any): void {\n    this.tryError(err);\n  }\n\n  protected _complete(): void {\n    this.tryComplete();\n  }\n\n  private tryError(err: any): void {\n    const group = this.group;\n    if (!group.isUnsubscribed) {\n      group.error(err);\n    }\n    this.parent.removeGroup(this.key);\n  }\n\n  private tryComplete(): void {\n    const group = this.group;\n    if (!group.isUnsubscribed) {\n      group.complete();\n    }\n    this.parent.removeGroup(this.key);\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const {refCountSubscription, groupSubject} = this;\n    if (refCountSubscription && !refCountSubscription.isUnsubscribed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.isUnsubscribed && !this.isUnsubscribed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/groupBy.ts\n **/","import {Observable} from '../Observable';\nimport {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {noop} from '../util/noop';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} an empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements<T>(): Observable<T> {\n  return this.lift(new IgnoreElementsOperator());\n};\n\nexport interface IgnoreElementsSignature<T> {\n  (): Observable<T>;\n}\n\nclass IgnoreElementsOperator<T, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new IgnoreElementsSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IgnoreElementsSubscriber<T> extends Subscriber<T> {\n  protected _next(unused: T): void {\n    noop();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/ignoreElements.ts\n **/","import {Observable} from '../Observable';\nimport {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {EmptyError} from '../util/EmptyError';\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - the condition any source emitted item has to satisfy.\n * @return {Observable} an Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nexport function last<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: (value: T, index: number) => R | void,\n                           defaultValue?: R): Observable<T | R> {\n  return this.lift(new LastOperator(predicate, resultSelector, defaultValue, this));\n}\n\nexport interface LastSignature<T> {\n  (predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<T>;\n  (predicate: (value: T, index: number, source: Observable<T>) => boolean, resultSelector: void, defaultValue?: T): Observable<T>;\n  <R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean, resultSelector?: (value: T, index: number) => R,\n      defaultValue?: R): Observable<R>;\n}\n\nclass LastOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: (value: T, index: number) => R,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source._subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass LastSubscriber<T, R> extends Subscriber<T> {\n  private lastValue: T | R;\n  private hasValue: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: (value: T, index: number) => R,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n    if (typeof defaultValue !== 'undefined') {\n      this.lastValue = defaultValue;\n      this.hasValue = true;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.lastValue = result;\n    this.hasValue = true;\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (this.hasValue) {\n      destination.next(this.lastValue);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/last.ts\n **/","import {Observable} from '../Observable';\n\n/**\n * @param func\n * @return {Observable<R>}\n * @method let\n * @owner Observable\n */\nexport function letProto<T, R>(func: (selector: Observable<T>) => Observable<R>): Observable<R> {\n  return func(this);\n}\n\nexport interface LetSignature<T> {\n  <R>(func: (selector: Observable<T>) => Observable<R>): Observable<R>;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/let.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo<T, R>(value: R): Observable<R> {\n  return this.lift(new MapToOperator(value));\n}\n\nexport interface MapToSignature<T> {\n  <R>(value: R): Observable<R>;\n}\n\nclass MapToOperator<T, R> implements Operator<T, R> {\n\n  value: R;\n\n  constructor(value: R) {\n    this.value = value;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new MapToSubscriber(subscriber, this.value));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapToSubscriber<T, R> extends Subscriber<T> {\n\n  value: R;\n\n  constructor(destination: Subscriber<R>, value: R) {\n    super(destination);\n    this.value = value;\n  }\n\n  protected _next(x: T) {\n    this.destination.next(this.value);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/mapTo.ts\n **/","import {Operator} from '../Operator';\nimport {Observable} from '../Observable';\nimport {Subscriber} from '../Subscriber';\nimport {Notification} from '../Notification';\n\n/**\n * Returns an Observable that represents all of the emissions and notifications\n * from the source Observable into emissions marked with their original types\n * within a `Notification` objects.\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * @see {@link Notification}\n *\n * @scheduler materialize does not operate by default on a particular Scheduler.\n * @return {Observable<Notification<T>>} an Observable that emits items that are the result of\n * materializing the items and notifications of the source Observable.\n * @method materialize\n * @owner Observable\n */\nexport function materialize<T>(): Observable<Notification<T>> {\n  return this.lift(new MaterializeOperator());\n}\n\nexport interface MaterializeSignature<T> {\n  (): Observable<Notification<T>>;\n}\n\nclass MaterializeOperator<T> implements Operator<T, Notification<T>> {\n  call(subscriber: Subscriber<Notification<T>>, source: any): any {\n    return source._subscribe(new MaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MaterializeSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<Notification<T>>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.destination.next(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    const destination = this.destination;\n    destination.next(Notification.createError(err));\n    destination.complete();\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    destination.next(Notification.createComplete());\n    destination.complete();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/materialize.ts\n **/","import {not} from '../util/not';\nimport {filter} from './filter';\nimport {Observable} from '../Observable';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nexport function partition<T>(predicate: (value: T) => boolean, thisArg?: any): [Observable<T>, Observable<T>] {\n  return [\n    filter.call(this, predicate),\n    filter.call(this, not(predicate, thisArg))\n  ];\n}\n\nexport interface PartitionSignature<T> {\n  (predicate: (value: T) => boolean, thisArg?: any): [Observable<T>, Observable<T>];\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/partition.ts\n **/","import {Observable} from '../Observable';\nimport {map} from './map';\n\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} Returns a new Observable of property values from the\n * source values.\n * @method pluck\n * @owner Observable\n */\nexport function pluck<R>(...properties: string[]): Observable<R> {\n  const length = properties.length;\n  if (length === 0) {\n    throw new Error('List of properties cannot be empty.');\n  }\n  return map.call(this, plucker(properties, length));\n}\n\nexport interface PluckSignature<T> {\n  <R>(...properties: string[]): Observable<R>;\n}\n\nfunction plucker(props: string[], length: number): (x: string) => any {\n  const mapper = (x: string) => {\n    let currentProp = x;\n    for (let i = 0; i < length; i++) {\n      const p = currentProp[props[i]];\n      if (typeof p !== 'undefined') {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  };\n\n  return mapper;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/pluck.ts\n **/","import {Subject} from '../Subject';\nimport {multicast} from './multicast';\nimport {ConnectableObservable} from '../observable/ConnectableObservable';\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @return a ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nexport function publish<T>(): ConnectableObservable<T> {\n  return multicast.call(this, new Subject<T>());\n}\n\nexport interface PublishSignature<T> {\n  (): ConnectableObservable<T>;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/publish.ts\n **/","import {BehaviorSubject} from '../BehaviorSubject';\nimport {multicast} from './multicast';\nimport {ConnectableObservable} from '../observable/ConnectableObservable';\n\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nexport function publishBehavior<T>(value: T): ConnectableObservable<T> {\n  return multicast.call(this, new BehaviorSubject<T>(value));\n}\n\nexport interface PublishBehaviorSignature<T> {\n  (value: T): ConnectableObservable<T>;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/publishBehavior.ts\n **/","import {AsyncSubject} from '../AsyncSubject';\nimport {multicast} from './multicast';\nimport {ConnectableObservable} from '../observable/ConnectableObservable';\n\n/**\n * @return {ConnectableObservable<T>}\n * @method publishLast\n * @owner Observable\n */\nexport function publishLast<T>(): ConnectableObservable<T> {\n  return multicast.call(this, new AsyncSubject<T>());\n}\n\nexport interface PublishLastSignature<T> {\n  (): ConnectableObservable<T>;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/publishLast.ts\n **/","import {Observable} from '../Observable';\nimport {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\n\n/**\n * Returns an Observable that applies a specified accumulator function to the first item emitted by a source Observable,\n * then feeds the result of that function along with the second item emitted by the source Observable into the same\n * function, and so on until all items have been emitted by the source Observable, and emits the final result from\n * the final call to your function as its sole item.\n * This technique, which is called \"reduce\" here, is sometimes called \"aggregate,\" \"fold,\" \"accumulate,\" \"compress,\" or\n * \"inject\" in other programming contexts.\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * @param {initialValue} the initial (seed) accumulator value\n * @param {accumulator} an accumulator function to be invoked on each item emitted by the source Observable, the\n * result of which will be used in the next accumulator call.\n * @return {Observable} an Observable that emits a single item that is the result of accumulating the output from the\n * items emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce<T, R>(project: (acc: R, value: T) => R, seed?: R): Observable<R> {\n  return this.lift(new ReduceOperator(project, seed));\n}\n\nexport interface ReduceSignature<T> {\n  <R>(project: (acc: R, value: T) => R, seed?: R): Observable<R>;\n}\n\nexport class ReduceOperator<T, R> implements Operator<T, R> {\n\n  constructor(private project: (acc: R, value: T) => R, private seed?: R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new ReduceSubscriber(subscriber, this.project, this.seed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ReduceSubscriber<T, R> extends Subscriber<T> {\n\n  acc: T | R;\n  hasSeed: boolean;\n  hasValue: boolean = false;\n  project: (acc: R, value: T) => R;\n\n  constructor(destination: Subscriber<R>, project: (acc: R, value: T) => R, seed?: R) {\n    super(destination);\n    this.acc = seed;\n    this.project = project;\n    this.hasSeed = typeof seed !== 'undefined';\n  }\n\n  protected _next(value: T) {\n    if (this.hasValue || (this.hasValue = this.hasSeed)) {\n      this._tryReduce(value);\n    } else {\n      this.acc = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryReduce(value: T) {\n    let result: any;\n    try {\n      result = this.project(<R>this.acc, value);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.acc = result;\n  }\n\n  protected _complete() {\n    if (this.hasValue || this.hasSeed) {\n      this.destination.next(this.acc);\n    }\n    this.destination.complete();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/reduce.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\nimport {EmptyObservable} from '../observable/EmptyObservable';\n\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times,\n * on a particular Scheduler.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {Scheduler} [scheduler] the Scheduler to emit the items on.\n * @param {number} [count] the number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} an Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat<T>(count: number = -1): Observable<T> {\n  if (count === 0) {\n    return new EmptyObservable<T>();\n  } else if (count < 0) {\n    return this.lift(new RepeatOperator(-1, this));\n  } else {\n    return this.lift(new RepeatOperator(count - 1, this));\n  }\n}\n\nexport interface RepeatSignature<T> {\n  (count?: number): Observable<T>;\n}\n\nclass RepeatOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  complete() {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.complete();\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      this.unsubscribe();\n      this.isStopped = false;\n      this.isUnsubscribed = false;\n      source.subscribe(this);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/repeat.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\n\n/**\n * Returns an Observable that mirrors the source Observable, resubscribing to it if it calls `error` and the\n * predicate returns true for that specific exception and retry count.\n * If the source Observable calls `error`, this method will resubscribe to the source Observable for a maximum of\n * count resubscriptions (given as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} number of retry attempts before failing.\n * @return {Observable} the source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry<T>(count: number = -1): Observable<T> {\n  return this.lift(new RetryOperator(count, this));\n}\n\nexport interface RetrySignature<T> {\n  (count?: number): Observable<T>;\n}\n\nclass RetryOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetrySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  error(err: any) {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.error(err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      this.unsubscribe();\n      this.isStopped = false;\n      this.isUnsubscribed = false;\n      source.subscribe(this);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/retry.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\nimport {Subject} from '../Subject';\nimport {Subscription} from '../Subscription';\nimport {tryCatch} from '../util/tryCatch';\nimport {errorObject} from '../util/errorObject';\n\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that emits the same values as the source observable with the exception of an `error`.\n * An `error` will cause the emission of the Throwable that cause the error to the Observable returned from\n * notificationHandler. If that Observable calls onComplete or `error` then retry will call `complete` or `error`\n * on the child subscription. Otherwise, this Observable will resubscribe to the source observable, on a particular\n * Scheduler.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {notificationHandler} receives an Observable of notifications with which a user can `complete` or `error`,\n * aborting the retry.\n * @param {scheduler} the Scheduler on which to subscribe to the source Observable.\n * @return {Observable} the source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): Observable<T> {\n  return this.lift(new RetryWhenOperator(notifier, this));\n}\n\nexport interface RetryWhenSignature<T> {\n  (notifier: (errors: Observable<any>) => Observable<any>): Observable<T>;\n}\n\nclass RetryWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (errors: Observable<any>) => Observable<any>,\n              protected source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetryWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private errors: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (errors: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  error(err: any) {\n    if (!this.isStopped) {\n\n      let errors = this.errors;\n      let retries: any = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        errors = new Subject();\n        retries = tryCatch(this.notifier)(errors);\n        if (retries === errorObject) {\n          return super.error(errorObject.e);\n        }\n        retriesSubscription = subscribeToResult(this, retries);\n      } else {\n        this.errors = null;\n        this.retriesSubscription = null;\n      }\n\n      this.unsubscribe();\n      this.isUnsubscribed = false;\n\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n\n      errors.next(err);\n    }\n  }\n\n  protected _unsubscribe() {\n    const { errors, retriesSubscription } = this;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n\n    const { errors, retries, retriesSubscription } = this;\n    this.errors = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n\n    this.unsubscribe();\n    this.isStopped = false;\n    this.isUnsubscribed = false;\n\n    this.errors = errors;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n\n    this.source.subscribe(this);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/retryWhen.ts\n **/","import {Operator} from '../Operator';\nimport {Observable} from '../Observable';\nimport {Subscriber} from '../Subscriber';\n\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample<T>(notifier: Observable<any>): Observable<T> {\n  return this.lift(new SampleOperator(notifier));\n}\n\nexport interface SampleSignature<T> {\n  (notifier: Observable<any>): Observable<T>;\n}\n\nclass SampleOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new SampleSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<any>, notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  protected _next(value: T) {\n    this.value = value;\n    this.hasValue = true;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.value);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/sample.ts\n **/","import {Observable} from '../Observable';\nimport {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Scheduler} from '../Scheduler';\nimport {async} from '../scheduler/async';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link Scheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime<T>(period: number, scheduler: Scheduler = async): Observable<T> {\n  return this.lift(new SampleTimeOperator(period, scheduler));\n}\n\nexport interface SampleTimeSignature<T> {\n  (period: number, scheduler?: Scheduler): Observable<T>;\n}\n\nclass SampleTimeOperator<T> implements Operator<T, T> {\n  constructor(private period: number,\n              private scheduler: Scheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleTimeSubscriber<T> extends Subscriber<T> {\n  lastValue: T;\n  hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private period: number,\n              private scheduler: Scheduler) {\n    super(destination);\n    this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n  }\n\n  protected _next(value: T) {\n    this.lastValue = value;\n    this.hasValue = true;\n  }\n\n  notifyNext() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  }\n}\n\nfunction dispatchNotification<T>(state: any) {\n  let { subscriber, period } = state;\n  subscriber.notifyNext();\n  (<any>this).schedule(state, period);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/sampleTime.ts\n **/","import {Operator} from '../Operator';\nimport {Observable} from '../Observable';\nimport {Subscriber} from '../Subscriber';\n\n/**\n * Applies an accumulation function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): Observable<R> {\n  return this.lift(new ScanOperator(accumulator, seed));\n}\n\nexport interface ScanSignature<T> {\n  <R>(accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): Observable<R>;\n}\n\nclass ScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => R, private seed?: T | R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ScanSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n  private accumulatorSet: boolean = false;\n  private _seed: T | R;\n\n  get seed(): T | R {\n    return this._seed;\n  }\n\n  set seed(value: T | R) {\n    this.accumulatorSet = true;\n    this._seed = value;\n  }\n\n  constructor(destination: Subscriber<R>, private accumulator: (acc: R, value: T, index: number) => R, seed?: T|R) {\n    super(destination);\n    this.seed = seed;\n    this.accumulatorSet = typeof seed !== 'undefined';\n  }\n\n  protected _next(value: T): void {\n    if (!this.accumulatorSet) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  }\n\n  private _tryNext(value: T): void {\n    const index = this.index++;\n    let result: any;\n    try {\n      result = this.accumulator(<R>this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/scan.ts\n **/","import {Observable} from '../Observable';\nimport {multicast} from './multicast';\nimport {Subject} from '../Subject';\n\nfunction shareSubjectFactory() {\n  return new Subject();\n}\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .publish().refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} an Observable that upon connection causes the source Observable to emit items to its Observers\n * @method share\n * @owner Observable\n */\nexport function share<T>(): Observable<T> {\n  return multicast.call(this, shareSubjectFactory).refCount();\n};\n\nexport interface ShareSignature<T> {\n  (): Observable<T>;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/share.ts\n **/","import {Observable} from '../Observable';\nimport {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observer} from '../Observer';\nimport {EmptyError} from '../util/EmptyError';\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} a predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} an Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<T> {\n  return this.lift(new SingleOperator(predicate, this));\n}\n\nexport interface SingleSignature<T> {\n  (predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<T>;\n}\n\nclass SingleOperator<T> implements Operator<T, T> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SingleSubscriber<T> extends Subscriber<T> {\n  private seenValue: boolean = false;\n  private singleValue: T;\n  private index: number = 0;\n\n  constructor(destination: Observer<T>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  private applySingleValue(value: T): void {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  }\n\n  protected _next(value: T): void {\n    const predicate = this.predicate;\n    this.index++;\n    if (predicate) {\n      this.tryNext(value);\n    } else {\n      this.applySingleValue(value);\n    }\n  }\n\n  private tryNext(value: T): void {\n    try {\n      const result = this.predicate(value, this.index, this.source);\n      if (result) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/single.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\n\n/**\n * Returns an Observable that skips `n` items emitted by an Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} the `n` of times, items emitted by source Observable should be skipped.\n * @return {Observable} an Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(total: number): Observable<T> {\n  return this.lift(new SkipOperator(total));\n}\n\nexport interface SkipSignature<T> {\n  (total: number): Observable<T>;\n}\n\nclass SkipOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber<T> extends Subscriber<T> {\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/skip.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\n\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} the second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} an Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil<T>(notifier: Observable<any>): Observable<T> {\n  return this.lift(new SkipUntilOperator(notifier));\n}\n\nexport interface SkipUntilSignature<T> {\n  (notifier: Observable<any>): Observable<T>;\n}\n\nclass SkipUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private hasValue: boolean = false;\n  private isInnerStopped: boolean = false;\n\n  constructor(destination: Subscriber<any>,\n              notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  protected _next(value: T) {\n    if (this.hasValue) {\n      super._next(value);\n    }\n  }\n\n  protected _complete() {\n    if (this.isInnerStopped) {\n      super._complete();\n    } else {\n      this.unsubscribe();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.hasValue = true;\n  }\n\n  notifyComplete(): void {\n    this.isInnerStopped = true;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/skipUntil.ts\n **/","import {Observable} from '../Observable';\nimport {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - a function to test each item emitted from the source Observable.\n * @return {Observable<T>} an Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): Observable<T> {\n  return this.lift(new SkipWhileOperator(predicate));\n}\n\nexport interface SkipWhileSignature<T> {\n  (predicate: (value: T, index: number) => boolean): Observable<T>;\n}\n\nclass SkipWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipWhileSubscriber<T> extends Subscriber<T> {\n  private skipping: boolean = true;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  }\n\n  private tryCallPredicate(value: T): void {\n    try {\n      const result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/skipWhile.ts\n **/","import {Scheduler} from '../Scheduler';\nimport {Observable} from '../Observable';\nimport {ArrayObservable} from '../observable/ArrayObservable';\nimport {ScalarObservable} from '../observable/ScalarObservable';\nimport {EmptyObservable} from '../observable/EmptyObservable';\nimport {concatStatic} from './concat';\nimport {isScheduler} from '../util/isScheduler';\n\n/**\n * Returns an Observable that emits the items in a specified Iterable before it begins to emit items emitted by the\n * source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {Values} an Iterable that contains the items you want the modified Observable to emit first.\n * @return {Observable} an Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith<T>(...array: Array<T | Scheduler>): Observable<T> {\n  let scheduler = <Scheduler>array[array.length - 1];\n  if (isScheduler(scheduler)) {\n    array.pop();\n  } else {\n    scheduler = null;\n  }\n\n  const len = array.length;\n  if (len === 1) {\n    return concatStatic(new ScalarObservable<T>(<T>array[0], scheduler), <Observable<T>>this);\n  } else if (len > 1) {\n    return concatStatic(new ArrayObservable<T>(<T[]>array, scheduler), <Observable<T>>this);\n  } else {\n    return concatStatic(new EmptyObservable<T>(scheduler), <Observable<T>>this);\n  }\n}\n\nexport interface StartWithSignature<T> {\n  (v1: T, scheduler?: Scheduler): Observable<T>;\n  (v1: T, v2: T, scheduler?: Scheduler): Observable<T>;\n  (v1: T, v2: T, v3: T, scheduler?: Scheduler): Observable<T>;\n  (v1: T, v2: T, v3: T, v4: T, scheduler?: Scheduler): Observable<T>;\n  (v1: T, v2: T, v3: T, v4: T, v5: T, scheduler?: Scheduler): Observable<T>;\n  (v1: T, v2: T, v3: T, v4: T, v5: T, v6: T, scheduler?: Scheduler): Observable<T>;\n  (...array: Array<T | Scheduler>): Observable<T>;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/startWith.ts\n **/","import {Scheduler} from '../Scheduler';\nimport {Observable} from '../Observable';\nimport {SubscribeOnObservable} from '../observable/SubscribeOnObservable';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified Scheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} the Scheduler to perform subscription actions on.\n * @return {Observable<T>} the source Observable modified so that its subscriptions happen on the specified Scheduler\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn<T>(scheduler: Scheduler, delay: number = 0): Observable<T> {\n  return new SubscribeOnObservable<T>(this, delay, scheduler);\n}\n\nexport interface SubscribeOnSignature<T> {\n  (scheduler: Scheduler, delay?: number): Observable<T>;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/subscribeOn.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Subscription} from '../Subscription';\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * subscribing to only the most recently emitted of those inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * previous inner Observable once a new one appears.</span>\n *\n * <img src=\"./img/switch.png\" width=\"100%\">\n *\n * `switch` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable subscribes to the inner Observable and\n * begins emitting the items emitted by that. So far, it behaves\n * like {@link mergeAll}. However, when a new inner Observable is emitted,\n * `switch` unsubscribes from the earlier-emitted inner Observable and\n * subscribes to the new inner Observable and begins emitting items from it. It\n * continues to behave like this for subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * // Each click event is mapped to an Observable that ticks every second\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var switched = higherOrder.switch();\n * // The outcome is that `switched` is essentially a timer that restarts\n * // on every click. The interval Observables from older clicks do not merge\n * // with the current interval Observable.\n * switched.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link zipAll}\n *\n * @return {Observable<T>} An Observable that emits the items emitted by the\n * Observable most recently emitted by the source Observable.\n * @method switch\n * @name switch\n * @owner Observable\n */\nexport function _switch<T>(): T {\n  return this.lift(new SwitchOperator());\n}\n\nexport interface SwitchSignature<T> {\n  (): T;\n}\n\nclass SwitchOperator<T, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new SwitchSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private hasCompleted: boolean = false;\n  innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.unsubscribeInner();\n    this.active++;\n    this.add(this.innerSubscription = subscribeToResult(this, value));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  private unsubscribeInner(): void {\n    this.active = this.active > 0 ? this.active - 1 : 0;\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n      this.remove(innerSubscription);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(): void {\n    this.unsubscribeInner();\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/switch.ts\n **/","import {Operator} from '../Operator';\nimport {Observable, ObservableInput} from '../Observable';\nimport {Subscriber} from '../Subscriber';\nimport {Subscription} from '../Subscription';\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>,\n                                   resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R> {\n  return this.lift(new SwitchMapOperator(project, resultSelector));\n}\n\nexport interface SwitchMapSignature<T> {\n  <R>(project: (value: T, index: number) => ObservableInput<R>): Observable<R>;\n  <I, R>(project: (value: T, index: number) => ObservableInput<I>,\n         resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R>;\n}\n\nclass SwitchMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source._subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: any;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: any, value: T, index: number) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.isUnsubscribed) {\n      super._complete();\n    }\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  _tryNotifyNext(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): void {\n    let result: any;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/switchMap.ts\n **/","import {Operator} from '../Operator';\nimport {Observable, ObservableInput} from '../Observable';\nimport {Subscriber} from '../Subscriber';\nimport {Subscription} from '../Subscription';\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {Observable} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` every time a value is emitted on the source Observable.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo<T, I, R>(innerObservable: Observable<I>,\n                                     resultSelector?: (outerValue: T,\n                                                       innerValue: I,\n                                                       outerIndex: number,\n                                                       innerIndex: number) => R): Observable<R> {\n  return this.lift(new SwitchMapToOperator(innerObservable, resultSelector));\n}\n\nexport interface SwitchMapToSignature<T> {\n  <R>(observable: ObservableInput<R>): Observable<R>;\n  <I, R>(observable: ObservableInput<I>,\n         resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R>;\n}\n\nclass SwitchMapToOperator<T, I, R> implements Operator<T, I> {\n  constructor(private observable: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source._subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private inner: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: any) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, this.inner, value, this.index++));\n  }\n\n  protected _complete() {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.isUnsubscribed) {\n      super._complete();\n    }\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription) {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private tryResultSelector(outerValue: T, innerValue: I,\n                            outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/switchMapTo.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {ArgumentOutOfRangeError} from '../util/ArgumentOutOfRangeError';\nimport {EmptyObservable} from '../observable/EmptyObservable';\nimport {Observable} from '../Observable';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): Observable<T> {\n  if (count === 0) {\n    return new EmptyObservable<T>();\n  } else {\n    return this.lift(new TakeOperator(count));\n  }\n}\n\nexport interface TakeSignature<T> {\n  (count: number): Observable<T>;\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    if (++this.count <= total) {\n      this.destination.next(value);\n      if (this.count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/take.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {ArgumentOutOfRangeError} from '../util/ArgumentOutOfRangeError';\nimport {EmptyObservable} from '../observable/EmptyObservable';\nimport {Observable} from '../Observable';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(count: number): Observable<T> {\n  if (count === 0) {\n    return new EmptyObservable<T>();\n  } else {\n    return this.lift(new TakeLastOperator(count));\n  }\n}\n\nexport interface TakeLastSignature<T> {\n  (count: number): Observable<T>;\n}\n\nclass TakeLastOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new TakeLastSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeLastSubscriber<T> extends Subscriber<T> {\n  private ring: Array<T> = new Array();\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const ring = this.ring;\n    const total = this.total;\n    const count = this.count++;\n\n    if (ring.length < total) {\n      ring.push(value);\n    } else {\n      const index = count % total;\n      ring[index] = value;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    let count = this.count;\n\n    if (count > 0) {\n      const total = this.count >= this.total ? this.total : this.count;\n      const ring  = this.ring;\n\n      for (let i = 0; i < total; i++) {\n        const idx = (count++) % total;\n        destination.next(ring[idx]);\n      }\n    }\n\n    destination.complete();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/takeLast.ts\n **/","import {Operator} from '../Operator';\nimport {Observable} from '../Observable';\nimport {Subscriber} from '../Subscriber';\n\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(notifier: Observable<any>): Observable<T> {\n  return this.lift(new TakeUntilOperator(notifier));\n}\n\nexport interface TakeUntilSignature<T> {\n  (notifier: Observable<any>): Observable<T>;\n}\n\nclass TakeUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  constructor(destination: Subscriber<any>,\n              private notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.complete();\n  }\n\n  notifyComplete(): void {\n    // noop\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/takeUntil.ts\n **/","import {Operator} from '../Operator';\nimport {Observable} from '../Observable';\nimport {Subscriber} from '../Subscriber';\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean): Observable<T> {\n  return this.lift(new TakeWhileOperator(predicate));\n}\n\nexport interface TakeWhileSignature<T> {\n  (predicate: (value: T, index: number) => boolean): Observable<T>;\n}\n\nclass TakeWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeWhileSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    let result: boolean;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  }\n\n  private nextOrComplete(value: T, predicateResult: boolean): void {\n    const destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      destination.complete();\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/takeWhile.ts\n **/","import {Operator} from '../Operator';\nimport {Observable, SubscribableOrPromise} from '../Observable';\nimport {Subscriber} from '../Subscriber';\nimport {Subscription} from '../Subscription';\n\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): Observable|Promise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(durationSelector: (value: T) => SubscribableOrPromise<number>): Observable<T> {\n  return this.lift(new ThrottleOperator(durationSelector));\n}\n\nexport interface ThrottleSignature<T> {\n  (durationSelector: (value: T) => SubscribableOrPromise<number>): Observable<T>;\n}\n\nclass ThrottleOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new ThrottleSubscriber(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private throttled: Subscription;\n\n  constructor(protected destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.throttled) {\n      this.tryDurationSelector(value);\n    }\n  }\n\n  private tryDurationSelector(value: T): void {\n    let duration: SubscribableOrPromise<number> = null;\n    try {\n      duration = this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.emitAndThrottle(value, duration);\n  }\n\n  private emitAndThrottle(value: T, duration: SubscribableOrPromise<number>) {\n    this.add(this.throttled = subscribeToResult(this, duration));\n    this.destination.next(value);\n  }\n\n  protected _unsubscribe() {\n    const throttled = this.throttled;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._unsubscribe();\n  }\n\n  notifyComplete(): void {\n    this._unsubscribe();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/throttle.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Scheduler} from '../Scheduler';\nimport {Subscription} from '../Subscription';\nimport {async} from '../scheduler/async';\nimport {Observable} from '../Observable';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link Scheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link Scheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(duration: number, scheduler: Scheduler = async): Observable<T> {\n  return this.lift(new ThrottleTimeOperator(duration, scheduler));\n}\n\nexport interface ThrottleTimeSignature<T> {\n  (duration: number, scheduler?: Scheduler): Observable<T>;\n}\n\nclass ThrottleTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: Scheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleTimeSubscriber<T> extends Subscriber<T> {\n  private throttled: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: Scheduler) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    if (!this.throttled) {\n      this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n      this.destination.next(value);\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n    if (throttled) {\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: ThrottleTimeSubscriber<T>;\n}\n\nfunction dispatchNext<T>(arg: DispatchArg<T>) {\n  const { subscriber } = arg;\n  subscriber.clearThrottle();\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/throttleTime.ts\n **/","import {async} from '../scheduler/async';\nimport {isDate} from '../util/isDate';\nimport {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Scheduler} from '../Scheduler';\nimport {Observable} from '../Observable';\n\n/**\n * @param due\n * @param errorToSend\n * @param scheduler\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(due: number | Date,\n                           errorToSend: any = null,\n                           scheduler: Scheduler = async): Observable<T> {\n  let absoluteTimeout = isDate(due);\n  let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n  return this.lift(new TimeoutOperator(waitFor, absoluteTimeout, errorToSend, scheduler));\n}\n\nexport interface TimeoutSignature<T> {\n  (due: number | Date, errorToSend?: any, scheduler?: Scheduler): Observable<T>;\n}\n\nclass TimeoutOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private errorToSend: any,\n              private scheduler: Scheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new TimeoutSubscriber<T>(\n      subscriber, this.absoluteTimeout, this.waitFor, this.errorToSend, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n  private _previousIndex: number = 0;\n  get previousIndex(): number {\n    return this._previousIndex;\n  }\n  private _hasCompleted: boolean = false;\n  get hasCompleted(): boolean {\n    return this._hasCompleted;\n  }\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private errorToSend: any,\n              private scheduler: Scheduler) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout(state: any): void {\n    const source = state.subscriber;\n    const currentIndex = state.index;\n    if (!source.hasCompleted && source.previousIndex === currentIndex) {\n      source.notifyTimeout();\n    }\n  }\n\n  private scheduleTimeout(): void {\n    let currentIndex = this.index;\n    this.scheduler.schedule(TimeoutSubscriber.dispatchTimeout, this.waitFor, { subscriber: this, index: currentIndex });\n    this.index++;\n    this._previousIndex = currentIndex;\n  }\n\n  protected _next(value: T) {\n    this.destination.next(value);\n\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n  }\n\n  protected _error(err: any) {\n    this.destination.error(err);\n    this._hasCompleted = true;\n  }\n\n  protected _complete() {\n    this.destination.complete();\n    this._hasCompleted = true;\n  }\n\n  notifyTimeout() {\n    this.error(this.errorToSend || new Error('timeout'));\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/timeout.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Scheduler} from '../Scheduler';\nimport {async} from '../scheduler/async';\nimport {Subscription} from '../Subscription';\nimport {Observable} from '../Observable';\nimport {isDate} from '../util/isDate';\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * @param due\n * @param withObservable\n * @param scheduler\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(due: number | Date,\n                                  withObservable: Observable<R>,\n                                  scheduler: Scheduler = async): Observable<T | R> {\n  let absoluteTimeout = isDate(due);\n  let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n  return this.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n}\n\nexport interface TimeoutWithSignature<T> {\n  (due: number | Date, withObservable: Observable<T>, scheduler?: Scheduler): Observable<T>;\n  <R>(due: number | Date, withObservable: Observable<R>, scheduler?: Scheduler): Observable<T | R>;\n}\n\nclass TimeoutWithOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private withObservable: Observable<any>,\n              private scheduler: Scheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): any {\n    return source._subscribe(new TimeoutWithSubscriber(\n      subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutWithSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private timeoutSubscription: Subscription = undefined;\n  private index: number = 0;\n  private _previousIndex: number = 0;\n  get previousIndex(): number {\n    return this._previousIndex;\n  }\n  private _hasCompleted: boolean = false;\n  get hasCompleted(): boolean {\n    return this._hasCompleted;\n  }\n\n  constructor(public destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private withObservable: Observable<any>,\n              private scheduler: Scheduler) {\n    super();\n    destination.add(this);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout(state: any): void {\n    const source = state.subscriber;\n    const currentIndex = state.index;\n    if (!source.hasCompleted && source.previousIndex === currentIndex) {\n      source.handleTimeout();\n    }\n  }\n\n  private scheduleTimeout(): void {\n    let currentIndex = this.index;\n    const timeoutState = { subscriber: this, index: currentIndex };\n    this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, timeoutState);\n    this.index++;\n    this._previousIndex = currentIndex;\n  }\n\n  protected _next(value: T) {\n    this.destination.next(value);\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n  }\n\n  protected _error(err: any) {\n    this.destination.error(err);\n    this._hasCompleted = true;\n  }\n\n  protected _complete() {\n    this.destination.complete();\n    this._hasCompleted = true;\n  }\n\n  handleTimeout(): void {\n    if (!this.isUnsubscribed) {\n      const withObservable = this.withObservable;\n      this.unsubscribe();\n      this.destination.add(this.timeoutSubscription = subscribeToResult(this, withObservable));\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/timeoutWith.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\n\n/**\n * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}\n * @method toArray\n * @owner Observable\n */\nexport function toArray<T>(): Observable<T[]> {\n  return this.lift(new ToArrayOperator());\n}\n\nexport interface ToArraySignature<T> {\n  (): Observable<T[]>;\n}\n\nclass ToArrayOperator<T> implements Operator<T, T[]> {\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source._subscribe(new ToArraySubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ToArraySubscriber<T> extends Subscriber<T> {\n\n  private array: T[] = [];\n\n  constructor(destination: Subscriber<T[]>) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    this.array.push(x);\n  }\n\n  protected _complete() {\n    this.destination.next(this.array);\n    this.destination.complete();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/toArray.ts\n **/","import {root} from '../util/root';\n\n/**\n * @param PromiseCtor\n * @return {Promise<T>}\n * @method toPromise\n * @owner Observable\n */\nexport function toPromise<T>(PromiseCtor?: typeof Promise): Promise<T> {\n  if (!PromiseCtor) {\n    if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n      PromiseCtor = root.Rx.config.Promise;\n    } else if (root.Promise) {\n      PromiseCtor = root.Promise;\n    }\n  }\n\n  if (!PromiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return new PromiseCtor((resolve, reject) => {\n    let value: any;\n    this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n  });\n}\n\nexport interface ToPromiseSignature<T> {\n  (): Promise<T>;\n  (PromiseCtor: typeof Promise): Promise<T>;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/toPromise.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\nimport {Subject} from '../Subject';\n\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window<T>(windowBoundaries: Observable<any>): Observable<Observable<T>> {\n  return this.lift(new WindowOperator<T>(windowBoundaries));\n}\n\nexport interface WindowSignature<T> {\n  (windowBoundaries: Observable<any>): Observable<Observable<T>>;\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowBoundaries: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source._subscribe(new WindowSubscriber(subscriber, this.windowBoundaries));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n  private window: Subject<T>;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowBoundaries: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, windowBoundaries));\n    this.openWindow();\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this._complete();\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n  }\n\n  private openWindow(): void  {\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    const destination = this.destination;\n    const newWindow = this.window = new Subject<T>();\n    destination.add(newWindow);\n    destination.next(newWindow);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/window.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\nimport {Subject} from '../Subject';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount<T>(windowSize: number,\n                               startWindowEvery: number = 0): Observable<Observable<T>> {\n  return this.lift(new WindowCountOperator<T>(windowSize, startWindowEvery));\n}\n\nexport interface WindowCountSignature<T> {\n  (windowSize: number, startWindowEvery?: number): Observable<Observable<T>>;\n}\n\nclass WindowCountOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowSize: number,\n              private startWindowEvery: number) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source._subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowCountSubscriber<T> extends Subscriber<T> {\n  private windows: Subject<T>[] = [ new Subject<T>() ];\n  private count: number = 0;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowSize: number,\n              private startWindowEvery: number) {\n    super(destination);\n    const firstWindow = this.windows[0];\n    destination.add(firstWindow);\n    destination.next(firstWindow);\n  }\n\n  protected _next(value: T) {\n    const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n    const destination = this.destination;\n    const windowSize = this.windowSize;\n    const windows = this.windows;\n    const len = windows.length;\n\n    for (let i = 0; i < len; i++) {\n      windows[i].next(value);\n    }\n    const c = this.count - windowSize + 1;\n    if (c >= 0 && c % startWindowEvery === 0) {\n      windows.shift().complete();\n    }\n    if (++this.count % startWindowEvery === 0) {\n      const window = new Subject<T>();\n      windows.push(window);\n      destination.add(window);\n      destination.next(window);\n    }\n  }\n\n  protected _error(err: any) {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().complete();\n    }\n    this.destination.complete();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/windowCount.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\nimport {Subject} from '../Subject';\nimport {Subscription} from '../Subscription';\nimport {Scheduler} from '../Scheduler';\nimport {Action} from '../scheduler/Action';\nimport {async} from '../scheduler/async';\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowTime.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number = null,\n                              scheduler: Scheduler = async): Observable<Observable<T>> {\n  return this.lift(new WindowTimeOperator<T>(windowTimeSpan, windowCreationInterval, scheduler));\n}\n\nexport interface WindowTimeSignature<T> {\n  (windowTimeSpan: number, windowCreationInterval?: number, scheduler?: Scheduler): Observable<Observable<T>>;\n}\n\nclass WindowTimeOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowTimeSpan: number,\n              private windowCreationInterval: number,\n              private scheduler: Scheduler) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source._subscribe(new WindowTimeSubscriber(\n      subscriber, this.windowTimeSpan, this.windowCreationInterval, this.scheduler\n    ));\n  }\n}\n\ninterface CreationState<T> {\n  windowTimeSpan: number;\n  windowCreationInterval: number;\n  subscriber: WindowTimeSubscriber<T>;\n  scheduler: Scheduler;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowTimeSubscriber<T> extends Subscriber<T> {\n  private windows: Subject<T>[] = [];\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowTimeSpan: number,\n              private windowCreationInterval: number,\n              private scheduler: Scheduler) {\n    super(destination);\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      let window = this.openWindow();\n      const closeState = { subscriber: this, window, context: <any>null };\n      const creationState: CreationState<T> = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n      this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      let window = this.openWindow();\n      const timeSpanOnlyState = { subscriber: this, window, windowTimeSpan };\n      this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  protected _next(value: T) {\n    const windows = this.windows;\n    const len = windows.length;\n    for (let i = 0; i < len; i++) {\n      const window = windows[i];\n      if (!window.isUnsubscribed) {\n        window.next(value);\n      }\n    }\n  }\n\n  protected _error(err: any) {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      const window = windows.shift();\n      if (!window.isUnsubscribed) {\n        window.complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  openWindow(): Subject<T> {\n    const window = new Subject<T>();\n    this.windows.push(window);\n    const destination = this.destination;\n    destination.add(window);\n    destination.next(window);\n    return window;\n  }\n\n  closeWindow(window: Subject<T>) {\n    window.complete();\n    const windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  }\n}\n\ninterface TimeSpanOnlyState<T> {\n  window: Subject<any>;\n  windowTimeSpan: number;\n  subscriber: WindowTimeSubscriber<T>;\n}\n\nfunction dispatchWindowTimeSpanOnly<T>(state: TimeSpanOnlyState<T>) {\n  const { subscriber, windowTimeSpan, window } = state;\n  if (window) {\n    window.complete();\n  }\n  state.window = subscriber.openWindow();\n  (<any>this).schedule(state, windowTimeSpan);\n}\n\ninterface Context<T> {\n  action: Action<CreationState<T>>;\n  subscription: Subscription;\n}\n\ninterface DispatchArg<T> {\n  subscriber: WindowTimeSubscriber<T>;\n  window: Subject<T>;\n  context: Context<T>;\n}\n\nfunction dispatchWindowCreation<T>(state: CreationState<T>) {\n  let { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n  let window = subscriber.openWindow();\n  let action = <Action<CreationState<T>>>this;\n  let context: Context<T> = { action, subscription: <any>null };\n  const timeSpanState: DispatchArg<T> = { subscriber, window, context };\n  context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose<T>(arg: DispatchArg<T>) {\n  const { subscriber, window, context } = arg;\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n  subscriber.closeWindow(window);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/windowTime.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\nimport {Subject} from '../Subject';\nimport {Subscription} from '../Subscription';\n\nimport {tryCatch} from '../util/tryCatch';\nimport {errorObject} from '../util/errorObject';\n\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle<T, O>(openings: Observable<O>,\n                                   closingSelector: (openValue: O) => Observable<any>): Observable<Observable<T>> {\n  return this.lift(new WindowToggleOperator<T, O>(openings, closingSelector));\n}\n\nexport interface WindowToggleSignature<T> {\n  <O>(openings: Observable<O>, closingSelector: (openValue: O) => Observable<any>): Observable<Observable<T>>;\n}\n\nclass WindowToggleOperator<T, O> implements Operator<T, Observable<T>> {\n\n  constructor(private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source._subscribe(new WindowToggleSubscriber(\n      subscriber, this.openings, this.closingSelector\n    ));\n  }\n}\n\ninterface WindowContext<T> {\n  window: Subject<T>;\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowToggleSubscriber<T, O> extends OuterSubscriber<T, any> {\n  private contexts: WindowContext<T>[] = [];\n  private openSubscription: Subscription;\n\n  constructor(destination: Subscriber<Observable<T>>,\n              private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n    super(destination);\n    this.add(this.openSubscription = subscribeToResult(this, openings, openings));\n  }\n\n  protected _next(value: T) {\n    const { contexts } = this;\n    if (contexts) {\n      const len = contexts.length;\n      for (let i = 0; i < len; i++) {\n        contexts[i].window.next(value);\n      }\n    }\n  }\n\n  protected _error(err: any) {\n\n    const { contexts } = this;\n    this.contexts = null;\n\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.error(err);\n        context.subscription.unsubscribe();\n      }\n    }\n\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.complete();\n        context.subscription.unsubscribe();\n      }\n    }\n    super._complete();\n  }\n\n  protected _unsubscribe() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.unsubscribe();\n        context.subscription.unsubscribe();\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n\n    if (outerValue === this.openings) {\n\n      const { closingSelector } = this;\n      const closingNotifier = tryCatch(closingSelector)(innerValue);\n\n      if (closingNotifier === errorObject) {\n        return this.error(errorObject.e);\n      } else {\n        const window = new Subject<T>();\n        const subscription = new Subscription();\n        const context = { window, subscription };\n        this.contexts.push(context);\n        const innerSubscription = subscribeToResult(this, closingNotifier, context);\n\n        if (innerSubscription.isUnsubscribed) {\n          this.closeWindow(this.contexts.length - 1);\n        } else {\n          (<any> innerSubscription).context = context;\n          subscription.add(innerSubscription);\n        }\n\n        this.destination.next(window);\n\n      }\n    } else {\n      this.closeWindow(this.contexts.indexOf(outerValue));\n    }\n  }\n\n  notifyError(err: any): void {\n    this.error(err);\n  }\n\n  notifyComplete(inner: Subscription): void {\n    if (inner !== this.openSubscription) {\n      this.closeWindow(this.contexts.indexOf((<any> inner).context));\n    }\n  }\n\n  private closeWindow(index: number): void {\n    if (index === -1) {\n      return;\n    }\n\n    const { contexts } = this;\n    const context = contexts[index];\n    const { window, subscription } = context;\n    contexts.splice(index, 1);\n    window.complete();\n    subscription.unsubscribe();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/windowToggle.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\nimport {Subject} from '../Subject';\nimport {Subscription} from '../Subscription';\n\nimport {tryCatch} from '../util/tryCatch';\nimport {errorObject} from '../util/errorObject';\n\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen<T>(closingSelector: () => Observable<any>): Observable<Observable<T>> {\n  return this.lift(new WindowOperator<T>(closingSelector));\n}\n\nexport interface WindowWhenSignature<T> {\n  (closingSelector: () => Observable<any>): Observable<Observable<T>>;\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source._subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n  private window: Subject<T>;\n  private closingNotification: Subscription;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openWindow();\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  }\n\n  private unsubscribeClosingNotification(): void {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  }\n\n  private openWindow(innerSub: InnerSubscriber<T, any> = null): void {\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const window = this.window = new Subject<T>();\n    this.destination.next(window);\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n    if (closingNotifier === errorObject) {\n      const err = errorObject.e;\n      this.destination.error(err);\n      this.window.error(err);\n    } else {\n      this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n      this.add(window);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/windowWhen.ts\n **/","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable, ObservableInput} from '../Observable';\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {InnerSubscriber} from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {Observable} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom<T, R>(...args: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  let project: any;\n  if (typeof args[args.length - 1] === 'function') {\n    project = args.pop();\n  }\n  const observables = <Observable<any>[]>args;\n  return this.lift(new WithLatestFromOperator(observables, project));\n}\n\n/* tslint:disable:max-line-length */\nexport interface WithLatestFromSignature<T> {\n  <R>(project: (v1: T) => R): Observable<R>;\n  <T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\n  <T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\n  <T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\n  <T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\n  <T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n\n  <T2>(v2: ObservableInput<T2>): Observable<[T, T2]>;\n  <T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\n  <T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\n  <T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\n  <T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\n  <R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n  <R>(array: ObservableInput<any>[]): Observable<R>;\n  <R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): Observable<R>;\n}\n/* tslint:enable:max-line-length */\n\nclass WithLatestFromOperator<T, R> implements Operator<T, R> {\n  constructor(private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source._subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WithLatestFromSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private values: any[];\n  private toRespond: number[] = [];\n\n  constructor(destination: Subscriber<R>,\n              private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n    super(destination);\n    const len = observables.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n\n    for (let i = 0; i < len; i++) {\n      let observable = observables[i];\n      this.add(subscribeToResult<T, R>(this, observable, <any>observable, i));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.values[outerIndex] = innerValue;\n    const toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      const found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  }\n\n  notifyComplete() {\n    // noop\n  }\n\n  protected _next(value: T) {\n    if (this.toRespond.length === 0) {\n      const args = [value, ...this.values];\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  }\n\n  private _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/withLatestFrom.ts\n **/","import {ZipOperator} from './zip';\nimport {Observable} from '../Observable';\n\n/**\n * @param project\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method zipAll\n * @owner Observable\n */\nexport function zipAll<T, R>(project?: (...values: Array<any>) => R): Observable<R> {\n  return this.lift(new ZipOperator(project));\n}\n\nexport interface ZipAllSignature<T> {\n  (): Observable<T[]>;\n  <R>(project?: (...values: Array<T>) => R): Observable<R>;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/operator/zipAll.ts\n **/","import {Action} from './Action';\nimport {Immediate} from '../util/Immediate';\nimport {FutureAction} from './FutureAction';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction<T> extends FutureAction<T> {\n\n  protected _schedule(state?: T, delay: number = 0): Action<T> {\n    if (delay > 0) {\n      return super._schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    const {scheduler} = this;\n    scheduler.actions.push(this);\n    if (!scheduler.scheduledId) {\n      scheduler.scheduledId = Immediate.setImmediate(() => {\n        scheduler.scheduledId = null;\n        scheduler.flush();\n      });\n    }\n    return this;\n  }\n\n  protected _unsubscribe(): void {\n\n    const {scheduler} = this;\n    const {scheduledId, actions} = scheduler;\n\n    super._unsubscribe();\n\n    if (actions.length === 0) {\n      scheduler.active = false;\n      if (scheduledId != null) {\n        scheduler.scheduledId = null;\n        Immediate.clearImmediate(scheduledId);\n      }\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/scheduler/AsapAction.ts\n **/","import {Action} from './Action';\nimport {AsapAction} from './AsapAction';\nimport {Subscription} from '../Subscription';\nimport {QueueScheduler} from './QueueScheduler';\n\nexport class AsapScheduler extends QueueScheduler {\n  scheduleNow<T>(work: (x?: T) => Subscription, state?: T): Action<T> {\n    return new AsapAction(this, work).schedule(state);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/scheduler/AsapScheduler.ts\n **/","import {Action} from './Action';\nimport {FutureAction} from './FutureAction';\nimport {Subscription} from '../Subscription';\nimport {QueueScheduler} from './QueueScheduler';\n\nexport class AsyncScheduler extends QueueScheduler {\n  scheduleNow<T>(work: (x?: T) => Subscription, state?: T): Action<T> {\n    return new FutureAction(this, work).schedule(state, 0);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/scheduler/AsyncScheduler.ts\n **/","import {Action} from './Action';\nimport {FutureAction} from './FutureAction';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends FutureAction<T> {\n  protected _schedule(state?: T, delay: number = 0): Action<T> {\n    if (delay > 0) {\n      return super._schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    const scheduler = this.scheduler;\n    scheduler.actions.push(this);\n    scheduler.flush();\n    return this;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/scheduler/QueueAction.ts\n **/","export class FastMap {\n  private values: Object = {};\n\n  delete(key: string): boolean {\n    this.values[key] = null;\n    return true;\n  }\n\n  set(key: string, value: any): FastMap {\n    this.values[key] = value;\n    return this;\n  }\n\n  get(key: string): any {\n    return this.values[key];\n  }\n\n  forEach(cb: (value: any, key: any) => void, thisArg?: any): void {\n    const values = this.values;\n    for (let key in values) {\n      if (values.hasOwnProperty(key) && values[key] !== null) {\n        cb.call(thisArg, values[key], key);\n      }\n    }\n  }\n\n  clear(): void {\n    this.values = {};\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/FastMap.ts\n **/","/**\nSome credit for this helper goes to http://github.com/YuzuJS/setImmediate\n*/\n\nimport { root } from './root';\n\nexport class ImmediateDefinition {\n  setImmediate: (cb: () => void) => number;\n\n  clearImmediate: (handle: number) => void;\n\n  private identify(o: any): string {\n    return this.root.Object.prototype.toString.call(o);\n  }\n\n  tasksByHandle: any;\n\n  nextHandle: number;\n\n  currentlyRunningATask: boolean;\n\n  constructor(private root: any) {\n    if (root.setImmediate && typeof root.setImmediate === 'function') {\n      this.setImmediate = root.setImmediate.bind(root);\n      this.clearImmediate = root.clearImmediate.bind(root);\n    } else {\n      this.nextHandle = 1;\n      this.tasksByHandle = {};\n      this.currentlyRunningATask = false;\n\n      // Don't get fooled by e.g. browserify environments.\n      if (this.canUseProcessNextTick()) {\n        // For Node.js before 0.9\n        this.setImmediate = this.createProcessNextTickSetImmediate();\n      } else if (this.canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        this.setImmediate = this.createPostMessageSetImmediate();\n      } else if (this.canUseMessageChannel()) {\n        // For web workers, where supported\n        this.setImmediate = this.createMessageChannelSetImmediate();\n      } else if (this.canUseReadyStateChange()) {\n        // For IE 6–8\n        this.setImmediate = this.createReadyStateChangeSetImmediate();\n      } else {\n        // For older browsers\n        this.setImmediate = this.createSetTimeoutSetImmediate();\n      }\n\n      let ci = function clearImmediate(handle: any) {\n        delete (<any>clearImmediate).instance.tasksByHandle[handle];\n      };\n\n      (<any>ci).instance = this;\n\n      this.clearImmediate = ci;\n    }\n  }\n\n  canUseProcessNextTick() {\n    return this.identify(this.root.process) === '[object process]';\n  }\n\n  canUseMessageChannel() {\n    return Boolean(this.root.MessageChannel);\n  }\n\n  canUseReadyStateChange() {\n    const document = this.root.document;\n    return Boolean(document && 'onreadystatechange' in document.createElement('script'));\n  }\n\n  canUsePostMessage() {\n    const root = this.root;\n    // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n    // where `root.postMessage` means something completely different and can't be used for this purpose.\n    if (root.postMessage && !root.importScripts) {\n      let postMessageIsAsynchronous = true;\n      let oldOnMessage = root.onmessage;\n      root.onmessage = function() {\n        postMessageIsAsynchronous = false;\n      };\n      root.postMessage('', '*');\n      root.onmessage = oldOnMessage;\n      return postMessageIsAsynchronous;\n    }\n\n    return false;\n  }\n\n  // This function accepts the same arguments as setImmediate, but\n  // returns a function that requires no arguments.\n  partiallyApplied(handler: any, ...args: any[]) {\n    let fn = function result () {\n      const { handler, args } = <any>result;\n      if (typeof handler === 'function') {\n        handler.apply(undefined, args);\n      } else {\n        (new Function('' + handler))();\n      }\n    };\n\n    (<any>fn).handler = handler;\n    (<any>fn).args = args;\n\n    return fn;\n  }\n\n  addFromSetImmediateArguments(args: any[]) {\n    this.tasksByHandle[this.nextHandle] = this.partiallyApplied.apply(undefined, args);\n    return this.nextHandle++;\n  }\n\n  createProcessNextTickSetImmediate() {\n    let fn = function setImmediate() {\n      const { instance } = (<any>setImmediate);\n      let handle = instance.addFromSetImmediateArguments(arguments);\n      instance.root.process.nextTick(instance.partiallyApplied(instance.runIfPresent, handle));\n      return handle;\n    };\n\n    (<any>fn).instance = this;\n\n    return fn;\n  }\n\n  createPostMessageSetImmediate() {\n    // Installs an event handler on `global` for the `message` event: see\n    // * https://developer.mozilla.org/en/DOM/window.postMessage\n    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n    const root = this.root;\n\n    let messagePrefix = 'setImmediate$' + root.Math.random() + '$';\n    let onGlobalMessage = function globalMessageHandler(event: any) {\n      const instance = (<any>globalMessageHandler).instance;\n      if (event.source === root &&\n        typeof event.data === 'string' &&\n        event.data.indexOf(messagePrefix) === 0) {\n        instance.runIfPresent(+event.data.slice(messagePrefix.length));\n      }\n    };\n    (<any>onGlobalMessage).instance = this;\n\n    root.addEventListener('message', onGlobalMessage, false);\n\n    let fn = function setImmediate() {\n      const { messagePrefix, instance } = (<any>setImmediate);\n      let handle = instance.addFromSetImmediateArguments(arguments);\n      instance.root.postMessage(messagePrefix + handle, '*');\n      return handle;\n    };\n\n    (<any>fn).instance = this;\n    (<any>fn).messagePrefix = messagePrefix;\n\n    return fn;\n  }\n\n  runIfPresent(handle: any) {\n    // From the spec: 'Wait until any invocations of this algorithm started before this one have completed.'\n    // So if we're currently running a task, we'll need to delay this invocation.\n    if (this.currentlyRunningATask) {\n      // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n      // 'too much recursion' error.\n      this.root.setTimeout(this.partiallyApplied(this.runIfPresent, handle), 0);\n    } else {\n      let task = this.tasksByHandle[handle];\n      if (task) {\n        this.currentlyRunningATask = true;\n        try {\n          task();\n        } finally {\n          this.clearImmediate(handle);\n          this.currentlyRunningATask = false;\n        }\n      }\n    }\n  }\n\n  createMessageChannelSetImmediate() {\n    let channel = new this.root.MessageChannel();\n    channel.port1.onmessage = (event: any) => {\n      let handle = event.data;\n      this.runIfPresent(handle);\n    };\n\n    let fn = function setImmediate() {\n      const { channel, instance } = (<any>setImmediate);\n      let handle = instance.addFromSetImmediateArguments(arguments);\n      channel.port2.postMessage(handle);\n      return handle;\n    };\n\n    (<any>fn).channel = channel;\n    (<any>fn).instance = this;\n\n    return fn;\n  }\n\n  createReadyStateChangeSetImmediate() {\n    let fn = function setImmediate() {\n      const instance = (<any>setImmediate).instance;\n      const root = instance.root;\n      const doc = root.document;\n      const html = doc.documentElement;\n\n      let handle = instance.addFromSetImmediateArguments(arguments);\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      let script = doc.createElement('script');\n      script.onreadystatechange = () => {\n        instance.runIfPresent(handle);\n        script.onreadystatechange = null;\n        html.removeChild(script);\n        script = null;\n      };\n      html.appendChild(script);\n      return handle;\n    };\n\n    (<any>fn).instance = this;\n\n    return fn;\n  }\n\n  createSetTimeoutSetImmediate() {\n    let fn = function setImmediate() {\n      const instance = (<any>setImmediate).instance;\n      let handle = instance.addFromSetImmediateArguments(arguments);\n      instance.root.setTimeout(instance.partiallyApplied(instance.runIfPresent, handle), 0);\n      return handle;\n    };\n\n    (<any>fn).instance = this;\n\n    return fn;\n  }\n}\nexport const Immediate = new ImmediateDefinition(root);\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/Immediate.ts\n **/","import {root} from './root';\nimport {MapPolyfill} from './MapPolyfill';\n\nexport const Map = root.Map || (() => MapPolyfill)();\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/Map.ts\n **/","export class MapPolyfill {\n  public size = 0;\n  private _values: any[] = [];\n  private _keys: any[] = [];\n\n  get(key: any) {\n    const i = this._keys.indexOf(key);\n    return i === -1 ? undefined : this._values[i];\n  }\n\n  set(key: any, value: any) {\n    const i = this._keys.indexOf(key);\n    if (i === -1) {\n      this._keys.push(key);\n      this._values.push(value);\n      this.size++;\n    } else {\n      this._values[i] = value;\n    }\n    return this;\n  }\n\n  delete(key: any): boolean {\n    const i = this._keys.indexOf(key);\n    if (i === -1) { return false; }\n    this._values.splice(i, 1);\n    this._keys.splice(i, 1);\n    this.size--;\n    return true;\n  }\n\n  clear(): void {\n    this._keys.length = 0;\n    this._values.length = 0;\n    this.size = 0;\n  }\n\n  forEach(cb: Function, thisArg: any): void {\n    for (let i = 0; i < this.size; i++) {\n      cb.call(thisArg, this._values[i], this._keys[i]);\n    }\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/MapPolyfill.ts\n **/","export function not(pred: Function, thisArg: any): Function {\n  function notPred(): any {\n    return !((<any> notPred).pred.apply((<any> notPred).thisArg, arguments));\n  }\n  (<any> notPred).pred = pred;\n  (<any> notPred).thisArg = thisArg;\n  return notPred;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/not.ts\n **/","import {PartialObserver} from '../Observer';\nimport {Subscriber} from '../Subscriber';\nimport {$$rxSubscriber} from '../symbol/rxSubscriber';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver && typeof nextOrObserver === 'object') {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    } else if (typeof nextOrObserver[$$rxSubscriber] === 'function') {\n      return nextOrObserver[$$rxSubscriber]();\n    }\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/chomsky/~/rxjs/src/util/toSubscriber.ts\n **/","'use strict';\n\nmodule.exports = function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/symbol-observable/ponyfill.js\n ** module id = 553\n ** module chunks = 1\n **/"],"sourceRoot":""}